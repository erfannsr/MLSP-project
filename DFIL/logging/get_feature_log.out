nohup: ignoring input
/home/erfan/miniconda3/lib/python3.12/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/erfan/miniconda3/lib/python3.12/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
get_feature = True
the number of images:  10905
Len Train dataset = 10905
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.7570,  11.4019],
        [  4.2700,  -4.5281],
        [-11.4246,  11.0503],
        [  1.0379,  -1.2035],
        [  7.9432,  -8.5219],
        [ -6.4872,   6.1895],
        [ -8.5534,   8.2149],
        [ -4.0002,   3.7654]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.0041,  8.7233],
        [ 6.3390, -6.7962],
        [ 2.1432, -2.2901],
        [-8.2387,  7.9064],
        [-6.0025,  5.7322],
        [ 6.8403, -7.2758],
        [ 2.0372, -2.2023],
        [ 0.7822, -0.9723]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.3942,  -4.6448],
        [-11.8964,  11.4261],
        [-11.5265,  11.0943],
        [  1.3595,  -1.5030],
        [ -5.4305,   5.0774],
        [  3.4749,  -3.7011],
        [ -2.4449,   2.2494],
        [ -8.4666,   8.1694]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6768,  -5.9951],
        [  0.3922,  -0.5251],
        [ -9.2967,   9.0141],
        [  1.6031,  -1.8076],
        [ -5.5226,   5.3122],
        [  3.1556,  -3.3147],
        [-10.6459,  10.2939],
        [ -7.4530,   7.1560]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.7598,   3.5149],
        [-10.2335,   9.8962],
        [-11.8330,  11.4096],
        [  5.4558,  -5.8133],
        [ -1.2396,   1.0596],
        [  0.1758,  -0.3196],
        [  1.3445,  -1.5191],
        [-13.4819,  12.9658]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.2262,  10.7602],
        [  6.1336,  -6.6098],
        [  6.7378,  -7.1441],
        [ -0.2062,   0.0629],
        [ -8.7527,   8.4144],
        [-11.3589,  10.9242],
        [  4.5281,  -4.7497],
        [-11.1706,  10.8430]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.2569,  8.9089],
        [-6.3865,  6.0969],
        [-0.2658,  0.0921],
        [ 6.5801, -7.1203],
        [-8.5237,  8.2425],
        [ 0.8466, -0.9960],
        [ 4.7149, -5.0283],
        [-4.9030,  4.6594]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.2029,   2.0034],
        [  7.2229,  -7.7374],
        [  5.6643,  -6.0254],
        [  4.3403,  -4.7136],
        [  4.7404,  -5.0182],
        [ -5.4491,   5.2234],
        [  4.3249,  -4.7137],
        [-10.1898,   9.8429]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.5010,  11.0812],
        [  6.0080,  -6.4682],
        [  3.6469,  -3.8229],
        [  2.3787,  -2.5368],
        [  5.8990,  -6.2879],
        [  3.9183,  -4.1504],
        [-13.4711,  13.0301],
        [  3.2566,  -3.4743]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.5994,   9.2664],
        [-14.1165,  13.6744],
        [ -2.9041,   2.7229],
        [  3.6513,  -3.9227],
        [ -9.6921,   9.3651],
        [  2.8876,  -3.0557],
        [-11.3332,  10.9987],
        [-11.2834,  10.9150]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.3290,   1.1645],
        [  0.5996,  -0.7777],
        [  4.4805,  -4.8010],
        [-10.2064,   9.8178],
        [-11.8590,  11.5180],
        [  3.6920,  -3.9228],
        [-11.1277,  10.6741],
        [  6.8114,  -7.3619]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.3548,   8.0727],
        [ -7.1200,   6.8449],
        [-11.8186,  11.3655],
        [  5.6208,  -5.9673],
        [ -5.5527,   5.3144],
        [-11.8200,  11.4064],
        [-12.3611,  11.9807],
        [ -1.9503,   1.7565]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  8.7677,  -9.4478],
        [ -5.7670,   5.5375],
        [-10.2203,   9.8888],
        [ -0.0589,  -0.1496],
        [ -7.9595,   7.7022],
        [  1.2136,  -1.3977],
        [  0.8978,  -1.0643],
        [  4.9895,  -5.3181]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.8472,  -0.9893],
        [  5.7681,  -6.1326],
        [ -2.4312,   2.2354],
        [ -7.6158,   7.3147],
        [  2.9655,  -3.1403],
        [ -9.7442,   9.3945],
        [ -8.2823,   7.9840],
        [-10.7526,  10.3991]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.8812,   0.6699],
        [  0.5938,  -0.7617],
        [ -8.0259,   7.7251],
        [  2.3425,  -2.5188],
        [-12.4527,  12.0225],
        [ -7.7255,   7.4653],
        [  7.7493,  -8.2897],
        [-10.0745,   9.7155]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.7559,  11.3857],
        [ -4.8090,   4.5920],
        [ -6.5511,   6.2899],
        [  5.7848,  -6.1262],
        [ -5.3261,   5.0766],
        [ -3.9051,   3.6778],
        [-13.3733,  12.9456],
        [ -0.4859,   0.3216]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.4807,  12.0551],
        [ -6.5171,   6.2671],
        [  7.6025,  -8.1894],
        [ -6.7900,   6.5200],
        [-10.0141,   9.6576],
        [ -6.9585,   6.6481],
        [ -0.1862,   0.0388],
        [  3.8685,  -4.0714]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.1038,  0.9432],
        [ 1.8734, -2.0468],
        [-8.8430,  8.5252],
        [-5.1113,  4.8710],
        [ 4.9379, -5.2280],
        [ 7.9647, -8.5180],
        [ 1.9990, -2.1555],
        [-3.9558,  3.7328]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.4046, -5.7107],
        [-6.9640,  6.7225],
        [-8.8575,  8.5337],
        [ 5.9986, -6.3894],
        [-7.9852,  7.6644],
        [-9.2166,  8.8412],
        [ 4.2105, -4.4528],
        [ 1.0213, -1.1633]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.8117,  -4.0509],
        [  6.0518,  -6.3882],
        [  3.8244,  -4.0340],
        [  0.2247,  -0.3971],
        [  9.4753, -10.1987],
        [-11.9389,  11.5249],
        [  3.5681,  -3.8661],
        [-13.1659,  12.6984]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.6180, -2.8247],
        [ 3.9441, -4.2039],
        [-2.8837,  2.6867],
        [ 5.8378, -6.2664],
        [ 0.1209, -0.2651],
        [-0.5800,  0.4142],
        [-1.2786,  1.0981],
        [ 8.3436, -8.9614]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.2483,  -6.7117],
        [  5.3146,  -5.6169],
        [ -8.3858,   8.0901],
        [ -9.2672,   8.9720],
        [  6.6069,  -7.0819],
        [  4.3113,  -4.5855],
        [-14.2011,  13.7740],
        [  2.5826,  -2.7480]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.1075,   6.8347],
        [  0.5645,  -0.7189],
        [  3.3733,  -3.6407],
        [  2.3978,  -2.5976],
        [ -9.1458,   8.8026],
        [  2.4407,  -2.5871],
        [-11.2897,  10.9045],
        [ -8.4529,   8.1806]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.2714,  -2.5307],
        [  4.5155,  -4.8241],
        [  6.8122,  -7.2693],
        [-11.7085,  11.2897],
        [  5.5341,  -5.8561],
        [ -9.6350,   9.3297],
        [  2.4688,  -2.6636],
        [ -9.9119,   9.5991]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.4956,   9.1505],
        [-11.1172,  10.7312],
        [-10.7937,  10.4020],
        [  4.5460,  -4.7555],
        [ -6.6452,   6.3770],
        [  5.3802,  -5.7234],
        [  4.0663,  -4.2957],
        [ -7.7349,   7.4635]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.4659, -5.8293],
        [ 5.3919, -5.7082],
        [ 3.7107, -3.9129],
        [ 4.6742, -4.9738],
        [ 5.7059, -6.1240],
        [ 3.4324, -3.5899],
        [ 4.6669, -4.9451],
        [ 3.2743, -3.4722]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.7632,  6.4881],
        [-8.8181,  8.4963],
        [ 4.1438, -4.3635],
        [-9.7588,  9.3625],
        [ 5.9338, -6.3290],
        [ 7.0815, -7.6227],
        [-9.9418,  9.5954],
        [-8.5556,  8.0859]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-3.4300,  3.2012],
        [ 2.6237, -2.8170],
        [-8.7807,  8.4638],
        [ 0.2268, -0.3781],
        [ 2.9356, -3.1508],
        [-3.8630,  3.6445],
        [-1.3368,  1.1619],
        [ 3.7059, -3.9729]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.8122,  -7.3169],
        [  6.2848,  -6.7378],
        [ -5.5825,   5.3589],
        [  6.9999,  -7.4768],
        [-10.7467,  10.3559],
        [ -9.0048,   8.6981],
        [  4.9165,  -5.2282],
        [  2.8003,  -2.9846]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.3146,   9.9544],
        [-11.1556,  10.5869],
        [  2.0515,  -2.2341],
        [  4.0884,  -4.4164],
        [ -2.4377,   2.2459],
        [ -5.7974,   5.5427],
        [ 10.0123, -10.7575],
        [  6.1205,  -6.5341]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.3600,   7.0570],
        [ -2.2335,   2.0591],
        [ -1.4444,   1.2734],
        [ -9.9957,   9.6545],
        [-11.3178,  10.9211],
        [ -4.6720,   4.4497],
        [  3.7201,  -3.9505],
        [ -9.5390,   9.2350]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.8522,  5.5975],
        [-7.5769,  7.2982],
        [ 4.9699, -5.3866],
        [ 1.0312, -1.2076],
        [-9.0326,  8.7097],
        [-2.4708,  2.2838],
        [ 0.3767, -0.5162],
        [-9.1215,  8.7504]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7865,   8.4976],
        [ -4.9509,   4.7186],
        [ -9.4518,   9.0901],
        [ -1.3918,   1.1940],
        [ -3.7237,   3.5001],
        [ -8.5566,   8.2331],
        [-11.8940,  11.4493],
        [  8.4785,  -9.1166]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.7740,  -2.9335],
        [-12.7386,  12.3212],
        [ -8.6098,   8.3137],
        [-11.0713,  10.7379],
        [  4.5651,  -4.8583],
        [ -5.1876,   4.9409],
        [  3.6118,  -3.8198],
        [-12.8631,  12.4388]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-4.0438,  3.8166],
        [ 2.1513, -2.3279],
        [-6.0456,  5.7760],
        [-6.6315,  6.3848],
        [ 0.2381, -0.4470],
        [ 7.6170, -8.1799],
        [ 4.0051, -4.1991],
        [ 5.5711, -5.8814]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.1450,   4.9136],
        [ -2.5218,   2.3116],
        [ -9.4673,   9.1750],
        [  4.9685,  -5.3171],
        [-11.6291,  11.2002],
        [  9.3436, -10.0835],
        [ -5.4988,   5.2485],
        [-12.9328,  12.4994]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.1402, -5.4255],
        [ 4.2044, -4.4697],
        [-4.3972,  4.1545],
        [ 1.2438, -1.4082],
        [-7.2723,  6.9892],
        [ 3.0457, -3.2005],
        [-8.7380,  8.4099],
        [-9.9811,  9.6124]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.8933, -1.0889],
        [ 4.9303, -5.2119],
        [-8.3964,  8.0651],
        [-0.9269,  0.7489],
        [-9.7255,  9.3640],
        [ 1.0753, -1.2496],
        [-4.5030,  4.3036],
        [-8.6159,  8.3159]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4843,   6.2578],
        [-11.0308,  10.6138],
        [  3.5862,  -3.8098],
        [ -7.2123,   6.9537],
        [ -2.2867,   2.1235],
        [ -7.4324,   7.1723],
        [  6.5007,  -6.9818],
        [  4.9244,  -5.2382]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.2495,  -3.4586],
        [-10.5237,  10.1369],
        [  2.1322,  -2.2892],
        [-14.9984,  14.5001],
        [ -0.2805,   0.1035],
        [-13.5576,  13.1103],
        [ -8.8800,   8.5325],
        [  5.8995,  -6.2971]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.1626, -3.4642],
        [ 0.3505, -0.5347],
        [ 5.5625, -5.9761],
        [-5.6899,  5.4518],
        [ 2.7803, -2.9982],
        [ 7.1870, -7.6819],
        [-5.2065,  4.9645],
        [ 6.5201, -6.9534]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.9844,  -7.4795],
        [  0.8547,  -0.9888],
        [ -9.9293,   9.5631],
        [ -8.1082,   7.7904],
        [  2.6667,  -2.8239],
        [ -7.3022,   6.9953],
        [ -5.3935,   5.1211],
        [-11.4800,  11.0473]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.5441,  1.3676],
        [ 6.1367, -6.5021],
        [-6.6176,  6.3522],
        [ 1.7409, -1.9755],
        [-8.1730,  7.8815],
        [ 2.5292, -2.7680],
        [ 0.3877, -0.5538],
        [-9.3578,  9.0448]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-2.6805,  2.4833],
        [-6.5236,  6.2577],
        [-6.5210,  6.2812],
        [ 2.5591, -2.7502],
        [-7.0941,  6.8442],
        [-8.3909,  8.0498],
        [ 0.6944, -0.8610],
        [ 4.0793, -4.3183]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.9025, -7.3779],
        [-8.6587,  8.3612],
        [ 4.6666, -4.9604],
        [ 1.9462, -2.1549],
        [ 4.4905, -4.8140],
        [-9.2112,  8.8855],
        [-5.8419,  5.5794],
        [ 2.6497, -2.8273]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.8066,  -8.3613],
        [-10.3672,   9.9946],
        [-10.2679,   9.9286],
        [  5.3947,  -5.9950],
        [-12.1798,  11.7906],
        [  1.0226,  -1.1773],
        [ -8.3954,   8.1242],
        [ -5.5345,   5.3054]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.3063,  11.8235],
        [  0.7393,  -0.8957],
        [  6.1297,  -6.5380],
        [  3.5568,  -3.9746],
        [-14.1309,  13.6386],
        [  6.1562,  -6.5631],
        [ -5.3732,   5.1730],
        [-10.7027,  10.3266]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.8374,  -7.2735],
        [ -3.9167,   3.6908],
        [  3.7959,  -3.9636],
        [  4.4912,  -4.7348],
        [ -9.1250,   8.8252],
        [-10.4587,  10.0943],
        [  5.0470,  -5.3700],
        [ -7.6547,   7.3336]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.5617,  6.2792],
        [-2.9581,  2.7851],
        [ 2.3124, -2.4691],
        [ 3.4536, -3.7219],
        [-7.4873,  7.1933],
        [ 5.7690, -6.1089],
        [ 4.7503, -4.9972],
        [-4.7597,  4.5326]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.3054,   7.0391],
        [  4.7239,  -5.0256],
        [  4.8410,  -5.1799],
        [-13.0804,  12.6931],
        [-11.1613,  10.7329],
        [ -5.3421,   5.1160],
        [-10.1665,   9.8835],
        [ -5.5182,   5.2775]], device='cuda:0')
Iteration Acc 1.0000
tensor([1, 0, 0, 1, 1, 1, 1, 1], device='cuda:0')
tensor([1, 0, 0, 1, 1, 1, 1, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.9466,  8.6773],
        [-9.6430,  9.2998],
        [-5.2177,  4.9564],
        [-2.4951,  2.2876],
        [-9.4265,  9.0559],
        [-8.8404,  8.5421],
        [ 4.8854, -5.1156],
        [ 5.6060, -5.9267]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.6683,  11.2640],
        [  3.9095,  -4.1043],
        [ -2.4594,   2.2402],
        [ -2.4775,   2.2880],
        [-11.1500,  10.7495],
        [ -8.0292,   7.7158],
        [ -4.4520,   4.2058],
        [ -9.5819,   9.2051]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.3011,  -3.5074],
        [-10.2749,   9.9050],
        [ -7.2380,   6.9613],
        [ -4.3975,   4.1794],
        [ -0.2461,   0.1102],
        [  5.5957,  -5.9379],
        [ -2.5017,   2.3118],
        [ -6.4487,   6.1832]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.0763,  -6.4122],
        [-10.0432,   9.6786],
        [ -4.4023,   4.1290],
        [ -1.6231,   1.4434],
        [ -0.5873,   0.3984],
        [-10.7050,  10.3728],
        [ -9.5286,   9.1937],
        [ -7.5898,   7.3272]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3856,  -5.8249],
        [ -6.1262,   5.8593],
        [ -7.6121,   7.3244],
        [ -6.3041,   6.0510],
        [ -1.2672,   1.0958],
        [ -8.5467,   8.2404],
        [-13.9224,  13.3828],
        [ -8.1931,   7.8504]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1543,  11.7123],
        [ -1.6217,   1.4438],
        [  3.7491,  -3.9796],
        [-10.4918,  10.1424],
        [ -9.7552,   9.3855],
        [  8.3302,  -8.9448],
        [ -0.5341,   0.3717],
        [ -8.9509,   8.6254]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  8.2677,  -8.9028],
        [  5.1254,  -5.3962],
        [  3.5647,  -3.7379],
        [ -1.4059,   1.2046],
        [  4.3428,  -4.6103],
        [  3.9807,  -4.2319],
        [  4.6276,  -4.9830],
        [-12.6598,  12.2407]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.7890,  -4.0400],
        [  0.1552,  -0.3332],
        [ -6.9002,   6.5969],
        [ -1.3445,   1.1695],
        [ -6.6070,   6.3552],
        [-10.1151,   9.7774],
        [  2.8552,  -3.1262],
        [  4.8622,  -5.1394]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.8871,  -6.1577],
        [ -4.6115,   4.3849],
        [ -3.8628,   3.6350],
        [ -2.1274,   1.8802],
        [  5.5007,  -5.8488],
        [ -9.1444,   8.7817],
        [-11.6055,  11.2459],
        [-12.9499,  12.5491]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3291,   8.9821],
        [ -1.2643,   1.0584],
        [  5.5007,  -5.8434],
        [-12.0430,  11.6958],
        [  5.3808,  -5.6420],
        [ -6.5602,   6.3061],
        [ -5.2804,   5.0419],
        [ -6.3019,   6.0431]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.3238,  -0.5025],
        [  1.9470,  -2.1166],
        [-12.3950,  11.9655],
        [-10.2494,   9.8954],
        [  1.1553,  -1.3142],
        [ -0.3404,   0.1931],
        [  1.6193,  -1.7580],
        [ -1.9571,   1.7742]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.8361,  -3.0092],
        [  2.4455,  -2.6049],
        [ -9.9950,   9.6683],
        [ -8.5176,   8.2364],
        [-11.1040,  10.6655],
        [  6.2485,  -6.5603],
        [  3.0612,  -3.2383],
        [ -8.1550,   7.8456]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.9290,  -5.2582],
        [-10.2674,   9.9195],
        [-10.5739,  10.1764],
        [ -7.7052,   7.4041],
        [  2.3987,  -2.5794],
        [  2.9558,  -3.1163],
        [-11.8456,  11.4083],
        [-10.5633,  10.2185]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.6881,   8.3607],
        [  2.1516,  -2.2957],
        [ -9.8763,   9.5529],
        [-10.5741,  10.2631],
        [  3.4482,  -3.6925],
        [ -9.9123,   9.6185],
        [-10.6269,  10.2465],
        [  3.0600,  -3.2353]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.7593,  11.3919],
        [-11.9524,  11.5891],
        [ -9.8489,   9.4751],
        [-11.2822,  10.9079],
        [  4.6871,  -4.9284],
        [  5.0083,  -5.4459],
        [ -6.9225,   6.6637],
        [  3.9382,  -4.1863]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.1689,  4.9334],
        [ 7.1971, -7.7508],
        [-6.2495,  5.9888],
        [-8.2195,  7.9196],
        [-0.6722,  0.4848],
        [-9.1155,  8.7743],
        [ 5.0332, -5.3891],
        [-7.4022,  7.1260]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.8518,  -5.1833],
        [  5.5425,  -5.8700],
        [-10.5481,  10.1627],
        [ -8.9782,   8.6653],
        [  2.0903,  -2.3073],
        [ -7.4285,   7.1336],
        [ -8.5471,   8.2185],
        [-10.5272,  10.1619]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.6698,   6.3736],
        [-12.9008,  12.4774],
        [  5.8722,  -6.2328],
        [  4.4664,  -4.7013],
        [-10.7164,  10.3681],
        [  1.2848,  -1.4745],
        [-10.7225,  10.3331],
        [-10.5352,  10.1636]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.9511,  -6.3086],
        [ -8.5007,   8.2248],
        [-11.8278,  11.3815],
        [ -8.8791,   8.5446],
        [  1.9407,  -2.1385],
        [  1.0653,  -1.2186],
        [  1.8220,  -1.9679],
        [  0.3196,  -0.4480]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.1979, -3.3934],
        [ 4.5121, -4.7860],
        [ 2.2467, -2.4083],
        [ 3.4623, -3.6727],
        [ 3.6259, -3.8034],
        [-6.7609,  6.4779],
        [ 1.5907, -1.7357],
        [ 8.2614, -8.9013]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.4468,  10.1062],
        [ -8.4640,   8.1913],
        [  4.1559,  -4.3884],
        [ -8.4135,   8.1336],
        [-12.4147,  12.0452],
        [  3.1156,  -3.2939],
        [  4.8127,  -5.1251],
        [ -7.3020,   7.0649]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.8054,  10.3650],
        [  1.2831,  -1.4682],
        [  6.5046,  -6.8700],
        [ -2.3706,   2.1839],
        [  5.6932,  -6.1124],
        [  5.3967,  -5.7200],
        [-10.8567,  10.4876],
        [ -9.3086,   8.9923]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-3.2799,  3.0627],
        [-5.8371,  5.6025],
        [ 3.9154, -4.1348],
        [ 3.8657, -4.1575],
        [ 4.2392, -4.5675],
        [ 6.1645, -6.6671],
        [-7.9309,  7.6550],
        [ 4.1591, -4.4300]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.4175,   1.2501],
        [  5.8470,  -6.1640],
        [  0.1992,  -0.3393],
        [-11.4615,  11.0987],
        [-11.0859,  10.7501],
        [-10.1146,   9.7674],
        [ -2.9826,   2.7502],
        [  1.0340,  -1.1918]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.3192,   9.9391],
        [ -9.1007,   8.7872],
        [ -6.9333,   6.7113],
        [-10.0398,   9.7094],
        [  3.0096,  -3.2265],
        [-10.8681,  10.5451],
        [  3.6697,  -3.9391],
        [-10.3473,   9.9955]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.9895,   7.6890],
        [ -6.3422,   6.0509],
        [ -9.7714,   9.4238],
        [ -9.1231,   8.8405],
        [-12.5298,  12.1016],
        [  4.7707,  -5.0501],
        [  0.1884,  -0.3943],
        [ -4.6423,   4.4124]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.1823,  -4.6244],
        [-11.9309,  11.5122],
        [  3.4155,  -3.6732],
        [ -0.0654,  -0.0802],
        [  4.6451,  -4.9140],
        [ -0.0719,  -0.1052],
        [ -9.7332,   9.3955],
        [ -6.9355,   6.6475]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.2404,  -3.4923],
        [  0.0883,  -0.2777],
        [  3.7287,  -3.9053],
        [  9.8055, -10.5276],
        [-10.3542,  10.0051],
        [  5.3114,  -5.6551],
        [ -2.1472,   1.9634],
        [ -0.4487,   0.2835]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.2917,  -4.5299],
        [-12.5733,  12.1784],
        [  1.1959,  -1.3447],
        [-12.4046,  11.9978],
        [  1.3622,  -1.5479],
        [  8.2333,  -8.8420],
        [-15.0032,  14.4486],
        [-10.8959,  10.5197]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.5337,   9.2211],
        [  5.4058,  -5.7591],
        [  6.2948,  -6.7697],
        [-13.8374,  13.3535],
        [  5.9015,  -6.2935],
        [  6.0839,  -6.4803],
        [  5.4268,  -5.7742],
        [ -8.0115,   7.6981]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.3414,   5.0583],
        [  6.3870,  -6.7838],
        [  4.0918,  -4.4073],
        [ -4.8915,   4.6334],
        [-12.1939,  11.7794],
        [ -7.6970,   7.4170],
        [ -6.0044,   5.7350],
        [ -9.7976,   9.4953]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.2647,   8.0268],
        [  1.5904,  -1.7534],
        [  6.3471,  -6.8059],
        [ -0.0576,  -0.0744],
        [-11.0204,  10.6261],
        [ -6.4813,   6.1999],
        [  6.0898,  -6.5156],
        [ -5.2133,   4.9944]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.5050,   4.3046],
        [ -6.4765,   6.2175],
        [  2.7988,  -2.9524],
        [ -4.3941,   4.1794],
        [  4.6124,  -4.9204],
        [ -3.2809,   3.0737],
        [  6.6292,  -7.0345],
        [-10.0422,   9.6970]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.9210, -1.1106],
        [-9.2891,  8.9419],
        [ 2.4956, -2.7136],
        [-6.8982,  6.6509],
        [-1.9404,  1.7620],
        [ 4.6700, -5.0559],
        [ 7.0034, -7.4689],
        [ 4.5283, -4.7667]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.1133,  -3.3878],
        [-10.6481,  10.3545],
        [  3.7880,  -3.9435],
        [ -7.6074,   7.3269],
        [ -4.3729,   4.1434],
        [ -6.3984,   6.1326],
        [ -9.3618,   9.0906],
        [  2.0158,  -2.1757]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.9908,   7.6891],
        [ -8.7215,   8.4041],
        [-13.1464,  12.7008],
        [  4.9565,  -5.2345],
        [-13.7942,  13.3814],
        [-10.5529,  10.1922],
        [  2.7590,  -2.9287],
        [ -9.2803,   8.9844]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.0593,   9.6972],
        [  1.3686,  -1.5407],
        [-14.4865,  14.0173],
        [ -8.0269,   7.7341],
        [  0.6419,  -0.7992],
        [  3.9757,  -4.2851],
        [ -6.7235,   6.4687],
        [  0.4670,  -0.6023]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.4754,   4.2453],
        [  3.4406,  -3.6067],
        [  0.8974,  -1.0552],
        [-11.7343,  11.3132],
        [ -3.3774,   3.1578],
        [-11.5542,  11.1743],
        [-12.6268,  12.2580],
        [ -8.4482,   8.1288]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.3914,   3.1746],
        [ -8.9225,   8.6295],
        [-12.4182,  11.9646],
        [ -9.4670,   9.1342],
        [ -1.7183,   1.5302],
        [ -7.4587,   7.1957],
        [ -5.8824,   5.6166],
        [  1.8212,  -2.0284]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.1009,  7.7408],
        [ 3.7896, -4.0458],
        [-5.9144,  5.6454],
        [ 5.6896, -6.0567],
        [ 5.9170, -6.2833],
        [-8.5614,  8.2518],
        [ 4.7998, -5.0010],
        [-1.8550,  1.6633]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.9547,  -5.3097],
        [-12.6140,  12.2158],
        [-14.0979,  13.5995],
        [ -8.9233,   8.6528],
        [ -7.1440,   6.8616],
        [ -5.2726,   5.0079],
        [ -4.9210,   4.6500],
        [ -7.5841,   7.3097]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.2123,  -0.3490],
        [ -8.0771,   7.7600],
        [  4.6039,  -4.8530],
        [ -9.9291,   9.5998],
        [  0.3156,  -0.4738],
        [-11.0001,  10.6279],
        [  7.2113,  -7.6211],
        [ -0.8310,   0.6618]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.7028,  -6.0680],
        [-13.4461,  12.9326],
        [ -0.1903,   0.0394],
        [ -9.4340,   9.1344],
        [ -9.3682,   9.0716],
        [  0.8157,  -0.9781],
        [  4.4987,  -4.7806],
        [-11.6630,  11.3450]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.4158, -4.6855],
        [ 3.2022, -3.3919],
        [ 1.9066, -2.0722],
        [ 1.9520, -2.1020],
        [ 0.7578, -0.9028],
        [ 4.9591, -5.3046],
        [-6.2190,  5.9569],
        [-7.9836,  7.7098]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.6101,   9.2850],
        [  7.4340,  -7.9720],
        [ -5.5393,   5.2787],
        [-13.3731,  12.8462],
        [  3.3101,  -3.5347],
        [-11.0964,  10.7435],
        [-10.5860,  10.2626],
        [ -4.8641,   4.6295]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5157,  -4.7841],
        [ -4.1528,   3.9149],
        [  1.6359,  -1.8009],
        [  5.2405,  -5.6002],
        [-10.1356,   9.7450],
        [-11.2913,  10.9549],
        [  4.8551,  -5.1889],
        [ -9.1026,   8.7939]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  8.6957,  -9.4058],
        [-11.5540,  11.1627],
        [  8.0338,  -8.6699],
        [  1.7111,  -1.9438],
        [  7.6628,  -8.1913],
        [-10.5269,  10.1503],
        [  3.9230,  -4.1263],
        [  2.9630,  -3.1801]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.5239,  11.1431],
        [ -1.6114,   1.4179],
        [ -7.6420,   7.3806],
        [  1.2373,  -1.3921],
        [  5.4845,  -5.7908],
        [  8.6071,  -9.2557],
        [ -6.9553,   6.7079],
        [  3.9933,  -4.2295]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.7821,   5.5221],
        [-12.3146,  11.9074],
        [ -4.6030,   4.3432],
        [-10.1268,   9.7805],
        [ -9.9919,   9.6329],
        [ -9.4420,   9.1346],
        [ -1.2485,   1.1064],
        [  2.1911,  -2.4062]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.9759,  12.4759],
        [  1.3681,  -1.5037],
        [-10.8406,  10.5274],
        [ -5.7014,   5.4411],
        [  0.4991,  -0.6466],
        [-12.8359,  12.4059],
        [ -6.9282,   6.6605],
        [  1.2105,  -1.3883]], device='cuda:0')
Iteration Acc 0.8750
tensor([1, 0, 1, 1, 0, 1, 1, 0], device='cuda:0')
tensor([1, 0, 1, 1, 0, 1, 0, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.1793,   6.9005],
        [-12.4616,  12.0535],
        [ -8.5463,   8.2217],
        [  4.5336,  -4.9720],
        [ -0.1909,   0.0396],
        [ -8.5443,   8.2524],
        [ -0.0387,  -0.1466],
        [  3.0160,  -3.2481]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.5182,   7.2297],
        [ -8.8405,   8.5185],
        [  3.1117,  -3.2862],
        [-10.1558,   9.8035],
        [ -2.0389,   1.8309],
        [  6.4808,  -6.9143],
        [ -9.1583,   8.8439],
        [  4.9851,  -5.2705]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.4487,  -5.8443],
        [-10.1574,   9.7925],
        [  5.5842,  -5.9171],
        [-11.9182,  11.5646],
        [  6.0301,  -6.4532],
        [ -8.9873,   8.6829],
        [-11.0515,  10.6300],
        [ -7.3925,   7.1435]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.9778,   7.6902],
        [ -3.9473,   3.7234],
        [-10.8946,  10.5320],
        [ -2.6449,   2.4292],
        [  0.2349,  -0.3731],
        [ -3.3668,   3.1183],
        [ -1.9419,   1.7699],
        [ -5.0802,   4.8236]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.3010,   7.9390],
        [  3.9763,  -4.3016],
        [-11.0966,  10.7174],
        [-12.9954,  12.4698],
        [ -9.9814,   9.6268],
        [ -9.7311,   9.3496],
        [ -6.2121,   5.9398],
        [-12.7017,  12.1904]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.2567,  -1.4617],
        [  6.5935,  -7.1333],
        [-11.7327,  11.3840],
        [  7.7028,  -8.2836],
        [ -5.1863,   4.9332],
        [ -8.4804,   8.1708],
        [-10.7196,  10.3609],
        [  4.0980,  -4.4251]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.5924,  -1.7420],
        [ -0.8067,   0.6383],
        [ -9.3264,   9.0258],
        [ -4.9529,   4.6986],
        [-10.4165,  10.0369],
        [ -3.2696,   3.0455],
        [ -7.0880,   6.8455],
        [-10.8235,  10.4928]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.8793,   1.6769],
        [ -0.8647,   0.7136],
        [-13.6856,  13.2382],
        [ -0.9674,   0.8014],
        [ -9.8040,   9.4558],
        [-10.2885,   9.9218],
        [-10.7280,  10.3534],
        [-10.7421,  10.3649]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.9654,   1.7822],
        [  6.2591,  -6.6688],
        [ -8.0821,   7.8053],
        [ -1.6630,   1.4908],
        [  8.5844,  -9.2775],
        [-12.0689,  11.6564],
        [  4.2003,  -4.4229],
        [  4.2080,  -4.4528]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.0026,   2.7819],
        [  5.8878,  -6.2338],
        [ -9.5115,   9.1727],
        [-11.4638,  11.0933],
        [ -8.8168,   8.4903],
        [  5.8117,  -6.1996],
        [ -2.5425,   2.3516],
        [  4.8831,  -5.2065]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.5984,  11.1931],
        [-10.7505,  10.3744],
        [-10.1039,   9.7656],
        [ -5.4222,   5.1879],
        [-10.8558,  10.4804],
        [-10.9299,  10.5224],
        [ -8.4621,   8.1602],
        [ -2.1870,   1.9935]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.5446,   3.2982],
        [ -6.7731,   6.4711],
        [ -1.7978,   1.5796],
        [  3.6026,  -3.7853],
        [  6.0146,  -6.4479],
        [ -0.5874,   0.3785],
        [  5.6566,  -6.0671],
        [-13.3087,  12.8967]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.0190,  6.7443],
        [ 8.6289, -9.2652],
        [ 2.1259, -2.3101],
        [ 3.4395, -3.6328],
        [-9.8471,  9.4739],
        [-7.5310,  7.2353],
        [ 2.5105, -2.7236],
        [-4.4283,  4.1523]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.7859,  8.4735],
        [ 4.1906, -4.4392],
        [ 0.1961, -0.3650],
        [-0.6189,  0.4669],
        [-1.0205,  0.8539],
        [-8.9657,  8.6684],
        [-2.1728,  1.9879],
        [ 5.8628, -6.2096]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.0358,   6.7552],
        [-12.3995,  11.9463],
        [  4.3527,  -4.6025],
        [  0.0821,  -0.3080],
        [-10.3312,  10.0027],
        [  2.6549,  -2.8061],
        [ -7.1799,   6.8999],
        [ -8.4917,   8.2430]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.2482,   4.0195],
        [  6.7069,  -7.1607],
        [ -5.5839,   5.3303],
        [-13.4223,  13.0121],
        [  1.3183,  -1.5145],
        [  7.4512,  -7.9778],
        [ -6.6307,   6.3742],
        [  5.9610,  -6.3106]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.5503,  -0.7274],
        [  6.5122,  -6.8976],
        [  5.4252,  -5.7419],
        [-10.0989,   9.7636],
        [  4.7596,  -4.9886],
        [ -1.1571,   0.9895],
        [ -8.8160,   8.4957],
        [ -2.4978,   2.3156]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.8337,   8.5320],
        [ -8.7939,   8.4689],
        [-13.3048,  12.8745],
        [  6.2299,  -6.6121],
        [ -9.7387,   9.4171],
        [ -8.3009,   7.9863],
        [  2.0296,  -2.1859],
        [-10.4007,  10.0146]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.5193,   9.1885],
        [  3.8540,  -4.0460],
        [  3.3510,  -3.5525],
        [  7.2885,  -7.8070],
        [  3.3372,  -3.5735],
        [  0.8283,  -0.9565],
        [-10.6723,  10.2541],
        [ -1.6213,   1.4367]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.0993,  -5.4646],
        [ -8.0465,   7.7472],
        [  1.1090,  -1.2526],
        [ -6.1429,   5.8886],
        [ -7.8132,   7.5296],
        [  4.8497,  -5.1107],
        [  0.4360,  -0.6012],
        [-11.4421,  11.0808]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.2127,   5.9495],
        [ -9.9279,   9.6078],
        [ -5.9773,   5.7159],
        [-14.1288,  13.6599],
        [  2.6861,  -2.8411],
        [ -9.2783,   8.9640],
        [ -7.3402,   7.0586],
        [ -8.9248,   8.6152]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.8165,   8.5054],
        [ -2.6474,   2.4511],
        [ -4.8595,   4.6273],
        [  8.0390,  -8.6288],
        [ -3.0875,   2.8962],
        [  2.2695,  -2.4926],
        [-10.5135,  10.1137],
        [-10.4389,  10.1170]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.4303,  -0.6190],
        [  2.2414,  -2.3762],
        [-11.6195,  11.2036],
        [ -9.8512,   9.4653],
        [  5.4150,  -5.8579],
        [  6.5411,  -7.0099],
        [ -0.0931,  -0.0753],
        [  3.2375,  -3.4466]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.1338,   5.8570],
        [ -9.2849,   8.9360],
        [ -5.3400,   5.1227],
        [-10.2193,   9.8273],
        [  6.2980,  -6.5896],
        [ -1.2838,   1.1271],
        [ -0.4411,   0.3036],
        [ -9.4558,   9.1276]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.3041,  -2.4947],
        [  4.4097,  -4.6526],
        [ -0.8113,   0.6552],
        [ -9.0297,   8.7352],
        [  2.5307,  -2.7139],
        [-10.3083,   9.8975],
        [ -0.9923,   0.8366],
        [ -9.6404,   9.3510]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.9913,  11.5895],
        [  2.5667,  -2.7213],
        [ -5.1730,   4.9406],
        [  4.1088,  -4.3175],
        [  0.9065,  -1.0684],
        [  6.4285,  -6.8351],
        [ -7.3034,   7.0053],
        [ -9.6075,   9.2896]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.5678, -1.6980],
        [-9.9018,  9.6019],
        [-0.4226,  0.2714],
        [ 7.0270, -7.4726],
        [ 6.6821, -7.0899],
        [-5.1677,  4.9009],
        [-7.7955,  7.4612],
        [-2.7854,  2.5716]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.4332,  -6.8760],
        [ -0.5971,   0.3785],
        [  6.3656,  -6.6839],
        [  3.9281,  -4.1613],
        [ -3.9029,   3.6828],
        [  6.2321,  -6.6634],
        [-13.1015,  12.6642],
        [  0.5991,  -0.8337]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.1228,  -0.0648],
        [ -2.6164,   2.4279],
        [  1.9990,  -2.1479],
        [ -7.4726,   7.2058],
        [ -3.7558,   3.5098],
        [  2.3401,  -2.5275],
        [ -1.6585,   1.4399],
        [-13.5896,  13.1465]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.2670,  -3.6713],
        [-11.7399,  11.3026],
        [  3.6807,  -3.9221],
        [  3.8667,  -4.1032],
        [-12.8148,  12.3226],
        [ -8.2443,   7.9432],
        [ -0.4026,   0.2366],
        [ -1.4663,   1.2812]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.0352,  10.6353],
        [  0.7881,  -0.9529],
        [  7.7626,  -8.2881],
        [-12.5724,  12.1934],
        [ -3.4399,   3.1341],
        [ -0.6399,   0.4041],
        [-10.2397,   9.8695],
        [-12.8595,  12.3804]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.3330,   5.0997],
        [ -5.2720,   5.0116],
        [ -7.8122,   7.5209],
        [-10.6008,  10.2169],
        [  2.0523,  -2.2672],
        [-10.0196,   9.7119],
        [ -0.0357,  -0.1197],
        [ -6.9945,   6.7118]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.2780,  0.1129],
        [-3.1059,  2.8898],
        [-0.9274,  0.7546],
        [ 3.4821, -3.7980],
        [-8.7053,  8.4694],
        [ 5.6342, -5.8999],
        [ 1.6335, -1.8651],
        [ 5.2382, -5.5399]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.0714,  -5.4223],
        [ -7.7097,   7.4205],
        [  2.7749,  -3.0020],
        [  9.5736, -10.2851],
        [ -5.3971,   5.1554],
        [-10.0406,   9.6652],
        [  5.7722,  -6.1686],
        [  6.7259,  -7.2070]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.6425,  -2.8080],
        [ -4.1553,   3.9335],
        [  5.1617,  -5.5100],
        [ -1.4958,   1.2959],
        [  2.7417,  -2.9082],
        [ -9.9789,   9.6588],
        [-10.0073,   9.6622],
        [ -0.6240,   0.4502]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-3.1719,  2.9511],
        [-3.5891,  3.3592],
        [ 4.3286, -4.5587],
        [-1.2173,  1.0549],
        [-9.0044,  8.6773],
        [-5.7898,  5.5397],
        [ 3.8983, -4.1421],
        [-2.7910,  2.5943]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.3705,  9.0793],
        [-6.5175,  6.2262],
        [ 3.8858, -4.1786],
        [ 4.6063, -4.8654],
        [ 7.0444, -7.5667],
        [ 3.5136, -3.7527],
        [-7.1834,  6.8932],
        [ 2.3921, -2.5680]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.8384, -1.0392],
        [ 7.0419, -7.4796],
        [ 0.0167, -0.1879],
        [ 5.9031, -6.3282],
        [-8.1200,  7.8797],
        [ 0.2154, -0.3935],
        [-4.6153,  4.4143],
        [ 3.7867, -4.1046]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.8447,  10.4391],
        [  0.9354,  -1.1281],
        [  1.8295,  -2.0411],
        [  0.2177,  -0.3631],
        [ -2.5326,   2.3341],
        [ -2.9185,   2.7167],
        [  4.6227,  -4.9014],
        [  1.0961,  -1.2303]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.1751,   2.9629],
        [-12.2758,  11.8357],
        [ -8.6614,   8.3228],
        [-10.4434,  10.0601],
        [  5.9595,  -6.3996],
        [ -5.2843,   5.0217],
        [ -6.1898,   6.0045],
        [  1.1498,  -1.2917]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.4701,   5.2093],
        [ -3.2871,   3.0865],
        [-11.1082,  10.7234],
        [ -8.4941,   8.2316],
        [  3.4662,  -3.6357],
        [ -8.3020,   7.9910],
        [  2.1940,  -2.4111],
        [  5.8311,  -6.2547]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.6036,  10.2302],
        [ -9.3743,   9.0251],
        [ -5.9239,   5.6636],
        [  4.8103,  -5.1424],
        [-12.7712,  12.3192],
        [  3.1117,  -3.3107],
        [  7.3052,  -7.7336],
        [ -7.6138,   7.3484]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.0217,  11.6183],
        [  6.9724,  -7.4424],
        [ -4.0736,   3.8160],
        [ -9.5901,   9.2435],
        [-12.3279,  11.9196],
        [  1.6116,  -1.7611],
        [ -6.7664,   6.5057],
        [ -9.1183,   8.8096]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.2027,   7.8887],
        [-13.0511,  12.5841],
        [  2.9883,  -3.1768],
        [ -0.8258,   0.6219],
        [ -0.4943,   0.3612],
        [  3.6047,  -3.8168],
        [ -9.7138,   9.3688],
        [-13.7154,  13.2264]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.9686,  -8.4941],
        [  4.5829,  -4.8527],
        [  6.1837,  -6.6017],
        [ -1.5127,   1.2862],
        [  3.9184,  -4.1488],
        [  1.1735,  -1.3556],
        [-11.7098,  11.3508],
        [ -5.1675,   4.9366]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.4769,  -5.8108],
        [  2.8147,  -3.0143],
        [  3.5613,  -3.7598],
        [ -0.3711,   0.2082],
        [  0.4322,  -0.5985],
        [-11.2228,  10.7838],
        [  2.8207,  -3.0171],
        [  4.6975,  -4.9856]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.9002,  11.5084],
        [  0.3829,  -0.5416],
        [ -8.4990,   8.1777],
        [ -9.1902,   8.8690],
        [ -7.4234,   7.1538],
        [  0.7094,  -0.8681],
        [ -9.4442,   9.1624],
        [  4.9176,  -5.1443]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5284,  -4.8023],
        [ -8.2482,   7.9374],
        [  5.1290,  -5.5477],
        [  8.7008,  -9.2854],
        [  3.8841,  -4.1365],
        [ -9.1860,   8.8535],
        [-12.3917,  11.9984],
        [  2.6411,  -2.8362]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.4687,  -1.6278],
        [  4.0614,  -4.3192],
        [ -1.9314,   1.7387],
        [  1.5493,  -1.7024],
        [  6.5063,  -7.0081],
        [  1.2365,  -1.4154],
        [  2.8300,  -2.9973],
        [-11.8068,  11.4073]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.0674,  -0.2585],
        [  7.9745,  -8.5454],
        [ -7.4458,   7.1573],
        [-11.6796,  11.2555],
        [ -6.7393,   6.4470],
        [ -2.2519,   2.0685],
        [ -5.5789,   5.3547],
        [  4.3932,  -4.6951]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 0, 1, 1, 1, 1, 1, 0], device='cuda:0')
tensor([0, 0, 1, 1, 1, 1, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.4736,   7.2175],
        [  1.6428,  -1.7952],
        [  0.5644,  -0.7130],
        [ -1.5379,   1.3919],
        [  8.5501,  -9.1134],
        [  4.7403,  -5.0925],
        [  5.4606,  -5.8525],
        [-10.3260,   9.9466]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.2721,  -7.7186],
        [ -6.9285,   6.6815],
        [  5.7087,  -6.0736],
        [  5.6198,  -6.0285],
        [-11.3539,  10.9888],
        [ -6.5888,   6.3627],
        [-12.1962,  11.7757],
        [-13.0611,  12.6372]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.2780, -4.5148],
        [-3.7820,  3.5276],
        [-2.7618,  2.5738],
        [-7.6478,  7.3712],
        [-4.0335,  3.7943],
        [-2.8613,  2.6368],
        [-7.5121,  7.2475],
        [-7.6888,  7.4025]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.8129,  8.5459],
        [ 4.9318, -5.2445],
        [-7.9183,  7.6171],
        [-8.2169,  7.9344],
        [-4.3185,  4.0538],
        [ 5.0523, -5.3561],
        [-6.8107,  6.5657],
        [ 4.6698, -4.9309]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.1569, -6.5276],
        [ 1.6297, -1.7795],
        [ 0.2946, -0.4547],
        [ 5.2595, -5.5983],
        [-2.4737,  2.2926],
        [-2.2974,  2.1017],
        [ 8.3584, -8.9798],
        [-6.5504,  6.2932]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.0110,  0.8051],
        [-3.5686,  3.3291],
        [ 8.1450, -8.7067],
        [-4.9910,  4.7684],
        [-8.5434,  8.2526],
        [ 5.4899, -5.7911],
        [ 5.5734, -6.0085],
        [ 2.4901, -2.6900]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7839,   9.4594],
        [-11.0733,  10.7461],
        [ -9.6081,   9.2915],
        [ -7.6737,   7.3621],
        [-10.3108,   9.9750],
        [ -4.7589,   4.5321],
        [  1.7347,  -1.9114],
        [ -6.4597,   6.1849]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.6161,   2.4362],
        [ -3.5910,   3.3802],
        [-11.7945,  11.4818],
        [-11.3965,  11.0260],
        [ -5.6787,   5.4441],
        [-10.8944,  10.5124],
        [-12.4755,  11.9728],
        [  1.3219,  -1.4611]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7074,   8.3985],
        [-10.4399,  10.0497],
        [ -8.6390,   8.3283],
        [-10.5084,  10.1825],
        [ -4.1460,   3.9024],
        [-10.0535,   9.6948],
        [  3.0928,  -3.2668],
        [-10.3917,  10.0278]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.2335,  4.9944],
        [ 5.5296, -5.9487],
        [-8.5774,  8.2513],
        [ 3.4014, -3.5967],
        [ 2.1279, -2.2934],
        [-2.8617,  2.6524],
        [-7.7408,  7.4300],
        [ 0.0944, -0.2648]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.9094,  9.5649],
        [-4.9717,  4.7597],
        [ 1.3025, -1.4609],
        [ 6.4004, -6.8286],
        [-8.6252,  8.3203],
        [-0.3741,  0.1928],
        [ 6.4082, -6.8385],
        [-8.2951,  7.9787]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.1466,   6.8631],
        [  5.6940,  -6.0604],
        [-11.4882,  11.1188],
        [  0.1954,  -0.3550],
        [-11.3455,  10.9430],
        [-11.5948,  11.1737],
        [  4.5763,  -4.8843],
        [-11.1024,  10.7181]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.3188,  11.9266],
        [  5.2217,  -5.5564],
        [-13.2159,  12.7864],
        [-10.8402,  10.4362],
        [  3.5094,  -3.7589],
        [ -8.1200,   7.8376],
        [  1.2957,  -1.4321],
        [  4.8500,  -5.1070]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.8400,   5.5681],
        [ -1.8703,   1.6278],
        [ -5.5190,   5.2741],
        [  6.5647,  -7.0342],
        [ -9.4682,   9.1129],
        [ -5.9347,   5.6488],
        [-11.3150,  10.9097],
        [  2.3289,  -2.4770]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.0234,   9.6948],
        [  0.5259,  -0.6898],
        [-11.5666,  11.1785],
        [  0.8090,  -0.9602],
        [ -6.7128,   6.4469],
        [  0.0201,  -0.1718],
        [ -9.4690,   9.1211],
        [ -5.5477,   5.3051]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.8267, -0.9914],
        [-5.5597,  5.3261],
        [-6.9972,  6.6951],
        [-4.5305,  4.3093],
        [-7.5359,  7.2348],
        [ 2.9125, -3.1063],
        [ 4.2071, -4.4761],
        [-9.1766,  8.8609]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3026,  -5.5614],
        [  5.6757,  -6.0857],
        [ -6.0494,   5.8170],
        [-12.4926,  12.0755],
        [-15.3796,  14.8517],
        [  1.5074,  -1.6959],
        [-10.8174,  10.4272],
        [ -7.1976,   6.8954]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.9578,  -3.1352],
        [  0.3882,  -0.5328],
        [  0.8188,  -1.0010],
        [  9.5284, -10.2036],
        [  1.1768,  -1.3350],
        [ -6.2326,   5.9947],
        [ -5.0713,   4.8291],
        [-12.5989,  12.1034]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.5020, -6.9130],
        [ 3.6831, -3.9308],
        [-1.5654,  1.3821],
        [ 5.2350, -5.6035],
        [ 4.3288, -4.5727],
        [ 1.9152, -2.0786],
        [-8.2539,  7.9691],
        [-2.8064,  2.6111]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.4075,  12.9696],
        [-10.5221,  10.1464],
        [  4.8745,  -5.2038],
        [ -5.0941,   4.8576],
        [ -6.7765,   6.5187],
        [ -6.1323,   5.8926],
        [  0.9657,  -1.1399],
        [ -2.9330,   2.7359]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.7662,  9.4331],
        [-7.8474,  7.5512],
        [-7.3994,  7.1358],
        [ 4.5609, -4.8264],
        [-1.9127,  1.7296],
        [-9.2636,  8.9031],
        [ 2.5645, -2.8341],
        [-8.0278,  7.7460]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5580,  -4.8425],
        [  4.8996,  -5.2476],
        [  6.4675,  -6.9667],
        [ -9.1659,   8.8399],
        [  2.4202,  -2.6244],
        [  4.8967,  -5.2736],
        [  5.8940,  -6.2682],
        [-11.6698,  11.2893]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.9224,  -5.2662],
        [  5.5533,  -6.0047],
        [ -1.5733,   1.3531],
        [  4.8081,  -5.1259],
        [-11.1268,  10.7518],
        [ -4.5441,   4.2889],
        [ -1.3253,   1.1521],
        [  2.2371,  -2.4338]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.6559,  9.3120],
        [-8.7127,  8.4580],
        [-5.5439,  5.2871],
        [ 1.8717, -2.0007],
        [ 2.8312, -2.9568],
        [ 5.4829, -5.8474],
        [ 5.0022, -5.3546],
        [-6.0734,  5.8142]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.4761,  -3.7114],
        [  1.0609,  -1.2035],
        [-10.6187,  10.2478],
        [  0.5993,  -0.7612],
        [  0.9242,  -1.1048],
        [  1.0214,  -1.1857],
        [ -5.7179,   5.4279],
        [-12.6700,  12.2171]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.4953,  11.1046],
        [ -9.0400,   8.7184],
        [  2.0123,  -2.1776],
        [  3.5117,  -3.7300],
        [ -9.5550,   9.2231],
        [ -1.5677,   1.3930],
        [  5.6342,  -5.9973],
        [  4.8276,  -5.1140]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.0172, -1.1996],
        [-9.8088,  9.4751],
        [-9.2836,  8.9495],
        [ 6.2819, -6.6702],
        [-8.8531,  8.5326],
        [-6.7277,  6.4877],
        [-9.0164,  8.6992],
        [ 4.1447, -4.5354]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0222,   7.7076],
        [  0.2939,  -0.4554],
        [-12.6521,  12.2674],
        [ -9.9928,   9.6248],
        [ -6.0964,   5.8204],
        [-14.0287,  13.6223],
        [ -4.4006,   4.1532],
        [  0.6220,  -0.8008]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.8272,  12.3965],
        [  5.0967,  -5.4509],
        [  1.2745,  -1.4232],
        [-12.4980,  12.0489],
        [  5.4422,  -5.8862],
        [  4.4844,  -4.7550],
        [-10.9948,  10.6445],
        [ -8.8499,   8.5435]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.0490,  -0.2035],
        [  0.7189,  -0.9280],
        [  4.3246,  -4.6492],
        [-11.8513,  11.5042],
        [  5.1917,  -5.5288],
        [ -8.1921,   7.8841],
        [ -8.7453,   8.4237],
        [ -8.7424,   8.4537]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.6026,  11.2122],
        [ -8.0229,   7.7777],
        [  3.7127,  -3.9009],
        [  1.3372,  -1.4938],
        [ -5.6628,   5.3875],
        [ -1.6159,   1.4601],
        [-10.8543,  10.4946],
        [ -3.4208,   3.1974]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.2395,  -7.7144],
        [-10.5069,  10.1155],
        [ -8.1972,   7.8907],
        [  3.6997,  -3.9041],
        [ -1.7354,   1.5451],
        [  3.6515,  -3.8633],
        [ -8.9770,   8.6619],
        [  3.2527,  -3.4596]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4266,  -2.5915],
        [  4.3921,  -4.6722],
        [  3.3658,  -3.6129],
        [-10.1887,   9.8227],
        [ -1.4711,   1.3093],
        [-10.2076,   9.8821],
        [  2.7191,  -2.8837],
        [ -3.5282,   3.2748]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.0258,  -7.5133],
        [ -4.9500,   4.7402],
        [-10.3437,   9.9813],
        [-10.0738,   9.7345],
        [-12.9795,  12.4302],
        [  7.7641,  -8.2607],
        [ -4.6344,   4.3756],
        [  2.3472,  -2.5020]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.9592,  -1.1299],
        [  4.6891,  -4.9500],
        [  2.2972,  -2.5089],
        [  2.2041,  -2.3689],
        [ -8.1747,   7.8898],
        [ -3.2877,   3.0659],
        [-12.8897,  12.4430],
        [ -4.3743,   4.1320]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.4273,  -1.5972],
        [ -0.7991,   0.6507],
        [  4.5028,  -4.7678],
        [  6.7590,  -7.2762],
        [-10.4354,  10.0580],
        [  8.1454,  -8.7357],
        [-13.7520,  13.2906],
        [ -5.0568,   4.8171]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.2614,  -6.6403],
        [ -7.8715,   7.6021],
        [ -8.7782,   8.4425],
        [ -8.2457,   7.9387],
        [ -9.2876,   8.9317],
        [  0.9578,  -1.0963],
        [ -4.7852,   4.5281],
        [-10.0875,   9.7316]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.8691,  12.4276],
        [ -9.1786,   8.8991],
        [ -9.5864,   9.2247],
        [ -9.3138,   8.9796],
        [  7.8149,  -8.2976],
        [ -9.2219,   8.9088],
        [-10.8956,  10.5287],
        [ -6.1904,   5.9434]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.3349,  5.0672],
        [ 4.5475, -4.8194],
        [-9.6857,  9.3962],
        [ 1.1044, -1.2637],
        [-2.6944,  2.4979],
        [ 2.7352, -2.9558],
        [ 0.8939, -1.0525],
        [-8.0803,  7.7463]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.2089, -4.4478],
        [-3.9589,  3.7336],
        [-5.1703,  4.9289],
        [-1.9673,  1.7939],
        [-8.6629,  8.3736],
        [ 3.0546, -3.2403],
        [ 6.6458, -7.1096],
        [-6.7847,  6.4982]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-2.4676,  2.2702],
        [-8.3214,  8.0380],
        [ 5.0271, -5.3584],
        [-0.1313, -0.0489],
        [-7.9814,  7.6872],
        [ 1.6899, -1.8656],
        [-8.4598,  8.1158],
        [-9.4271,  9.1106]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.9404,  -4.1748],
        [-10.3589,  10.0324],
        [ -8.2086,   7.8782],
        [ -6.8148,   6.5608],
        [ -8.5180,   8.2079],
        [-12.4134,  11.9408],
        [-11.3750,  11.0037],
        [ -5.8545,   5.5633]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3450,   9.0193],
        [-10.1389,   9.8021],
        [-10.8692,  10.4884],
        [ -4.4670,   4.2601],
        [ -8.6535,   8.3296],
        [ -2.9509,   2.7430],
        [  2.5602,  -2.7757],
        [  2.3272,  -2.4856]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.1400,  -0.0315],
        [-11.6573,  11.2341],
        [ -6.4775,   6.1793],
        [ -9.9779,   9.6497],
        [  2.3095,  -2.4545],
        [-10.2567,   9.8735],
        [ -9.1017,   8.8245],
        [-11.5321,  11.0918]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.1732,  -5.5380],
        [  1.5385,  -1.6824],
        [  1.8229,  -1.9726],
        [  2.7588,  -2.9979],
        [ -9.4964,   9.1631],
        [ -7.4337,   7.1499],
        [  9.5955, -10.3694],
        [  8.0633,  -8.6049]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.9348,  13.4424],
        [ -9.3495,   9.0437],
        [  1.0695,  -1.2238],
        [  3.8474,  -4.0679],
        [  5.4693,  -5.7777],
        [-11.3118,  10.9599],
        [-11.7628,  11.3310],
        [  6.1099,  -6.4829]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.0013,  -3.2491],
        [ -8.9895,   8.6338],
        [ -9.4031,   9.1023],
        [-10.9709,  10.6120],
        [-10.3630,  10.0064],
        [ -1.0065,   0.8211],
        [  6.3711,  -6.8087],
        [ -0.5704,   0.4062]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.8309,  14.3211],
        [  7.1458,  -7.6376],
        [ -6.0998,   5.8594],
        [  8.6781,  -9.3518],
        [ -2.9631,   2.7395],
        [-10.9456,  10.6113],
        [-13.3061,  12.7997],
        [ -7.6597,   7.3771]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6500,  -6.0107],
        [-11.2822,  10.8850],
        [  5.0713,  -5.4282],
        [-11.6735,  11.2254],
        [-12.4908,  12.0665],
        [ -8.1130,   7.8167],
        [-10.9243,  10.5097],
        [ -8.1718,   7.8716]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.5024,  -0.6744],
        [  1.0924,  -1.2476],
        [  5.5958,  -5.9675],
        [  1.6479,  -1.8360],
        [-10.1074,   9.7801],
        [ -5.5749,   5.3079],
        [ -4.1515,   3.9307],
        [  4.0741,  -4.3374]], device='cuda:0')
Iteration Acc 0.7500
tensor([0, 0, 0, 0, 1, 1, 1, 0], device='cuda:0')
tensor([0, 0, 0, 0, 1, 0, 0, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-3.2117,  3.0592],
        [ 2.1750, -2.3551],
        [-1.1872,  1.0066],
        [ 0.1028, -0.2571],
        [-8.0570,  7.7733],
        [-9.7287,  9.3920],
        [-7.7308,  7.4527],
        [ 1.5612, -1.7385]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.0320,   6.8237],
        [  3.1029,  -3.3073],
        [ -9.3559,   9.0180],
        [  3.7452,  -3.9737],
        [  4.9879,  -5.2785],
        [-10.1472,   9.8378],
        [-10.7407,  10.3404],
        [  4.8917,  -5.2287]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.3903,  11.0396],
        [ -7.5422,   7.2229],
        [-10.1632,   9.8019],
        [ -9.6953,   9.3935],
        [  6.2371,  -6.6515],
        [ -0.6704,   0.4754],
        [-10.6080,  10.2347],
        [-10.8794,  10.5565]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0713,   7.7629],
        [ -7.9761,   7.6828],
        [-10.0170,   9.7005],
        [ -6.8486,   6.5670],
        [-12.4345,  12.0321],
        [ -9.6970,   9.3227],
        [ -9.9210,   9.6004],
        [ -7.9181,   7.6312]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.3227, -1.4634],
        [ 3.6064, -3.8100],
        [-6.5454,  6.2816],
        [ 3.7828, -4.0810],
        [-6.4679,  6.2223],
        [-9.8598,  9.5229],
        [-9.0458,  8.7207],
        [ 2.3345, -2.4919]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.6897,  -3.9228],
        [ -2.5335,   2.3297],
        [-12.9158,  12.5604],
        [ -8.9868,   8.6157],
        [-12.9050,  12.5351],
        [-11.1227,  10.7177],
        [ -7.8134,   7.4949],
        [  3.3439,  -3.6167]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.4235,  11.0129],
        [  2.9548,  -3.1063],
        [ -2.6844,   2.4868],
        [  5.6975,  -6.0802],
        [-10.4937,  10.1582],
        [  7.4985,  -8.0659],
        [ -7.4574,   7.1787],
        [ -8.5358,   8.2515]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.1067, -1.3004],
        [ 3.5034, -3.6789],
        [-9.7131,  9.3391],
        [ 7.3501, -7.8794],
        [ 4.6894, -4.9552],
        [ 5.3929, -5.7389],
        [ 4.2581, -4.5092],
        [-3.1867,  2.9751]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.7900, -2.9836],
        [ 2.9640, -3.1434],
        [-3.3710,  3.1410],
        [-7.9047,  7.5986],
        [-5.9134,  5.6601],
        [-4.0485,  3.7997],
        [-3.3876,  3.1783],
        [ 6.3008, -6.7842]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5262,  10.1866],
        [  4.3924,  -4.6534],
        [  2.3803,  -2.5927],
        [  3.4772,  -3.7173],
        [ -8.8985,   8.5861],
        [  3.4254,  -3.6423],
        [  1.1419,  -1.3173],
        [  0.2494,  -0.3866]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.2389,  -0.0727],
        [-10.1292,   9.7746],
        [ -2.1501,   1.9538],
        [ -8.5444,   8.2155],
        [ -8.5263,   8.2052],
        [  6.3148,  -6.7722],
        [  7.4167,  -7.9438],
        [ -9.7108,   9.3568]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.4579,  6.2024],
        [-6.8079,  6.5567],
        [-4.5329,  4.2986],
        [ 6.8802, -7.3901],
        [ 6.2857, -6.7529],
        [-1.0061,  0.8237],
        [ 4.6412, -4.9609],
        [-3.3997,  3.1802]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.8539,  -5.1359],
        [  4.2268,  -4.4413],
        [  5.6823,  -5.9964],
        [  6.2432,  -6.6894],
        [-11.4625,  11.0740],
        [ -4.8067,   4.5758],
        [-11.0334,  10.7222],
        [  2.2985,  -2.4440]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.7534,  14.2746],
        [ -2.6683,   2.4543],
        [-11.9227,  11.5511],
        [ -9.5447,   9.2054],
        [  3.8945,  -4.1640],
        [ -7.0367,   6.7650],
        [-12.5470,  12.0957],
        [-13.2647,  12.8611]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.3715,   7.0945],
        [  3.3689,  -3.5898],
        [  4.0257,  -4.2455],
        [-13.4946,  13.0679],
        [ -4.4260,   4.1823],
        [ -1.4553,   1.2715],
        [  3.6197,  -3.8435],
        [ -1.7938,   1.6248]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.8022,   8.5289],
        [  5.0418,  -5.3949],
        [ -4.6578,   4.4137],
        [  0.4142,  -0.5522],
        [  2.0603,  -2.2023],
        [-10.6634,  10.2707],
        [ -1.1082,   0.9030],
        [ -6.4153,   6.1407]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.4450,  0.2888],
        [ 5.9195, -6.2720],
        [ 4.4694, -4.7371],
        [ 1.9862, -2.1743],
        [-3.9568,  3.7446],
        [ 0.8508, -1.0001],
        [-6.6705,  6.4331],
        [ 7.9135, -8.5175]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.9421,   1.7058],
        [  2.1029,  -2.2221],
        [ -1.8205,   1.6089],
        [  5.7212,  -6.1672],
        [ -1.7748,   1.6053],
        [-10.6799,  10.3059],
        [-11.1248,  10.7112],
        [ -9.2476,   8.9224]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.0086,  10.5837],
        [ -4.2154,   4.0241],
        [  1.7347,  -1.9214],
        [  4.3450,  -4.6482],
        [ -8.2813,   7.9489],
        [-10.3657,   9.9611],
        [  0.3728,  -0.5115],
        [  6.2690,  -6.6052]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.6468,  10.2621],
        [  5.0191,  -5.3352],
        [ -5.1928,   4.9309],
        [  8.1663,  -8.8745],
        [ -9.3934,   9.0518],
        [  2.7244,  -2.9441],
        [  4.2694,  -4.4952],
        [ -7.3895,   7.1256]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.6618,  -1.8133],
        [  3.8083,  -4.0218],
        [-10.7934,  10.4183],
        [ -6.2774,   6.0005],
        [ -7.3262,   7.0281],
        [ -5.7595,   5.5003],
        [ -0.8997,   0.7468],
        [  7.1151,  -7.6992]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.4014,   7.1431],
        [-10.8864,  10.5060],
        [  2.0581,  -2.2298],
        [  6.3280,  -6.8125],
        [ -5.7568,   5.5110],
        [  1.0124,  -1.1933],
        [-10.4497,  10.0911],
        [  0.4437,  -0.6638]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.0594,   5.8038],
        [-10.6834,  10.3067],
        [ -5.0737,   4.8266],
        [  0.5655,  -0.7089],
        [ -0.3929,   0.2164],
        [ -0.7624,   0.6044],
        [-11.9076,  11.5092],
        [ -8.1479,   7.8615]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.9004,  -6.2892],
        [-12.1509,  11.7718],
        [  5.4571,  -5.8246],
        [ -1.2642,   1.0745],
        [-12.4027,  12.0392],
        [  8.8603,  -9.5105],
        [  4.6224,  -4.9151],
        [  2.0077,  -2.1682]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.1246,  7.8104],
        [-7.7821,  7.4871],
        [-2.2320,  2.0227],
        [ 5.6052, -5.9362],
        [-2.9328,  2.7343],
        [ 4.1669, -4.4599],
        [-2.7901,  2.5852],
        [ 0.4941, -0.6527]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.9123,  -4.1058],
        [ -8.1847,   7.8864],
        [  6.0002,  -6.3003],
        [  6.7482,  -7.1678],
        [  1.8769,  -2.0942],
        [-11.3552,  10.9349],
        [  4.7356,  -5.0568],
        [ -5.0198,   4.7573]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-3.7168,  3.4934],
        [ 3.9755, -4.2161],
        [-6.3298,  6.0787],
        [ 1.6485, -1.8050],
        [-0.3211,  0.1589],
        [-9.8799,  9.4986],
        [-3.8710,  3.6631],
        [-6.6172,  6.3530]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7165,   8.3765],
        [-10.2774,   9.9060],
        [-11.2468,  10.8389],
        [  4.0346,  -4.2702],
        [ -3.2537,   3.0446],
        [  9.1528,  -9.8041],
        [ -3.5867,   3.3415],
        [  4.1492,  -4.4558]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.4590,  -5.8246],
        [-10.3630,  10.0166],
        [  1.2580,  -1.4305],
        [  0.0726,  -0.2025],
        [  2.2747,  -2.4355],
        [ -9.7585,   9.4471],
        [  0.2592,  -0.4049],
        [  0.1909,  -0.3272]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-4.5593,  4.3221],
        [-9.1977,  8.8753],
        [-1.0175,  0.7997],
        [ 5.1990, -5.5151],
        [ 3.5111, -3.7213],
        [ 0.7432, -0.9052],
        [ 6.6061, -7.0384],
        [-9.1777,  8.8765]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.5320,   8.2088],
        [ -8.2283,   7.9381],
        [ -9.2636,   8.9391],
        [  3.5595,  -3.7781],
        [  0.9193,  -1.0670],
        [  2.3113,  -2.4734],
        [ -7.8487,   7.6270],
        [-14.3378,  13.8919]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5986,  10.2875],
        [-11.1334,  10.7590],
        [ -7.3870,   7.1022],
        [ -9.0022,   8.6610],
        [  2.2447,  -2.4055],
        [ -4.9820,   4.7401],
        [  0.6980,  -0.8494],
        [  6.5512,  -7.0138]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.8863,  10.5593],
        [ -2.0331,   1.8399],
        [ -7.0146,   6.7512],
        [-10.3421,   9.9954],
        [-10.2898,   9.9683],
        [ -7.7829,   7.4846],
        [  6.4465,  -6.8787],
        [  7.1891,  -7.6767]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.7775,  11.3342],
        [-11.6665,  11.2220],
        [ -3.5267,   3.3240],
        [ -6.8838,   6.6101],
        [ -9.8152,   9.4826],
        [  5.1570,  -5.5739],
        [-11.5113,  11.1329],
        [ -4.9119,   4.6566]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  8.8137,  -9.4192],
        [-10.7635,  10.4298],
        [ -2.3995,   2.2280],
        [  0.4284,  -0.5519],
        [-11.8985,  11.4079],
        [  0.8493,  -0.9982],
        [ -3.3555,   3.1328],
        [ -8.3083,   8.0592]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.0176,   2.8414],
        [-10.7001,  10.3315],
        [-13.4542,  12.9900],
        [ -5.4018,   5.1442],
        [  6.1247,  -6.5672],
        [ -6.0838,   5.8434],
        [-10.7035,  10.2888],
        [  1.2571,  -1.4207]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.1899, -5.5261],
        [ 0.8628, -1.0464],
        [-4.1875,  3.9637],
        [-7.0843,  6.8212],
        [ 9.0525, -9.7717],
        [ 5.9007, -6.2116],
        [-2.3784,  2.1754],
        [ 2.0072, -2.2726]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3262,  -5.6034],
        [ -9.7681,   9.4270],
        [ -7.9674,   7.6638],
        [ -6.6964,   6.4750],
        [  5.3006,  -5.5734],
        [-13.1456,  12.6211],
        [  0.7839,  -0.9667],
        [-11.9853,  11.6292]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.5159,  -2.6734],
        [-11.5028,  11.0856],
        [ -2.7836,   2.5875],
        [ -4.3434,   4.1148],
        [  1.1740,  -1.3230],
        [ -5.8731,   5.6168],
        [  1.9876,  -2.1902],
        [ -0.1022,  -0.0706]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.0719, -1.2879],
        [ 1.8660, -2.0388],
        [ 5.6923, -6.0243],
        [ 2.9440, -3.0773],
        [ 3.0720, -3.2510],
        [-4.1698,  3.9395],
        [ 0.8857, -1.0444],
        [-1.0130,  0.8477]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.5552,   3.3398],
        [  4.1264,  -4.3864],
        [  3.0817,  -3.3237],
        [ -8.0930,   7.7683],
        [  0.5360,  -0.7064],
        [  7.2936,  -7.7953],
        [-10.9910,  10.5561],
        [ -1.7490,   1.5787]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.9760,   7.6741],
        [ -7.8315,   7.5048],
        [ -7.4764,   7.1868],
        [  5.6889,  -6.0560],
        [-12.0969,  11.7050],
        [  1.0535,  -1.1894],
        [  3.0745,  -3.2620],
        [  5.9955,  -6.4045]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.6990,   6.4412],
        [-11.4788,  11.0933],
        [-11.9527,  11.5498],
        [ -5.5528,   5.2862],
        [-10.2966,   9.9201],
        [ -5.1603,   4.9134],
        [-13.3129,  12.9349],
        [  4.3783,  -4.6411]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.2171e+00,  8.8670e+00],
        [-1.8936e-01, -1.3708e-02],
        [-6.9771e+00,  6.6964e+00],
        [ 2.5127e+00, -2.7492e+00],
        [-7.2270e+00,  6.9348e+00],
        [ 2.6507e-04, -1.5097e-01],
        [-3.3935e+00,  3.2074e+00],
        [-9.6733e+00,  9.3311e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.0354,   1.8374],
        [ -0.9652,   0.8233],
        [  5.6155,  -5.9297],
        [  5.2744,  -5.6102],
        [ -9.3962,   9.0501],
        [-10.6339,  10.3213],
        [ -8.3632,   8.0922],
        [ -0.5762,   0.4051]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5699,  -4.7870],
        [-11.4424,  11.0355],
        [ -7.3473,   7.0618],
        [ -8.9857,   8.6731],
        [-11.8541,  11.4553],
        [  6.8359,  -7.3517],
        [  5.6509,  -5.9762],
        [ -4.5038,   4.2949]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.0518, -3.2464],
        [-9.3046,  8.9596],
        [-2.8602,  2.6600],
        [-8.1272,  7.8425],
        [ 0.6355, -0.7970],
        [ 3.8491, -4.0758],
        [-7.0174,  6.7468],
        [ 6.7274, -7.1169]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3316,   8.9507],
        [ -2.9741,   2.7824],
        [ -7.6740,   7.3876],
        [-13.2393,  12.8192],
        [-12.3606,  11.8684],
        [ -8.3115,   8.0089],
        [-14.3070,  13.8469],
        [ -1.9164,   1.7421]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.8575,   9.5008],
        [  6.4020,  -6.9427],
        [ -0.7977,   0.6109],
        [ -9.1329,   8.8607],
        [-12.4016,  11.9741],
        [ -8.8644,   8.5941],
        [-11.2704,  10.9488],
        [ -8.4958,   8.1310]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.3455,   0.1918],
        [-12.5319,  12.0535],
        [  5.6177,  -5.9810],
        [ -4.4820,   4.2513],
        [  1.8795,  -2.0401],
        [ -0.6479,   0.4906],
        [ -9.2916,   9.0233],
        [  7.3864,  -7.8580]], device='cuda:0')
Iteration Acc 0.7500
tensor([1, 1, 0, 1, 0, 1, 1, 0], device='cuda:0')
tensor([1, 1, 0, 0, 0, 0, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.4473, -4.6981],
        [-6.5042,  6.2369],
        [ 3.5569, -3.7437],
        [-1.9601,  1.7999],
        [ 3.1841, -3.3616],
        [-2.5679,  2.4077],
        [ 2.6147, -2.8373],
        [ 3.4349, -4.0411]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.6058,   7.3221],
        [  6.2055,  -6.6476],
        [ -8.5966,   8.3147],
        [-12.1669,  11.7674],
        [-11.2544,  10.8198],
        [-10.3047,  10.0051],
        [  2.4975,  -2.6548],
        [  2.2992,  -2.4468]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.0073,  11.5296],
        [ -0.0298,  -0.1421],
        [ -4.5855,   4.3484],
        [  4.4221,  -4.7365],
        [-14.2987,  13.8725],
        [  6.7971,  -7.2598],
        [  4.3695,  -4.6434],
        [  5.9754,  -6.3658]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0743,   7.7549],
        [  6.9907,  -7.4990],
        [ -7.9443,   7.6439],
        [  0.5045,  -0.6987],
        [ -6.2902,   6.0425],
        [-11.8804,  11.3960],
        [  6.7647,  -7.2122],
        [  1.5611,  -1.7074]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6925,  -6.0801],
        [  2.6463,  -2.8256],
        [  4.8999,  -5.1872],
        [ -9.5521,   9.2192],
        [  3.8392,  -4.0383],
        [ -6.2979,   6.0316],
        [-13.0755,  12.5976],
        [ -7.2901,   6.9950]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3966,   9.0579],
        [  5.4016,  -5.7185],
        [-11.1525,  10.8180],
        [ -1.8611,   1.6298],
        [ -9.4657,   9.1182],
        [ -9.2841,   8.9666],
        [ -8.4070,   8.0655],
        [  3.2134,  -3.3982]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.2063,  -4.4070],
        [ -0.1023,  -0.0530],
        [ -6.3562,   6.0999],
        [-10.1814,   9.8036],
        [  3.7106,  -3.8948],
        [ -8.7082,   8.3996],
        [-13.2673,  12.8242],
        [ -0.9704,   0.8174]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.8889,   5.6190],
        [  3.9487,  -4.1709],
        [-10.0527,   9.6620],
        [ -1.8144,   1.6302],
        [  4.6397,  -4.9238],
        [-12.1595,  11.8046],
        [ -8.6542,   8.3524],
        [  5.5639,  -5.8670]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.7612,  -8.2957],
        [ -9.2213,   8.8938],
        [ -6.4403,   6.1710],
        [ -6.3568,   6.1144],
        [-10.4343,  10.1284],
        [ -0.7897,   0.6071],
        [  2.4561,  -2.6120],
        [-11.3371,  10.9415]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.2836,   9.9327],
        [ -8.7158,   8.4041],
        [  0.6144,  -0.7564],
        [  3.6113,  -3.8521],
        [  7.6212,  -8.2051],
        [ -5.7240,   5.4672],
        [-10.9317,  10.5692],
        [  0.1804,  -0.3220]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.0417,  -1.1695],
        [  6.8428,  -7.2149],
        [ -0.0200,  -0.1132],
        [-12.5043,  12.0167],
        [ -9.7089,   9.3368],
        [ -7.9035,   7.6006],
        [-10.0221,   9.6781],
        [ -0.3271,   0.1882]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.4122,  -6.9337],
        [ -9.6708,   9.3258],
        [-12.0136,  11.6441],
        [ -7.9806,   7.6739],
        [-12.0445,  11.6112],
        [-10.0249,   9.6695],
        [  1.1588,  -1.3334],
        [  4.6606,  -4.9165]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.4439,   8.1377],
        [ -8.0551,   7.7569],
        [ -4.3126,   4.0975],
        [  5.2440,  -5.6476],
        [  3.0502,  -3.4455],
        [ -9.7837,   9.4605],
        [ -2.6018,   2.3946],
        [-10.9441,  10.5477]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.5002,   0.3138],
        [ -3.3611,   3.1457],
        [ -8.6746,   8.3683],
        [  6.1157,  -6.4958],
        [ -9.2150,   8.8755],
        [ -9.4423,   9.1132],
        [ -6.8367,   6.5497],
        [-11.0957,  10.7280]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.3546,  -0.4994],
        [ -1.0729,   0.8815],
        [ -0.7268,   0.5478],
        [ -1.5030,   1.2844],
        [ -4.4206,   4.1984],
        [  1.9084,  -2.0979],
        [ -0.0327,  -0.1042],
        [-10.2695,   9.8924]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.0426,  0.8656],
        [ 6.3731, -6.7137],
        [-2.9740,  2.7754],
        [-5.3373,  5.0989],
        [ 0.5815, -0.7355],
        [ 0.0752, -0.2220],
        [-0.6430,  0.4879],
        [-5.6906,  5.4030]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.5801,  -0.7517],
        [-10.0589,   9.7234],
        [ -1.3548,   1.1981],
        [  5.4853,  -5.7980],
        [  6.7136,  -7.2024],
        [  0.5281,  -0.6937],
        [ -8.1454,   7.8159],
        [ -5.5392,   5.3017]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.6412,   1.4476],
        [-10.7232,  10.3203],
        [-16.5417,  15.9485],
        [ -7.0956,   6.8361],
        [ -9.9339,   9.5829],
        [ -2.1481,   1.9428],
        [  6.2030,  -6.6289],
        [ -8.7587,   8.4764]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.3782, -6.7530],
        [-6.7178,  6.4724],
        [-8.8287,  8.5223],
        [-7.1134,  6.8356],
        [-8.8520,  8.5527],
        [-9.6141,  9.3943],
        [-7.9535,  7.6554],
        [ 1.3566, -1.5589]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.1713,  8.8508],
        [ 5.2779, -5.5688],
        [-3.7693,  3.5734],
        [-6.4853,  6.2459],
        [-4.7728,  4.5349],
        [-1.5038,  1.3149],
        [ 7.1548, -7.6949],
        [ 6.5037, -6.9266]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.3116,  5.0545],
        [-9.1548,  8.8450],
        [-8.2940,  7.9528],
        [-9.5036,  9.1606],
        [ 4.5221, -4.8633],
        [ 0.6258, -0.7813],
        [ 0.3970, -0.5689],
        [-3.5570,  3.3453]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-15.8022,  15.2730],
        [  5.9616,  -6.3590],
        [ -5.0041,   4.7434],
        [ -8.3203,   7.9907],
        [ -1.7674,   1.5795],
        [  2.4445,  -2.6272],
        [  7.1518,  -7.6456],
        [-10.1032,   9.7477]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.2448,  -5.5528],
        [ -7.2691,   6.9848],
        [ -2.6587,   2.4572],
        [  5.7224,  -6.1333],
        [ -5.6011,   5.3368],
        [-13.0452,  12.6161],
        [ -3.1205,   2.8964],
        [ -3.1110,   2.9025]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.7082,  -5.0167],
        [ -0.3290,   0.1834],
        [  8.1012,  -8.6996],
        [ -6.6697,   6.4005],
        [-11.6240,  11.1706],
        [ -9.6434,   9.2786],
        [ -7.6460,   7.3631],
        [ -6.0753,   5.7947]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.1163,   6.8273],
        [  0.5164,  -0.6548],
        [  2.6251,  -2.7900],
        [ -6.7415,   6.4402],
        [ -4.2002,   3.9788],
        [  6.8704,  -7.3095],
        [ -3.2916,   3.0603],
        [-10.7408,  10.3754]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.9519,   5.6873],
        [  0.0323,  -0.2075],
        [ -3.4751,   3.2515],
        [  3.6280,  -3.8707],
        [  5.8390,  -6.1996],
        [ -9.0055,   8.6534],
        [  0.6032,  -0.7540],
        [-11.8072,  11.4018]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.9256, -2.1596],
        [-9.1755,  8.8718],
        [-8.0238,  7.7652],
        [-0.5247,  0.3537],
        [ 6.0057, -6.3640],
        [ 3.7352, -3.9964],
        [ 6.1230, -6.5515],
        [ 8.2271, -8.8467]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.9640,  -1.1217],
        [  5.0217,  -5.2815],
        [  1.0175,  -1.1804],
        [-12.9369,  12.5270],
        [ -6.7199,   6.4374],
        [  5.4198,  -5.7463],
        [  5.5646,  -5.8964],
        [  6.1532,  -6.5891]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.6395,  -0.8633],
        [ -9.9048,   9.5536],
        [  1.8399,  -1.9979],
        [-12.0731,  11.6817],
        [ -9.6820,   9.2906],
        [  6.1225,  -6.5408],
        [  5.0614,  -5.3782],
        [ -8.1210,   7.8236]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5559,  10.1386],
        [-10.1098,   9.7961],
        [-11.5567,  11.1486],
        [-10.5435,  10.1563],
        [-15.9050,  15.3421],
        [ -9.2434,   8.9092],
        [ -6.2593,   6.0071],
        [ -8.5447,   8.2572]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.2569,   1.0869],
        [ -6.4763,   6.2375],
        [ -9.2791,   8.9346],
        [-11.5411,  11.1775],
        [-10.0788,   9.7192],
        [ -7.6961,   7.3713],
        [  1.1002,  -1.2576],
        [  3.2088,  -3.3807]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.5911,  -3.9201],
        [-10.7833,  10.4481],
        [ -6.1211,   5.8550],
        [  3.9792,  -4.1890],
        [ -4.1476,   3.9184],
        [ -0.8059,   0.6366],
        [ -5.0554,   4.8002],
        [  1.4038,  -1.5410]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.1281,  -6.4999],
        [ -0.1381,  -0.0361],
        [ -8.2252,   7.9331],
        [-13.2357,  12.7802],
        [ -9.6779,   9.3645],
        [-10.0543,   9.7263],
        [ -1.4745,   1.2846],
        [  3.3966,  -3.5543]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.3057,  -3.6241],
        [  1.6738,  -1.8306],
        [  8.2947,  -8.9121],
        [ -8.2444,   7.9495],
        [-12.1225,  11.6483],
        [  5.3627,  -5.6852],
        [-10.3020,   9.9771],
        [-11.9869,  11.5902]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.3372,  -7.8283],
        [  3.6444,  -3.8561],
        [ -0.1114,  -0.0774],
        [  8.3578,  -8.9807],
        [ -7.3806,   7.1321],
        [  5.1029,  -5.3946],
        [  7.9806,  -8.5798],
        [-11.6918,  11.2709]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.2415, -3.4596],
        [-1.2714,  1.1126],
        [-9.2280,  8.9109],
        [ 1.7431, -1.9273],
        [-9.5564,  9.2227],
        [ 5.9237, -6.3379],
        [-8.9664,  8.6149],
        [ 5.2036, -5.4710]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.8930,  11.5304],
        [-14.4498,  13.9995],
        [  3.1939,  -3.3516],
        [  2.3161,  -2.5015],
        [ -6.3759,   6.1167],
        [-10.9182,  10.5125],
        [ -8.9655,   8.6324],
        [-12.1970,  11.7718]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4792,  -2.6646],
        [  1.4172,  -1.6344],
        [  2.6738,  -2.8262],
        [-12.4689,  11.9981],
        [-10.1729,   9.7806],
        [-14.5714,  14.1079],
        [-13.5404,  13.0709],
        [-10.2337,   9.8595]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-2.1498,  1.9518],
        [-4.3258,  4.0946],
        [ 4.5801, -4.8551],
        [ 7.1588, -7.6332],
        [-3.0392,  2.8494],
        [-9.4152,  9.1099],
        [ 2.9219, -3.1097],
        [-4.1403,  3.9096]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.0284,  -5.3186],
        [-11.1121,  10.7083],
        [  4.7355,  -5.0727],
        [  3.7460,  -3.9999],
        [  2.8880,  -3.0891],
        [ -9.0550,   8.7409],
        [  0.0897,  -0.2371],
        [ -7.7336,   7.4455]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.5532,  12.0868],
        [  1.0193,  -1.2242],
        [-12.0400,  11.6053],
        [  1.5643,  -1.7240],
        [ -4.5002,   4.2692],
        [  4.5326,  -4.7561],
        [ -9.2245,   8.9144],
        [  5.3343,  -5.6455]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.9409,   4.6885],
        [  1.3200,  -1.5055],
        [ -7.7320,   7.4732],
        [ -4.0117,   3.7868],
        [-11.6293,  11.1971],
        [  3.2367,  -3.4574],
        [  1.6819,  -1.8249],
        [ -0.9164,   0.7543]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.0565,   4.8457],
        [ -9.9209,   9.5970],
        [-15.3068,  14.7273],
        [ -7.8937,   7.6440],
        [ -8.9329,   8.6071],
        [ -2.1499,   1.9682],
        [  4.1400,  -4.3803],
        [  1.0706,  -1.1979]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7536,   9.4647],
        [ -2.1960,   2.0068],
        [-11.7835,  11.3840],
        [ -5.1837,   4.9402],
        [  5.1410,  -5.4414],
        [  0.9463,  -1.0996],
        [  5.1978,  -5.5265],
        [-10.2991,  10.0035]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.2186,  11.8249],
        [  6.8294,  -7.2929],
        [  0.1672,  -0.3989],
        [ -0.1250,  -0.0605],
        [-11.5086,  11.1097],
        [ -3.8560,   3.6215],
        [-16.2227,  15.6085],
        [  1.9834,  -2.1728]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.8070,   8.4804],
        [  1.4109,  -1.5780],
        [ -7.0960,   6.8027],
        [-10.9041,  10.4746],
        [-10.0950,   9.7271],
        [-11.9554,  11.5163],
        [-11.3786,  10.9505],
        [  5.8849,  -6.2833]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.8764,  -4.1031],
        [  5.8110,  -6.2477],
        [-12.8561,  12.4205],
        [-10.4133,  10.0224],
        [  6.2898,  -6.7292],
        [  5.1586,  -5.4790],
        [-10.6719,  10.3587],
        [ -4.3641,   4.1156]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.6890,   7.3718],
        [  1.5054,  -1.6578],
        [  6.6396,  -7.0661],
        [-12.4602,  12.0485],
        [ -7.5427,   7.3332],
        [ -9.3901,   9.0793],
        [  7.0937,  -7.6285],
        [ -8.1792,   7.8811]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.5744,  -5.9340],
        [ -0.7633,   0.5380],
        [ -3.7676,   3.5747],
        [  1.4640,  -1.5976],
        [  5.0925,  -5.4391],
        [-10.9044,  10.5139],
        [-11.0896,  10.7716],
        [ -6.6594,   6.3832]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.5103,  11.1319],
        [  7.8941,  -8.4609],
        [ -9.8483,   9.5023],
        [  2.1254,  -2.3544],
        [ -7.8568,   7.5555],
        [  1.7764,  -1.9141],
        [  2.9059,  -3.0625],
        [  0.9573,  -1.1204]], device='cuda:0')
Iteration Acc 1.0000
tensor([1, 0, 1, 0, 1, 0, 0, 0], device='cuda:0')
tensor([1, 0, 1, 0, 1, 0, 0, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-4.6323,  4.4019],
        [ 6.9369, -7.5048],
        [ 0.4217, -0.6295],
        [ 3.3198, -3.5687],
        [ 1.0835, -1.2315],
        [-3.5880,  3.3635],
        [-9.5735,  9.2455],
        [-8.3759,  8.1082]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.2439,  -7.7550],
        [  6.6252,  -7.0365],
        [-10.6513,  10.2704],
        [  4.3369,  -4.6305],
        [  6.2215,  -6.6695],
        [ -5.8267,   5.6303],
        [  5.8827,  -6.2359],
        [  5.6990,  -6.1423]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.2241,  -6.6087],
        [  6.1130,  -6.4795],
        [ -5.8039,   5.5587],
        [ -9.8470,   9.5039],
        [ -5.6532,   5.4014],
        [-13.0551,  12.5169],
        [ -3.3786,   3.1711],
        [ -3.3458,   3.0953]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.9205, -8.4704],
        [ 1.1370, -1.3416],
        [-7.6410,  7.3340],
        [-2.5295,  2.3201],
        [-9.5411,  9.2310],
        [-8.6772,  8.3568],
        [ 7.2415, -7.8116],
        [ 0.3948, -0.5576]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.2170,  -3.4821],
        [ -0.1340,  -0.0196],
        [ -1.7898,   1.5965],
        [  8.3504,  -9.0117],
        [  5.7336,  -6.0757],
        [  2.9230,  -3.1046],
        [  0.1053,  -0.2558],
        [-14.3721,  13.8388]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.0044,   4.7454],
        [ -6.7164,   6.4571],
        [  5.4723,  -5.7948],
        [  4.4893,  -4.7675],
        [-11.0565,  10.7210],
        [  5.1656,  -5.4814],
        [ -3.2597,   3.0648],
        [-13.5671,  13.0954]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.6501,  11.2467],
        [ -9.1253,   8.8088],
        [ -3.7440,   3.5477],
        [  1.7464,  -1.8887],
        [  5.4112,  -5.7420],
        [ -3.6893,   3.4676],
        [ -9.4461,   9.1568],
        [  7.3454,  -7.8066]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4840,  -2.6761],
        [-10.7799,  10.4224],
        [  6.4126,  -6.9007],
        [ -8.2323,   7.9322],
        [ -5.0145,   4.7732],
        [ -9.5159,   9.1910],
        [ -5.5757,   5.3475],
        [ -0.7172,   0.5739]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.1735e+01,  1.1364e+01],
        [-1.6667e-01, -6.8574e-03],
        [-1.4979e+01,  1.4515e+01],
        [-8.7105e+00,  8.4382e+00],
        [-5.5464e-01,  3.9726e-01],
        [ 4.4117e+00, -4.6876e+00],
        [ 6.4548e+00, -6.8899e+00],
        [ 1.9350e+00, -2.1447e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.1740,  -0.3530],
        [ -7.9698,   7.6785],
        [ -9.2115,   8.8568],
        [ -1.1225,   0.9575],
        [ -8.7437,   8.4169],
        [-10.2308,   9.8656],
        [ -0.8169,   0.6390],
        [-10.3199,   9.9481]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.6050,  14.1351],
        [ -5.8584,   5.6070],
        [-10.9233,  10.5564],
        [-10.0790,   9.7213],
        [-10.2241,   9.8851],
        [-11.1994,  10.8459],
        [  8.2491,  -8.8709],
        [  1.4792,  -1.6389]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 8.9191, -9.6416],
        [ 2.7320, -2.9090],
        [ 5.2135, -5.7020],
        [ 6.1540, -6.6015],
        [ 9.2942, -9.9789],
        [ 4.7420, -4.9790],
        [ 5.7023, -6.0430],
        [ 1.1510, -1.3716]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.8440,   9.4345],
        [  6.2364,  -6.6285],
        [-10.6394,  10.2796],
        [  4.4213,  -4.6603],
        [  2.3179,  -2.5223],
        [  0.5511,  -0.6972],
        [  0.5136,  -0.6953],
        [  4.7752,  -5.0586]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.1365,   7.8492],
        [ -5.0460,   4.7700],
        [-11.1285,  10.7511],
        [ -2.0260,   1.8213],
        [ -5.1263,   4.8754],
        [ -8.3691,   8.0823],
        [ -0.8617,   0.6889],
        [  0.0132,  -0.1478]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.2790,  -2.4919],
        [  0.3922,  -0.5250],
        [  2.1972,  -2.3852],
        [ 10.2608, -11.0510],
        [ -9.8103,   9.4455],
        [ -8.4331,   8.1486],
        [  2.0222,  -2.2570],
        [ -9.7890,   9.4015]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.0240,  -0.1980],
        [  5.2113,  -5.5266],
        [ -2.1599,   1.9392],
        [ -9.6038,   9.2638],
        [  0.9948,  -1.1580],
        [  4.0398,  -4.2758],
        [-10.5433,  10.1964],
        [  8.1802,  -8.7901]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.2165,  10.8221],
        [ -5.7038,   5.4420],
        [  0.0594,  -0.2201],
        [ -6.6041,   6.2983],
        [  7.1711,  -7.6218],
        [-10.2142,   9.8385],
        [ -9.1637,   8.8171],
        [-10.2241,   9.8341]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.6543,   3.4437],
        [-10.8257,  10.4650],
        [ -2.6336,   2.4330],
        [  2.8582,  -3.0444],
        [  1.3229,  -1.4761],
        [-12.1128,  11.6287],
        [-10.0687,   9.7117],
        [ -0.5838,   0.4415]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.6625,   5.4488],
        [ -6.0927,   5.8394],
        [ -9.4340,   9.1348],
        [ -7.5400,   7.2117],
        [ -6.3356,   6.0555],
        [ -5.5592,   5.3164],
        [-11.8699,  11.4830],
        [ -9.0006,   8.6646]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.5855,   6.3543],
        [  2.6206,  -2.7824],
        [-10.0623,   9.7225],
        [  6.9617,  -7.3837],
        [ -2.0698,   1.8750],
        [  4.4911,  -4.7475],
        [ -2.6201,   2.4312],
        [ -3.4331,   3.2162]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.8951,   7.6607],
        [ -0.8639,   0.6857],
        [-11.6095,  11.2154],
        [ -8.0112,   7.7023],
        [ -8.2045,   7.9217],
        [  0.5628,  -0.7316],
        [ -9.1734,   8.8272],
        [-10.9701,  10.5789]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.5743,  13.0718],
        [ -6.2753,   6.0013],
        [-11.2138,  10.8382],
        [  4.1570,  -4.4033],
        [ -0.2522,   0.0975],
        [ -7.4069,   7.1337],
        [ -8.9685,   8.6559],
        [  3.6660,  -4.0051]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.7874, -1.9213],
        [ 6.0612, -6.5047],
        [ 3.6324, -3.7904],
        [ 6.5538, -7.0572],
        [-3.4774,  3.2906],
        [-4.1609,  3.9241],
        [-5.4530,  5.1960],
        [-9.4241,  9.0418]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.6153,   6.3329],
        [  3.6597,  -3.8930],
        [-12.9751,  12.4605],
        [ -1.2752,   1.0806],
        [  1.3986,  -1.5608],
        [-10.0537,   9.7038],
        [  3.6032,  -3.8243],
        [-10.9714,  10.6179]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.3043,   9.9359],
        [ -0.7714,   0.6055],
        [  7.5385,  -8.0125],
        [ -8.7386,   8.4181],
        [  5.6544,  -5.9528],
        [  5.1013,  -5.4532],
        [  2.9486,  -3.2376],
        [  5.3934,  -5.6898]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.9883,  5.7147],
        [ 5.7349, -6.0214],
        [ 4.5791, -4.8807],
        [-2.5883,  2.4045],
        [-5.7101,  5.4949],
        [-5.8215,  5.5707],
        [-0.7614,  0.5848],
        [-9.2020,  8.8665]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.9872,   8.6405],
        [ -7.6918,   7.3854],
        [-11.4210,  10.9950],
        [ -5.7835,   5.5207],
        [ -9.4301,   9.0644],
        [  2.5176,  -2.6919],
        [  5.2576,  -5.6441],
        [  6.5611,  -6.9416]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.5912,  -5.9054],
        [ -2.0461,   1.8400],
        [-12.6874,  12.2018],
        [ -0.0840,  -0.0656],
        [  6.1686,  -6.6314],
        [ -4.6247,   4.3850],
        [  7.3316,  -7.8544],
        [-11.3680,  10.9678]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.3446,   7.0614],
        [  1.6456,  -1.7961],
        [ -6.5929,   6.3215],
        [-10.1087,   9.7181],
        [ -9.0243,   8.7023],
        [  4.6586,  -4.9479],
        [ -9.0432,   8.7276],
        [ -0.0864,  -0.0653]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.5450, -5.8935],
        [ 6.2980, -6.7297],
        [ 2.3067, -2.5257],
        [ 6.4296, -6.8643],
        [ 4.8047, -5.0718],
        [-6.7880,  6.5263],
        [-1.8809,  1.6961],
        [-7.5974,  7.2842]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.0148,  8.7216],
        [ 5.8187, -6.1444],
        [-4.9868,  4.7248],
        [-6.9356,  6.6470],
        [-9.6154,  9.2788],
        [-7.2365,  6.9404],
        [-8.5508,  8.2505],
        [ 7.3643, -7.8891]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.0334,  -3.2478],
        [  6.8754,  -7.4063],
        [  3.0378,  -3.2644],
        [  1.1381,  -1.3364],
        [  0.5485,  -0.7497],
        [ -6.0955,   5.8399],
        [-12.4699,  12.0415],
        [ -2.8927,   2.6682]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.9237,  -1.0965],
        [  4.0285,  -4.2702],
        [ -9.1837,   8.8410],
        [  7.9077,  -8.4896],
        [  2.5418,  -2.7721],
        [  4.1747,  -4.4275],
        [-12.3592,  11.9498],
        [-10.2759,   9.9359]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.1573,  -3.4045],
        [ -7.2086,   6.9378],
        [  1.6456,  -1.7826],
        [ -7.7039,   7.4385],
        [-11.4170,  11.0596],
        [-12.4932,  12.1208],
        [  6.3895,  -6.7946],
        [ -9.5831,   9.2143]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.8674,  -5.1713],
        [  5.4543,  -5.8093],
        [  4.4964,  -4.7719],
        [-12.0603,  11.6250],
        [  4.2640,  -4.5070],
        [-11.0283,  10.6923],
        [  3.3148,  -3.5369],
        [-10.5222,  10.1731]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.5913,   7.3000],
        [ -0.5663,   0.4052],
        [ -5.0499,   4.8216],
        [  4.7438,  -5.0482],
        [-13.3012,  12.8468],
        [  6.7735,  -7.2277],
        [  1.9860,  -2.1420],
        [-10.3736,  10.0063]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.4840,   8.1759],
        [-10.5745,  10.1843],
        [  0.1632,  -0.2920],
        [  3.3706,  -3.5371],
        [-10.1683,   9.8322],
        [  3.6327,  -3.8272],
        [  4.0054,  -4.2342],
        [  1.2655,  -1.4410]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.9953,  -4.2534],
        [-10.7050,  10.3189],
        [-10.4991,  10.1316],
        [  3.9844,  -4.2272],
        [  6.3161,  -6.7446],
        [ -2.3749,   2.1792],
        [-13.5221,  13.1005],
        [  0.8901,  -1.0399]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.9500,  -1.1005],
        [-11.3466,  10.9334],
        [ -0.4060,   0.2549],
        [ -6.9719,   6.6752],
        [ -1.3012,   1.1333],
        [  3.2564,  -3.4368],
        [  7.0658,  -7.4222],
        [-12.1340,  11.7745]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.4768,  -0.6522],
        [ -8.7679,   8.4203],
        [ -7.9489,   7.6287],
        [  3.0663,  -3.3005],
        [-10.0773,   9.6720],
        [ -7.5234,   7.2362],
        [  1.6256,  -1.8037],
        [  0.9128,  -1.0556]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.6825,  -0.8359],
        [-11.3399,  10.9730],
        [  4.8796,  -5.1470],
        [ -7.5986,   7.3406],
        [  1.7531,  -1.8907],
        [ -3.0138,   2.8119],
        [-13.6218,  13.1116],
        [ -3.7553,   3.5496]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.8894,   6.6284],
        [ -0.9299,   0.7534],
        [-10.7044,  10.3125],
        [  2.7056,  -2.9652],
        [ -8.7273,   8.3799],
        [ -9.4304,   9.1289],
        [  6.3773,  -6.7343],
        [ -7.7152,   7.4701]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.9537,  8.5956],
        [ 3.7147, -3.9749],
        [ 2.5390, -2.7373],
        [ 1.7424, -1.8646],
        [-7.4670,  7.2141],
        [ 9.1170, -9.7474],
        [-6.7541,  6.4924],
        [ 1.5529, -1.7338]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.8841,   8.6162],
        [ -5.1850,   4.9353],
        [  6.5276,  -6.9500],
        [ -0.7474,   0.5778],
        [-10.0732,   9.7174],
        [  0.9886,  -1.1648],
        [  1.9881,  -2.1360],
        [ -4.6854,   4.4209]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5896,  -4.8382],
        [-13.4114,  13.0167],
        [ -4.1834,   3.9907],
        [-12.9296,  12.4991],
        [  3.9010,  -4.1486],
        [  2.9420,  -3.1214],
        [  4.8569,  -5.1968],
        [-10.7348,  10.4089]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.7382,  -3.9318],
        [  4.2325,  -4.4659],
        [  1.1241,  -1.2988],
        [ -0.9204,   0.7589],
        [ -8.0144,   7.7006],
        [ -6.4434,   6.1768],
        [  2.4038,  -2.5920],
        [-10.0647,   9.6870]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.8071, -6.1716],
        [ 8.8228, -9.4424],
        [ 2.6750, -2.8724],
        [-9.6693,  9.3355],
        [-1.5329,  1.3613],
        [-0.5002,  0.3461],
        [-0.2766,  0.0981],
        [-3.2269,  3.0146]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.8813,  -3.0802],
        [ -9.3585,   8.9697],
        [ -1.9981,   1.8002],
        [  2.2065,  -2.3705],
        [-10.0656,   9.7653],
        [-12.0340,  11.5967],
        [ -8.7167,   8.4001],
        [ -8.9959,   8.7100]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.1293, -4.3547],
        [ 3.4122, -3.6259],
        [ 6.7618, -7.1872],
        [-9.5829,  9.2711],
        [ 6.2236, -6.6692],
        [ 3.1972, -3.4072],
        [-0.3729,  0.1935],
        [ 3.9794, -4.1514]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.5822,  -3.8037],
        [  5.9981,  -6.3743],
        [-12.1987,  11.8715],
        [-13.6849,  13.2230],
        [ -0.3492,   0.1982],
        [ -8.4837,   8.1611],
        [  5.3974,  -5.7079],
        [ -5.9145,   5.6603]], device='cuda:0')
Iteration Acc 0.8750
tensor([0, 0, 1, 1, 1, 1, 0, 1], device='cuda:0')
tensor([0, 0, 1, 1, 0, 1, 0, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.1654,   1.9676],
        [ -7.4325,   7.1679],
        [-11.5310,  11.1270],
        [  5.2582,  -5.5843],
        [  0.6214,  -0.7942],
        [ -8.0388,   7.7446],
        [-12.6465,  12.2329],
        [-11.2144,  10.8768]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.8819,  11.5021],
        [  7.4173,  -7.9317],
        [  0.6748,  -0.8287],
        [-11.8695,  11.4899],
        [ -8.4644,   8.1790],
        [ -0.2923,   0.1214],
        [  8.4912,  -9.0946],
        [  6.7974,  -7.3123]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.9758,  11.5758],
        [-11.7803,  11.3815],
        [ -4.2241,   3.9985],
        [-11.6839,  11.3078],
        [ -1.2104,   1.0172],
        [  5.3930,  -5.6989],
        [  0.9813,  -1.1580],
        [ -6.9791,   6.6802]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.2604,  -6.6902],
        [-10.4298,  10.0652],
        [  2.7329,  -2.9431],
        [ -4.8899,   4.6194],
        [  5.5751,  -5.9034],
        [  4.5840,  -4.9272],
        [ -0.0943,  -0.0771],
        [  0.3493,  -0.5273]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.9283, -7.3880],
        [ 2.7890, -2.9707],
        [-1.2750,  1.0750],
        [-6.3220,  6.0510],
        [-7.5060,  7.2051],
        [-0.9461,  0.7802],
        [-0.0409, -0.0458],
        [-6.7274,  6.4479]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.9285,   0.7621],
        [-10.2052,   9.8303],
        [-10.8368,  10.4554],
        [-11.6905,  11.3117],
        [ -7.6217,   7.3444],
        [ -9.8091,   9.5153],
        [  7.5797,  -8.0853],
        [ -1.3473,   1.1784]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.8821,   4.6312],
        [-13.9196,  13.4434],
        [  4.4853,  -4.7333],
        [ -3.7219,   3.5026],
        [-12.8108,  12.3407],
        [  4.5848,  -4.8432],
        [-11.0748,  10.6477],
        [ -5.9054,   5.6325]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.3795,   7.0920],
        [  8.2716,  -8.8128],
        [  1.6527,  -1.8152],
        [ -1.4738,   1.3025],
        [ -8.7876,   8.5092],
        [-12.1230,  11.6487],
        [ -4.8716,   4.6547],
        [ -4.2352,   4.0071]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.2384,  -0.3934],
        [  4.9941,  -5.3535],
        [  4.7009,  -5.0051],
        [-12.9525,  12.4825],
        [ -1.0454,   0.8878],
        [-14.0838,  13.6071],
        [ -7.6571,   7.3770],
        [  7.3641,  -7.9140]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.9314,   0.7475],
        [  7.4647,  -8.0401],
        [-10.3209,   9.9329],
        [ -9.4933,   9.1569],
        [-10.5882,  10.2322],
        [ -1.5943,   1.3883],
        [-14.0472,  13.5057],
        [  3.3629,  -3.5843]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.5177,  -8.0188],
        [ -2.8433,   2.6337],
        [ -4.9901,   4.7614],
        [ -0.9873,   0.8035],
        [  6.2514,  -6.7768],
        [  3.0495,  -3.2843],
        [ -7.1338,   6.8251],
        [-12.1908,  11.7573]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.3317,  -2.5152],
        [-10.0415,   9.7067],
        [  3.7746,  -3.9568],
        [ -8.3310,   8.0018],
        [-10.7094,  10.3289],
        [  1.7440,  -1.9188],
        [  5.0283,  -5.3558],
        [ -5.3320,   5.1160]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1246,   8.8033],
        [  7.3857,  -7.8984],
        [ -8.9871,   8.6569],
        [  4.7614,  -4.9841],
        [ -7.7496,   7.4853],
        [  3.1924,  -3.4063],
        [-10.7188,  10.3311],
        [  4.5931,  -4.8479]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.9513,  -2.2261],
        [  5.5781,  -5.9351],
        [ -7.8818,   7.5963],
        [  6.7315,  -7.3021],
        [  2.5109,  -2.6697],
        [  3.1650,  -3.2948],
        [-11.3370,  10.9195],
        [  1.6516,  -1.8032]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3004,  -5.5725],
        [ -8.1419,   7.8415],
        [ -2.5136,   2.3236],
        [  6.8285,  -7.2760],
        [-12.8791,  12.4764],
        [ -9.0648,   8.7582],
        [  0.4163,  -0.5683],
        [ -8.3282,   8.0644]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.2714,  -5.5910],
        [  1.8568,  -2.0168],
        [-10.1539,   9.8129],
        [ -7.9108,   7.6161],
        [  4.4195,  -4.6166],
        [  1.9891,  -2.1843],
        [ -7.0000,   6.7524],
        [  4.3101,  -4.5828]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.2293,   6.9489],
        [ -4.4230,   4.2704],
        [  6.1970,  -6.6356],
        [-10.3093,  10.0081],
        [ -2.1169,   1.9211],
        [ -3.6017,   3.3818],
        [ -8.6835,   8.4224],
        [  6.2732,  -6.7053]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.3592,  1.1632],
        [-6.8569,  6.5766],
        [ 5.4559, -5.8358],
        [-8.9059,  8.5818],
        [ 6.5114, -6.9547],
        [-0.3085,  0.1841],
        [-1.2449,  1.0833],
        [-7.9853,  7.6715]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.3954, -3.6178],
        [-7.8555,  7.5708],
        [ 4.2745, -4.4869],
        [ 0.0910, -0.2529],
        [-3.9405,  3.7378],
        [-9.5485,  9.1929],
        [ 0.2282, -0.3644],
        [ 7.2874, -7.8496]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.4750,  13.0114],
        [ -9.1857,   8.8513],
        [-10.5463,  10.2255],
        [ -5.5661,   5.3112],
        [  6.8315,  -7.3009],
        [  2.3373,  -2.5081],
        [-12.5638,  12.1436],
        [ -9.2877,   9.0308]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.9622,  -1.1279],
        [ -7.4097,   7.1240],
        [  1.0332,  -1.2604],
        [  9.8949, -10.6456],
        [ -5.3151,   5.0665],
        [-12.1754,  11.7388],
        [ -8.7681,   8.4762],
        [  5.2994,  -5.6233]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.7269,  10.3425],
        [  1.2262,  -1.4008],
        [ -7.2932,   6.9887],
        [ -2.0253,   1.8306],
        [ -7.7400,   7.4355],
        [ -6.7895,   6.5007],
        [-13.0379,  12.6443],
        [  4.6136,  -4.8578]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.8000,   5.5649],
        [ -0.0196,  -0.1580],
        [  4.5297,  -4.7600],
        [  8.2532,  -8.9363],
        [-10.4057,  10.0757],
        [  2.8345,  -3.0192],
        [-13.4938,  13.0407],
        [ -4.5437,   4.2757]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-2.5045,  2.3128],
        [ 3.8518, -4.0838],
        [ 3.5946, -3.7819],
        [ 8.6996, -9.2235],
        [ 6.1299, -6.5023],
        [ 3.8413, -4.1777],
        [ 5.6075, -6.0172],
        [ 2.7460, -2.9293]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.4975,   7.2245],
        [  2.6709,  -2.8438],
        [  3.1595,  -3.3480],
        [ -2.1353,   1.9502],
        [ -2.5039,   2.3139],
        [-10.7450,  10.3445],
        [  5.8150,  -6.1054],
        [  1.3286,  -1.4907]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.3308, -7.8509],
        [-0.4238,  0.2794],
        [ 0.0976, -0.2757],
        [ 8.1857, -8.7695],
        [ 8.1510, -8.7179],
        [-7.3724,  7.0817],
        [ 6.4192, -6.8615],
        [-7.0268,  6.7557]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.8169,   6.5552],
        [ -6.2683,   6.0474],
        [ -8.4791,   8.1553],
        [  5.9204,  -6.2833],
        [  7.0937,  -7.5155],
        [ -4.8731,   4.6389],
        [  6.6549,  -7.0675],
        [-13.1589,  12.7197]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.6264,  -0.8437],
        [  5.0309,  -5.3871],
        [ -7.2057,   6.9416],
        [-10.2966,   9.9309],
        [-11.8518,  11.4860],
        [  6.1774,  -6.6023],
        [  3.2312,  -3.4081],
        [-13.0873,  12.6073]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.9945,  10.6112],
        [ -9.3289,   9.0119],
        [-11.2791,  10.9184],
        [  5.9524,  -6.2476],
        [-13.0655,  12.6831],
        [  4.6848,  -4.9798],
        [-10.5007,  10.1196],
        [  4.4229,  -4.6894]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.1549,  -1.3389],
        [-10.1325,   9.7826],
        [  6.0713,  -6.4221],
        [ -1.1633,   0.9980],
        [-11.1732,  10.8013],
        [ -6.8592,   6.5668],
        [ -6.7113,   6.4444],
        [-12.1341,  11.7011]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.0958,  -5.4206],
        [ -8.8881,   8.5714],
        [-10.0828,   9.7699],
        [ -4.9009,   4.6800],
        [  1.6608,  -1.8436],
        [ -2.9194,   2.7014],
        [-12.2546,  11.8322],
        [  5.6111,  -5.9362]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.0473,  -2.2285],
        [  2.2782,  -2.4669],
        [ -8.1379,   7.8555],
        [ -7.2893,   6.9858],
        [ -0.8715,   0.7244],
        [  6.7974,  -7.1822],
        [ -4.8003,   4.5621],
        [-12.4094,  11.9832]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.1854, -0.3210],
        [ 0.1940, -0.3616],
        [ 4.6685, -4.9158],
        [-9.2810,  8.9327],
        [-1.6859,  1.4992],
        [ 5.4709, -5.7416],
        [-9.1212,  8.8027],
        [ 2.0800, -2.2456]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.4908,  11.9961],
        [ -2.9423,   2.7288],
        [  0.0742,  -0.2796],
        [ -2.2122,   2.0333],
        [-10.3465,  10.0341],
        [ -7.1588,   6.8956],
        [ -6.2678,   6.0197],
        [  7.5459,  -8.1033]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.8427,  11.4480],
        [  6.0960,  -6.4311],
        [  4.1490,  -4.5134],
        [ -8.8499,   8.5437],
        [  5.8990,  -6.2311],
        [ -0.5246,   0.3494],
        [ -9.8290,   9.4918],
        [ -8.0676,   7.7805]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7071,   9.3636],
        [-10.7663,  10.3864],
        [ -7.8033,   7.5235],
        [ -9.8652,   9.5259],
        [  4.2442,  -4.4836],
        [  3.7383,  -3.8936],
        [ -9.7675,   9.4029],
        [ -7.0183,   6.7457]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.0886,  12.6124],
        [  5.8222,  -6.1890],
        [-12.4908,  12.1166],
        [-11.5320,  11.1562],
        [ -7.0395,   6.7831],
        [  0.2845,  -0.4297],
        [  3.0915,  -3.3545],
        [-10.8299,  10.4990]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.8697,   6.6344],
        [  5.4275,  -5.7777],
        [-10.7569,  10.3664],
        [ -1.0211,   0.8544],
        [  5.4782,  -5.9144],
        [  7.4162,  -7.9437],
        [ -0.7507,   0.5906],
        [ -7.1584,   6.8993]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.7385,  11.2782],
        [ -9.7901,   9.4277],
        [ -9.8660,   9.5558],
        [  6.7063,  -7.1148],
        [ -8.9126,   8.5815],
        [ -6.4521,   6.2052],
        [  5.2943,  -5.6206],
        [ -1.7092,   1.5404]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1115,  11.6252],
        [  7.9151,  -8.5208],
        [-11.2836,  10.9079],
        [-12.7756,  12.2931],
        [  7.2000,  -7.7471],
        [ -4.5511,   4.3300],
        [  7.0686,  -7.6060],
        [-13.8617,  13.3144]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.1409,   2.9407],
        [-10.6785,  10.2917],
        [  5.6591,  -6.0915],
        [  6.2429,  -6.7088],
        [ -8.6363,   8.2875],
        [-11.0933,  10.7136],
        [ -0.0151,  -0.1273],
        [  5.4510,  -5.8106]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.7103,  10.3473],
        [ -9.3872,   9.0443],
        [ -8.3364,   8.0270],
        [  8.6116,  -9.1951],
        [  4.1401,  -4.3852],
        [  5.3936,  -5.7046],
        [  8.9289,  -9.5186],
        [ -3.9851,   3.7554]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.9975,  0.8302],
        [-9.2369,  8.8789],
        [ 2.4972, -2.6704],
        [ 2.1398, -2.3082],
        [-9.1118,  8.7759],
        [-6.8522,  6.5623],
        [-3.6041,  3.4035],
        [ 3.0776, -3.2884]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.8899,   1.5466],
        [  7.1812,  -7.6584],
        [  1.3872,  -1.5415],
        [  5.1507,  -5.5381],
        [ -8.1604,   7.8481],
        [ -0.6085,   0.4260],
        [ -7.8474,   7.5669],
        [-11.3281,  10.9753]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.3878,   5.1391],
        [  5.7978,  -6.1367],
        [-11.3578,  11.0192],
        [-13.1039,  12.6963],
        [  4.1558,  -4.4475],
        [  3.5127,  -3.7389],
        [-11.4103,  11.0121],
        [-13.1544,  12.7099]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0933,   7.7768],
        [ -8.7212,   8.4255],
        [-12.4185,  12.0250],
        [-10.6230,  10.2494],
        [ -2.7528,   2.5605],
        [-11.8177,  11.3811],
        [  3.8773,  -4.1569],
        [  1.0867,  -1.2296]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.1061,   9.8083],
        [ -6.6148,   6.3298],
        [  5.6063,  -5.9475],
        [  6.6290,  -7.1647],
        [-12.2694,  11.8694],
        [ -1.5863,   1.4225],
        [  5.1313,  -5.3951],
        [  3.2662,  -3.6551]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.1025e+00,  4.8491e+00],
        [-1.1906e+01,  1.1495e+01],
        [ 8.8406e-01, -1.0579e+00],
        [ 5.3615e+00, -5.6961e+00],
        [-9.0697e+00,  8.7491e+00],
        [ 6.1819e-03, -1.5457e-01],
        [-5.9866e+00,  5.7360e+00],
        [-8.8681e+00,  8.5229e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7760,   8.4684],
        [ -7.8565,   7.5334],
        [ -5.3828,   5.1303],
        [ -6.1950,   5.9400],
        [  0.3558,  -0.4829],
        [  4.4091,  -4.6599],
        [-12.0665,  11.6697],
        [  0.2449,  -0.3844]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.7676,  12.3576],
        [ -8.6693,   8.3352],
        [  1.8746,  -2.0161],
        [  1.4070,  -1.5425],
        [ -0.5700,   0.4218],
        [-11.6466,  11.2429],
        [ -5.8709,   5.6031],
        [-10.1048,   9.7817]], device='cuda:0')
Iteration Acc 0.8750
tensor([1, 1, 0, 0, 1, 1, 1, 1], device='cuda:0')
tensor([1, 1, 0, 0, 0, 1, 1, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.9537,  -1.1223],
        [ -8.6387,   8.3100],
        [ -0.4293,   0.2810],
        [ -0.5314,   0.3846],
        [ -8.5030,   8.2311],
        [  2.1919,  -2.3598],
        [  4.1272,  -4.3954],
        [-10.1399,   9.8082]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.8238e+00, -1.9797e+00],
        [ 4.7324e-01, -6.3640e-01],
        [ 4.2158e+00, -4.4681e+00],
        [ 4.8006e+00, -5.0873e+00],
        [-8.9697e-01,  7.4562e-01],
        [ 3.4364e+00, -3.6467e+00],
        [ 9.1195e-03, -1.4102e-01],
        [-1.1995e+01,  1.1583e+01]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.0268,  -6.4866],
        [ -8.3851,   8.0624],
        [  3.7661,  -4.1277],
        [  3.6089,  -3.8257],
        [ -9.2582,   8.9187],
        [ -1.9950,   1.8230],
        [ -3.8017,   3.5558],
        [-10.7821,  10.4066]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.8210,   0.6655],
        [-10.0954,   9.6927],
        [  0.9611,  -1.1009],
        [  0.7155,  -0.8656],
        [  1.9213,  -2.0965],
        [-12.9882,  12.6000],
        [  2.9114,  -3.1140],
        [-11.5379,  11.1376]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4803,   6.2200],
        [ -4.0898,   3.8768],
        [  7.4522,  -7.9835],
        [ -8.8976,   8.5739],
        [-10.6732,  10.2953],
        [ -8.6287,   8.3040],
        [ -1.8897,   1.6906],
        [  2.0217,  -2.3149]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3046,   8.9630],
        [  4.0190,  -4.2450],
        [ -0.0169,  -0.1783],
        [  6.9816,  -7.4616],
        [  3.9135,  -4.1098],
        [ -6.0527,   5.7823],
        [-10.1110,   9.7683],
        [  1.0101,  -1.1478]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.7694,  13.3282],
        [ -0.8037,   0.6005],
        [ -3.1392,   2.9545],
        [ -6.3125,   6.0192],
        [  3.1408,  -3.3953],
        [ -8.3983,   8.0869],
        [ -9.1246,   8.7834],
        [ -8.8048,   8.4976]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.3823, -4.6455],
        [-5.4737,  5.2030],
        [-7.8673,  7.5307],
        [ 6.6658, -7.1112],
        [ 7.7865, -8.2838],
        [-2.7067,  2.5091],
        [ 3.9057, -4.1430],
        [-7.9426,  7.6089]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.6124, -5.9854],
        [ 2.9062, -3.1052],
        [-2.4034,  2.2144],
        [ 5.4738, -5.7539],
        [ 7.9369, -8.4746],
        [-7.1664,  6.8794],
        [ 2.5216, -2.7432],
        [ 1.0893, -1.2625]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.6067,  -1.7533],
        [-12.8819,  12.4813],
        [ -7.2641,   6.9752],
        [  6.2173,  -6.5812],
        [ -8.5222,   8.1861],
        [  2.0451,  -2.1955],
        [ -8.6979,   8.3757],
        [ -6.4337,   6.1681]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3785,   8.9974],
        [-10.8591,  10.4976],
        [-10.6028,  10.2256],
        [ -7.7566,   7.5327],
        [  3.0769,  -3.2506],
        [  3.5333,  -3.7693],
        [  0.0547,  -0.2160],
        [  4.2896,  -4.4896]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.3438, -5.6958],
        [-2.2659,  2.0662],
        [ 5.3663, -5.7192],
        [-9.4394,  9.0740],
        [-0.3310,  0.1658],
        [ 4.2299, -4.6409],
        [-7.2454,  6.9650],
        [ 2.1741, -2.3158]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.1151e+00, -4.4815e+00],
        [ 2.4262e+00, -2.5811e+00],
        [-7.3640e+00,  7.1181e+00],
        [-7.4880e+00,  7.2046e+00],
        [-1.1643e+01,  1.1243e+01],
        [ 3.2845e+00, -3.5045e+00],
        [ 7.2710e+00, -7.8680e+00],
        [-1.1217e-02, -2.0292e-01]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.9656,   0.8021],
        [  5.4349,  -5.8184],
        [ -6.2234,   5.9735],
        [-11.7156,  11.3782],
        [ -6.7737,   6.4991],
        [  4.2358,  -4.5672],
        [ -8.8397,   8.5054],
        [  5.6436,  -6.0112]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.8487,  -3.0786],
        [  7.0089,  -7.4295],
        [ -3.5352,   3.3087],
        [-11.9606,  11.5186],
        [-10.4978,  10.0946],
        [ -9.1316,   8.8090],
        [ -2.9076,   2.6986],
        [ -8.3642,   8.0809]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.5547,  5.3254],
        [ 7.2226, -7.7742],
        [ 5.3466, -5.6244],
        [-5.8754,  5.6846],
        [ 4.2813, -4.5610],
        [ 3.5622, -3.8097],
        [ 1.3655, -1.5411],
        [ 4.0111, -4.2519]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7243,   8.3915],
        [  4.7328,  -4.9750],
        [ -7.3852,   7.1101],
        [ -8.1431,   7.8577],
        [  5.8080,  -6.1543],
        [  5.8764,  -6.2621],
        [-14.0310,  13.5236],
        [ -9.2507,   8.9119]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.6827,   8.3842],
        [-12.6679,  12.3043],
        [ -8.4255,   8.1069],
        [  2.4413,  -2.5762],
        [  0.9973,  -1.1304],
        [-10.6512,  10.3099],
        [-11.4011,  10.9841],
        [  3.7109,  -3.9310]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.4856,   8.2052],
        [ -6.7845,   6.4918],
        [ -1.6489,   1.4620],
        [  4.0951,  -4.4871],
        [  8.0281,  -8.6334],
        [  5.6763,  -6.0334],
        [-12.4866,  12.0521],
        [  5.1009,  -5.4993]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.6093,  -2.8177],
        [ -6.6240,   6.3552],
        [ -9.1411,   8.8420],
        [  5.4993,  -5.8159],
        [  0.6663,  -0.8280],
        [ -9.1978,   8.8735],
        [ -6.2939,   6.0306],
        [-10.9371,  10.5780]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1024,  11.7285],
        [  3.3031,  -3.4759],
        [ -6.8332,   6.5455],
        [ -7.7181,   7.4522],
        [ -6.8166,   6.5571],
        [ -8.3643,   8.0879],
        [  4.8478,  -5.1199],
        [  1.1028,  -1.2492]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.1891,   1.0054],
        [-10.2970,   9.9402],
        [ -5.7185,   5.4818],
        [  6.0971,  -6.5056],
        [  7.3539,  -7.8414],
        [ -8.8979,   8.5887],
        [ -7.8027,   7.4880],
        [-11.3134,  10.9853]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.0615, -0.2109],
        [ 6.3567, -6.7684],
        [-9.9704,  9.6594],
        [-0.7470,  0.5732],
        [-1.9816,  1.8016],
        [-0.8724,  0.6490],
        [ 4.5773, -4.9176],
        [ 6.3044, -6.6813]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.8205, -5.1006],
        [-9.8835,  9.5302],
        [ 6.6910, -7.0982],
        [ 3.9544, -4.1896],
        [-8.9662,  8.6685],
        [ 0.0564, -0.2221],
        [ 3.6625, -3.8682],
        [-5.9185,  5.6336]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.5124, -0.6558],
        [-9.9773,  9.6318],
        [ 3.4439, -3.6916],
        [ 3.2997, -3.4749],
        [-9.8038,  9.4632],
        [-9.5845,  9.2383],
        [-2.1181,  1.9477],
        [-0.5733,  0.4072]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.4502,   7.1576],
        [-10.9505,  10.5533],
        [ -0.2202,   0.0588],
        [-11.8722,  11.5092],
        [ -5.7120,   5.4557],
        [ -9.2678,   8.9384],
        [  7.0535,  -7.4989],
        [  3.3939,  -3.5935]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.0360,  11.6561],
        [ -3.9989,   3.7814],
        [  4.6442,  -4.9368],
        [ -4.1531,   3.9195],
        [-11.2714,  10.9045],
        [  6.1406,  -6.5406],
        [  5.9270,  -6.3463],
        [ -4.3839,   4.1557]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.9053,   2.7102],
        [  4.5742,  -4.9547],
        [ -0.1225,  -0.0435],
        [  5.5589,  -5.8694],
        [ -7.4080,   7.1060],
        [-12.6119,  12.1767],
        [  0.5293,  -0.6524],
        [ -1.8672,   1.6667]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1416,   8.8405],
        [ -7.4144,   7.1388],
        [  1.3683,  -1.5431],
        [  4.1787,  -4.4159],
        [ -5.3881,   5.1607],
        [-10.6666,  10.3073],
        [  6.3208,  -6.7914],
        [ -0.5733,   0.4282]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.6579,   5.3931],
        [ -2.6699,   2.4685],
        [  3.0281,  -3.1910],
        [-11.7865,  11.3745],
        [ -3.6842,   3.4660],
        [  4.4133,  -4.6576],
        [-10.2773,   9.9126],
        [ -4.8978,   4.6319]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.7815,  -6.1428],
        [ -9.0036,   8.6711],
        [ -0.6558,   0.5032],
        [ -7.3830,   7.0898],
        [  6.0986,  -6.5634],
        [  0.5796,  -0.7717],
        [  4.0926,  -4.3133],
        [-11.0293,  10.6330]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.0694, -1.2120],
        [ 4.3964, -4.8461],
        [-2.2626,  2.0605],
        [ 2.4837, -2.7094],
        [-0.0928, -0.0805],
        [-7.6781,  7.4943],
        [-8.4598,  8.1490],
        [-4.1812,  3.9573]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.1736,  8.8147],
        [-3.5667,  3.3639],
        [ 5.2338, -5.5918],
        [-6.9183,  6.6361],
        [-0.3067,  0.1380],
        [ 7.4723, -7.9338],
        [-8.2652,  7.9546],
        [-5.1756,  4.9074]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.1396,  -0.0324],
        [  7.4396,  -8.0783],
        [  2.6486,  -2.8723],
        [  0.3310,  -0.4813],
        [ -2.9114,   2.6939],
        [  1.4223,  -1.6040],
        [  5.0413,  -5.3427],
        [-12.2234,  11.7626]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.4582,   7.1957],
        [-13.2672,  12.7853],
        [  3.5469,  -3.7331],
        [-13.4182,  12.9352],
        [-11.1451,  10.7937],
        [  2.0455,  -2.2047],
        [  0.9605,  -1.1514],
        [  2.1590,  -2.3169]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.1304,  -0.2919],
        [-12.4372,  12.0490],
        [  1.8296,  -2.0232],
        [  7.2882,  -7.8057],
        [  7.5850,  -8.0954],
        [ -8.9038,   8.5719],
        [  2.0490,  -2.1919],
        [  7.1956,  -7.7579]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.0058, -1.1660],
        [-1.9076,  1.7457],
        [ 0.5622, -0.7179],
        [ 5.1807, -5.4614],
        [-5.8836,  5.6321],
        [ 6.5164, -6.9349],
        [ 6.9571, -7.3848],
        [ 1.5157, -1.7159]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.6989,   2.5119],
        [ -2.8400,   2.6467],
        [  2.6027,  -2.8520],
        [  7.1340,  -7.5928],
        [ -8.3202,   8.0027],
        [-10.8290,  10.4418],
        [ -0.3768,   0.2084],
        [ -7.0265,   6.7180]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.0831, -4.3491],
        [-9.5576,  9.2203],
        [-0.6991,  0.5430],
        [ 1.7003, -1.8812],
        [ 0.0985, -0.2576],
        [-3.1139,  2.9095],
        [ 4.2752, -4.6678],
        [ 6.7673, -7.1225]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.6664,  -0.8168],
        [ -3.5007,   3.2839],
        [-12.9110,  12.4739],
        [  1.7280,  -1.8805],
        [ -4.2294,   4.0176],
        [ -0.6443,   0.4851],
        [ -0.8469,   0.6458],
        [  2.6966,  -2.8856]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.8806,  -5.2204],
        [ -8.4976,   8.1895],
        [  2.0888,  -2.2757],
        [  2.8266,  -2.9823],
        [-10.0571,   9.7535],
        [-10.9439,  10.6318],
        [ -9.3967,   9.0674],
        [  3.0127,  -3.2388]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-4.4510,  4.2242],
        [ 4.6927, -4.9926],
        [ 0.7021, -0.8630],
        [-4.7935,  4.5580],
        [ 3.6839, -3.9337],
        [ 2.7419, -2.9172],
        [ 6.0784, -6.4423],
        [-0.5634,  0.3772]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.9375,   2.7203],
        [-11.5493,  11.2044],
        [  1.1312,  -1.3013],
        [ -1.9423,   1.7751],
        [ -2.5726,   2.3680],
        [ -7.1074,   6.8479],
        [-11.7799,  11.3610],
        [  4.1098,  -4.3502]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.1692,  -4.4132],
        [-11.6129,  11.2246],
        [  0.9417,  -1.1382],
        [  6.3451,  -6.7927],
        [  1.7615,  -1.9752],
        [ -1.4847,   1.3001],
        [  3.4809,  -3.7046],
        [  3.1067,  -3.2930]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.9428,  8.5882],
        [ 6.1284, -6.4923],
        [ 5.5898, -5.9880],
        [ 2.3718, -2.5487],
        [ 4.1628, -4.4945],
        [-9.9113,  9.5842],
        [-3.3428,  3.1117],
        [-5.9691,  5.7053]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.7525e-02, -1.3040e-01],
        [-8.3124e+00,  8.0152e+00],
        [ 7.1796e+00, -7.5803e+00],
        [-1.7705e+01,  1.7133e+01],
        [ 1.3560e+00, -1.5188e+00],
        [-9.3643e+00,  9.0751e+00],
        [ 1.8985e+00, -2.0511e+00],
        [-8.8496e+00,  8.5827e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.2528, -4.4508],
        [ 4.5742, -4.9016],
        [ 0.8225, -0.9514],
        [-1.7104,  1.5055],
        [-1.7945,  1.6155],
        [ 5.4471, -5.7617],
        [ 7.5434, -7.9696],
        [ 6.1067, -6.4551]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.9739,  -7.4453],
        [-10.4097,  10.0504],
        [ -7.4826,   7.1813],
        [ -7.6062,   7.2963],
        [-13.6689,  13.2642],
        [  2.6059,  -2.7795],
        [  1.1500,  -1.2844],
        [  5.4962,  -5.8656]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.3390,   6.0675],
        [  4.0497,  -4.2729],
        [ -2.7032,   2.4949],
        [ -0.9225,   0.7476],
        [  4.2909,  -4.5625],
        [  3.6950,  -3.9388],
        [ -6.6725,   6.4132],
        [-10.4121,  10.0234]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.4726,  -5.8128],
        [-11.9615,  11.5330],
        [  0.2425,  -0.4288],
        [ -4.5075,   4.2815],
        [ -6.0846,   5.8215],
        [-11.9488,  11.5657],
        [-10.4003,   9.9962],
        [  1.7237,  -1.9131]], device='cuda:0')
Iteration Acc 0.8750
tensor([0, 1, 0, 1, 1, 1, 1, 0], device='cuda:0')
tensor([0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.1617, -0.0096],
        [-4.2968,  4.0674],
        [ 4.8106, -5.1486],
        [-1.7269,  1.5499],
        [ 4.4316, -4.6810],
        [-0.6340,  0.4771],
        [ 1.5558, -1.7064],
        [-3.2313,  3.0261]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.3509,   4.1164],
        [ -0.7235,   0.5662],
        [  7.6783,  -8.1921],
        [-10.5607,  10.1512],
        [  8.1687,  -8.7294],
        [  4.1163,  -4.3908],
        [  8.7352,  -9.3524],
        [-12.9085,  12.3973]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.2545,  -3.4363],
        [-10.8292,  10.4898],
        [-13.3128,  12.9064],
        [  2.7775,  -2.9461],
        [ -8.2627,   7.9683],
        [  5.5583,  -5.8645],
        [-12.6477,  12.2901],
        [  1.1004,  -1.2383]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7996,   8.4941],
        [-10.1652,   9.7912],
        [ -8.9457,   8.5950],
        [ -0.3512,   0.1955],
        [ -6.0569,   5.8277],
        [-10.0833,   9.7508],
        [ -8.0148,   7.6757],
        [ -7.4194,   7.1397]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.1401,  -7.5532],
        [  4.5283,  -4.8262],
        [  3.9587,  -4.2313],
        [  3.6176,  -3.8783],
        [  7.3247,  -7.8539],
        [-10.3033,   9.9634],
        [  0.4775,  -0.6650],
        [  4.8836,  -5.2169]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.8645, -3.0625],
        [ 4.8306, -5.0807],
        [ 1.5179, -1.6400],
        [-1.1519,  0.9903],
        [ 4.7198, -4.9993],
        [-7.0001,  6.7233],
        [ 3.7771, -4.0182],
        [-8.8507,  8.5357]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.9937,   5.7219],
        [ -9.2002,   8.9084],
        [  1.3247,  -1.4640],
        [ -4.8832,   4.6397],
        [ -5.8996,   5.6195],
        [ -1.9828,   1.7818],
        [ -0.1585,  -0.0175],
        [-11.1467,  10.7120]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.0378,  -5.3467],
        [  2.2993,  -2.4900],
        [ -4.0594,   3.8363],
        [ -5.3699,   5.1184],
        [  4.1887,  -4.4444],
        [-11.0316,  10.5791],
        [  0.9044,  -1.1296],
        [ -0.9336,   0.7665]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.6387e+00, -5.9634e+00],
        [-1.6303e-03, -1.7210e-01],
        [-9.6433e+00,  9.2880e+00],
        [ 5.5275e+00, -5.8182e+00],
        [-1.1583e+01,  1.1132e+01],
        [-4.2656e+00,  4.0528e+00],
        [ 3.8936e+00, -4.0717e+00],
        [-1.0695e+00,  8.7921e-01]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.2348,  -6.6614],
        [  1.3042,  -1.4643],
        [ -8.8290,   8.5003],
        [-13.6823,  13.1884],
        [  4.1404,  -4.4612],
        [  6.1771,  -6.5413],
        [  4.6272,  -4.9084],
        [  0.1591,  -0.3239]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7771,   9.4738],
        [-10.9352,  10.5466],
        [ -7.4114,   7.1326],
        [  2.1877,  -2.3426],
        [  2.2090,  -2.3475],
        [-11.2378,  10.8504],
        [-16.7017,  16.1052],
        [ -5.2756,   5.1152]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.7662,  7.4697],
        [ 0.0395, -0.2044],
        [-5.8447,  5.5934],
        [ 5.3641, -5.6496],
        [ 2.2850, -2.4612],
        [ 6.4474, -6.9728],
        [-9.0735,  8.7338],
        [ 8.5005, -9.1240]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.1658,  -1.3169],
        [-10.1908,   9.8147],
        [  4.1718,  -4.4668],
        [ -8.3131,   8.0489],
        [  5.8472,  -6.2560],
        [  4.3134,  -4.5804],
        [  3.1996,  -3.4396],
        [ -4.8392,   4.5871]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.9785,  -3.1787],
        [ -8.5009,   8.2354],
        [ -5.4886,   5.2243],
        [-12.4499,  12.0795],
        [ -7.8984,   7.6147],
        [ -7.6426,   7.3833],
        [ -0.1707,   0.0201],
        [-10.7376,  10.3544]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.6297,   1.4471],
        [  4.0467,  -4.2906],
        [  4.5468,  -4.8086],
        [  6.6577,  -7.1740],
        [-11.6238,  11.2388],
        [ -9.5974,   9.2549],
        [ -9.1242,   8.7558],
        [ -0.6672,   0.5032]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.7806,  -7.2302],
        [  6.8023,  -7.2495],
        [  3.3470,  -3.5708],
        [ -7.1753,   6.9279],
        [ -8.8917,   8.5919],
        [-13.3499,  12.8571],
        [  2.0545,  -2.2018],
        [  5.9942,  -6.4016]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5266,  10.1378],
        [  0.7335,  -0.8862],
        [ -8.1346,   7.8632],
        [ -8.0388,   7.7349],
        [  1.7800,  -1.9281],
        [-11.5178,  11.1833],
        [-12.0042,  11.6364],
        [ -2.2501,   2.0571]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.5326,   4.2827],
        [  5.1243,  -5.4550],
        [ -8.5535,   8.2464],
        [ -9.0374,   8.7197],
        [-12.0837,  11.6549],
        [  4.8413,  -5.0966],
        [ -6.6424,   6.4077],
        [ -6.5882,   6.3154]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.7161,   1.5295],
        [  1.0191,  -1.1968],
        [  2.8758,  -3.0344],
        [ -2.5776,   2.3609],
        [ -5.6504,   5.3673],
        [-10.9299,  10.5669],
        [-10.0990,   9.7382],
        [ -9.4191,   9.0956]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.0574,   0.8721],
        [ -6.7492,   6.4781],
        [  6.4123,  -6.8307],
        [  3.2743,  -3.5446],
        [  0.6782,  -0.8420],
        [  3.3299,  -3.5379],
        [-10.5734,  10.2053],
        [  7.0255,  -7.4804]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.4869,  5.2375],
        [-9.3256,  9.0211],
        [ 6.6946, -7.0883],
        [-7.8271,  7.5611],
        [-5.7534,  5.4975],
        [-8.3266,  8.0391],
        [-6.1396,  5.8663],
        [-8.0668,  7.7741]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.3905,  -4.6798],
        [  0.5599,  -0.7297],
        [ -3.4785,   3.2544],
        [  0.3723,  -0.6553],
        [  0.5621,  -0.7276],
        [ -8.9622,   8.6353],
        [-10.7082,  10.3182],
        [  7.1031,  -7.5617]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.7380,   6.4892],
        [-10.6719,  10.3007],
        [ -7.1767,   6.9191],
        [  4.8357,  -5.2263],
        [  4.6389,  -4.8876],
        [ -9.7226,   9.3678],
        [  1.5059,  -1.6802],
        [  8.9784,  -9.6521]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.5940,  -2.7448],
        [-12.6967,  12.2417],
        [ -0.9118,   0.7391],
        [-10.9661,  10.6011],
        [  2.0641,  -2.2571],
        [ -4.3185,   4.1046],
        [-11.0878,  10.7471],
        [  4.3433,  -4.6688]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.0734,  -0.2542],
        [  1.4831,  -1.6546],
        [  0.8503,  -1.0483],
        [-13.0170,  12.6009],
        [  4.2026,  -4.4613],
        [ -6.4174,   6.1512],
        [  6.9013,  -7.3580],
        [ -0.0458,  -0.1160]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.2120,  -1.3762],
        [  0.0513,  -0.1884],
        [  5.1202,  -5.4300],
        [ -9.7554,   9.4143],
        [-12.9274,  12.4936],
        [ -6.0856,   5.8352],
        [  1.7970,  -1.9421],
        [-11.2174,  10.8715]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3013,   8.9457],
        [  3.5419,  -3.7542],
        [  0.6665,  -0.8181],
        [  3.3026,  -3.4701],
        [ -4.6123,   4.3988],
        [  1.1382,  -1.3076],
        [-13.0216,  12.6229],
        [  3.2966,  -3.4709]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.8311,   9.4826],
        [-12.4943,  12.1029],
        [ -7.9871,   7.6975],
        [ -9.7793,   9.4175],
        [-10.0395,   9.7350],
        [  6.1887,  -6.6180],
        [  0.5923,  -0.7557],
        [  3.9535,  -4.1499]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.2601,   0.0902],
        [  6.5002,  -6.9479],
        [  6.7659,  -7.2385],
        [  2.6551,  -2.8173],
        [  7.6790,  -8.2438],
        [  5.9898,  -6.3391],
        [  3.2036,  -3.4279],
        [-10.4484,  10.1220]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.2895,  13.7925],
        [ -5.9686,   5.7213],
        [ -3.6862,   3.4758],
        [-12.4587,  12.0704],
        [  2.7178,  -2.9047],
        [  6.5795,  -7.0365],
        [ -9.1869,   8.8535],
        [  3.7415,  -3.9859]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.4107,  -0.6385],
        [  1.3222,  -1.4732],
        [  2.9798,  -3.1576],
        [-12.8710,  12.4318],
        [-10.7205,  10.3640],
        [ -9.0887,   8.7553],
        [ -3.0374,   2.8288],
        [ -8.3116,   8.0161]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.6049,   5.3669],
        [ -3.1429,   2.9432],
        [ -1.5699,   1.3930],
        [ -1.6934,   1.5274],
        [-10.1161,   9.7614],
        [ -1.7857,   1.5960],
        [ -0.5399,   0.3763],
        [  2.1637,  -2.3367]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.2830,   7.9736],
        [-11.5842,  11.1688],
        [  4.3677,  -4.6044],
        [ -4.2219,   4.0201],
        [  1.4162,  -1.5526],
        [ -7.6964,   7.4178],
        [  7.2075,  -7.6948],
        [ -8.3509,   8.0285]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.1256,  -7.6307],
        [ -7.1807,   6.9285],
        [  2.7663,  -2.9388],
        [-12.5608,  12.1433],
        [  0.1062,  -0.2514],
        [ -0.3214,   0.1788],
        [  5.0407,  -5.3684],
        [ -7.5860,   7.3138]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.9612,  10.5716],
        [  4.1285,  -4.3797],
        [ -5.8300,   5.5920],
        [  3.7233,  -3.9597],
        [ -6.9197,   6.6833],
        [ -7.4328,   7.1117],
        [-14.6910,  14.1562],
        [  6.1435,  -6.6066]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.2933,  -2.5347],
        [  5.1664,  -5.4895],
        [-11.6785,  11.2720],
        [-10.8126,  10.4038],
        [-14.0108,  13.5620],
        [ -2.5520,   2.3601],
        [  1.2616,  -1.4392],
        [  4.4510,  -4.7004]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.5244,  8.1765],
        [-2.3994,  2.1936],
        [-1.2096,  1.0336],
        [-0.9797,  0.7870],
        [ 0.7865, -0.9294],
        [ 3.3058, -3.5046],
        [-7.6329,  7.3456],
        [-9.9478,  9.5475]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.2208,   8.8800],
        [  3.5363,  -3.7123],
        [-10.1140,   9.7467],
        [ -8.1271,   7.8648],
        [-10.9082,  10.5079],
        [  6.6542,  -7.0877],
        [  6.2301,  -6.7145],
        [ -3.3875,   3.1704]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.6859,  10.3045],
        [ -6.6387,   6.3632],
        [  0.4857,  -0.6208],
        [-12.1606,  11.7353],
        [-10.2352,   9.9151],
        [ -9.1582,   8.8422],
        [  4.7932,  -5.0303],
        [ -0.8922,   0.7118]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.9777, -2.1026],
        [ 4.4862, -4.7361],
        [-9.7093,  9.3262],
        [ 6.1605, -6.4893],
        [ 0.4492, -0.6593],
        [-0.3561,  0.1701],
        [-7.1238,  6.8283],
        [-6.9328,  6.7371]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.7810,  -4.0574],
        [-10.3863,  10.0060],
        [  5.0167,  -5.2401],
        [ -0.2283,   0.0934],
        [  4.1578,  -4.4453],
        [ -8.9761,   8.6729],
        [-12.9645,  12.5496],
        [-13.2180,  12.7540]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.7574,  -7.2589],
        [  0.5998,  -0.7573],
        [  3.2460,  -3.4461],
        [-11.2837,  10.9454],
        [  5.7071,  -6.1385],
        [  7.4891,  -8.0662],
        [ -9.0111,   8.6734],
        [  3.1226,  -3.3052]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.6543,  10.3324],
        [  5.3892,  -5.7860],
        [ -9.8362,   9.4813],
        [-15.6237,  15.0449],
        [  8.8952,  -9.5249],
        [  3.0130,  -3.1869],
        [ -9.3417,   8.9902],
        [-10.1140,   9.7397]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.5871,  -6.0658],
        [-10.9460,  10.5340],
        [  4.8337,  -5.1405],
        [ -9.1549,   8.8239],
        [ -0.6873,   0.4947],
        [  8.2904,  -8.9848],
        [ -9.4726,   9.0853],
        [-10.6981,  10.3528]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.5956, -7.0136],
        [ 3.7654, -4.0028],
        [-3.8667,  3.6506],
        [ 4.5691, -4.8405],
        [-9.2170,  8.8833],
        [-9.8827,  9.5684],
        [-2.0077,  1.8237],
        [ 7.6640, -8.1403]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.0918,  10.7018],
        [  5.2938,  -5.7403],
        [ -1.3252,   1.1632],
        [ -8.3963,   8.0573],
        [-10.3291,   9.9713],
        [ -8.9927,   8.6787],
        [  3.4151,  -3.6621],
        [ -4.3200,   4.1068]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.7281, -1.8813],
        [ 7.6850, -8.2199],
        [ 1.3259, -1.4439],
        [ 0.2810, -0.4517],
        [ 4.6754, -4.9176],
        [ 0.5373, -0.6847],
        [-8.7369,  8.4350],
        [-5.9374,  5.6762]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.3865, -4.6408],
        [ 6.9751, -7.4196],
        [ 0.4946, -0.6579],
        [ 6.1666, -6.5377],
        [ 3.2215, -3.4701],
        [ 2.3784, -2.5324],
        [ 0.8630, -0.9988],
        [-6.7862,  6.4914]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.4416,  10.0928],
        [  3.4122,  -3.5836],
        [  8.6213,  -9.2222],
        [-10.4804,  10.0829],
        [ -7.9308,   7.6448],
        [  7.5459,  -7.9710],
        [ -5.7663,   5.5146],
        [-13.6704,  13.2455]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.5786,  -5.9220],
        [-12.7032,  12.2895],
        [ -9.0255,   8.6825],
        [  6.1442,  -6.5107],
        [-11.8258,  11.3372],
        [  1.5157,  -1.6957],
        [-11.8476,  11.4088],
        [ -9.0187,   8.7008]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 1, 1, 0, 1, 0, 1, 1], device='cuda:0')
tensor([0, 1, 1, 0, 1, 0, 1, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.6907,  13.2551],
        [ -4.2880,   4.0755],
        [  5.0255,  -5.3125],
        [ -6.2694,   5.9972],
        [ -9.3638,   9.0000],
        [  4.7530,  -5.0189],
        [-10.2200,   9.8854],
        [ -2.4422,   2.2690]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1890,   8.8440],
        [-10.4923,  10.1218],
        [  1.8197,  -2.0358],
        [ -8.0174,   7.7320],
        [-11.6747,  11.2415],
        [  2.1053,  -2.3118],
        [  3.8430,  -4.2445],
        [  1.2161,  -1.4106]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.3686,  -4.6142],
        [-10.2555,   9.9048],
        [  1.6741,  -1.9212],
        [ -6.4932,   6.1961],
        [ -3.5567,   3.3614],
        [  4.8926,  -5.1785],
        [  8.8417,  -9.5054],
        [  5.6899,  -6.1178]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.9010,  -7.4510],
        [  0.8300,  -0.9902],
        [  3.9932,  -4.2189],
        [ -4.1856,   3.9738],
        [-11.2089,  10.8940],
        [-11.6116,  11.2538],
        [-12.1044,  11.7202],
        [  4.8822,  -5.1752]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.9118,  6.6078],
        [ 2.2026, -2.3511],
        [-9.3711,  9.0903],
        [ 4.3527, -4.6539],
        [-7.7882,  7.4719],
        [ 3.3291, -3.4943],
        [-9.6240,  9.2636],
        [ 1.3272, -1.4822]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.3433,   9.9807],
        [  1.4381,  -1.5816],
        [  2.1883,  -2.3740],
        [ -0.5711,   0.3821],
        [  3.8184,  -4.0302],
        [  4.0988,  -4.3513],
        [ -6.6926,   6.4385],
        [-10.1514,   9.7844]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 8.7398, -9.4538],
        [-6.5667,  6.3051],
        [ 7.3985, -7.8257],
        [-2.5479,  2.3519],
        [ 3.5585, -3.8436],
        [ 3.9341, -4.1579],
        [-5.5672,  5.3454],
        [-4.4907,  4.2734]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.0690,  -0.1044],
        [ -8.8236,   8.5401],
        [ -8.9537,   8.6074],
        [  3.9797,  -4.2110],
        [ -2.2824,   2.0960],
        [ -5.8998,   5.6733],
        [-12.5317,  12.1560],
        [  0.8372,  -0.9807]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.5758,  9.2871],
        [-4.5806,  4.3245],
        [-9.7137,  9.3795],
        [ 2.2321, -2.3909],
        [-9.8048,  9.4123],
        [ 1.5840, -1.7267],
        [ 6.4742, -6.8398],
        [ 2.0104, -2.1243]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.4333,  -1.5992],
        [-13.7445,  13.2982],
        [-12.5581,  12.1339],
        [  1.7444,  -1.9180],
        [-12.3789,  11.9024],
        [ -7.8548,   7.5889],
        [  7.1542,  -7.5726],
        [ -6.0103,   5.7667]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.7351, -5.0865],
        [-9.1097,  8.7648],
        [ 8.1541, -8.6923],
        [-9.6169,  9.2496],
        [ 2.5056, -2.7427],
        [-3.6326,  3.4116],
        [-4.8611,  4.6112],
        [ 5.0271, -5.3779]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.1012,  -1.3088],
        [ -9.5800,   9.2255],
        [-14.3652,  13.8602],
        [  7.7704,  -8.3029],
        [  5.6466,  -6.0404],
        [ -6.4006,   6.1457],
        [  5.4410,  -5.8177],
        [ -7.0436,   6.7975]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.5974,   3.3731],
        [  6.8969,  -7.2823],
        [  7.8926,  -8.4966],
        [  3.0396,  -3.2395],
        [-12.3190,  11.9799],
        [ -8.1825,   7.8900],
        [  4.1470,  -4.3900],
        [ -0.0426,  -0.1397]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.9969,  -6.5257],
        [ -9.9006,   9.6205],
        [-11.3076,  10.9308],
        [ -9.6996,   9.3132],
        [  5.1557,  -5.4798],
        [ -8.8110,   8.5090],
        [ -1.9394,   1.7526],
        [  3.7932,  -4.0624]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.1110,  -5.4190],
        [ -0.7716,   0.6063],
        [ -3.2286,   3.0347],
        [  5.8033,  -6.0754],
        [-11.6062,  11.1806],
        [ -5.4667,   5.2007],
        [  3.6734,  -3.9264],
        [  7.8118,  -8.3487]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3327,  -5.6750],
        [ -2.6248,   2.4370],
        [  2.3480,  -2.5265],
        [ -5.7473,   5.4871],
        [  7.9439,  -8.5488],
        [  3.2953,  -3.4792],
        [ -6.7096,   6.4549],
        [-12.0314,  11.5595]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.0387,  -0.1947],
        [  7.0759,  -7.5289],
        [-10.4857,  10.1247],
        [-11.6627,  11.2914],
        [ -0.0136,  -0.2015],
        [  4.4508,  -4.7252],
        [  3.8245,  -4.0106],
        [ -8.1736,   7.8975]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-4.8870,  4.6394],
        [ 0.1759, -0.3121],
        [ 6.0756, -6.5096],
        [-7.8966,  7.5747],
        [ 3.4769, -3.6761],
        [-2.3893,  2.1741],
        [-2.9058,  2.7150],
        [ 1.8641, -2.0296]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.3559,  -4.5917],
        [  3.3617,  -3.5964],
        [-10.7489,  10.3997],
        [ -4.7268,   4.4768],
        [ -3.0248,   2.8226],
        [-10.3764,  10.0241],
        [  0.0194,  -0.2073],
        [ -9.9534,   9.5792]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.8172,  6.5380],
        [ 0.4823, -0.6313],
        [ 7.6353, -8.1652],
        [ 4.1938, -4.4167],
        [-2.6333,  2.4291],
        [-7.9817,  7.6983],
        [-7.6273,  7.3272],
        [ 1.9938, -2.1813]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.4696,  -6.9496],
        [-10.5629,  10.2067],
        [-10.7601,  10.3996],
        [-11.0580,  10.6704],
        [ -7.1299,   6.8751],
        [  6.9764,  -7.5508],
        [  2.5375,  -2.7319],
        [-10.9320,  10.5103]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.2262,  -6.6822],
        [  2.2944,  -2.4899],
        [-12.0384,  11.6029],
        [  1.1346,  -1.2677],
        [  6.7693,  -7.2752],
        [  4.1280,  -4.3162],
        [-10.0004,   9.6640],
        [-10.8247,  10.4838]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.7026,   7.4449],
        [-10.2651,   9.8776],
        [-12.1402,  11.7093],
        [ -3.7592,   3.4801],
        [-15.2331,  14.7680],
        [-13.1804,  12.7253],
        [ -6.4804,   6.2255],
        [ -0.0689,  -0.1077]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.7995,  -1.9903],
        [ -1.6341,   1.4844],
        [ -6.6260,   6.3442],
        [ -7.4774,   7.2248],
        [  3.7672,  -4.0239],
        [ -8.5820,   8.3083],
        [-11.4016,  10.9841],
        [  0.4376,  -0.6175]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.5429e-03, -1.6386e-01],
        [-6.7179e+00,  6.4615e+00],
        [ 7.1829e+00, -7.7257e+00],
        [ 2.9857e-01, -4.5863e-01],
        [-1.0184e+00,  8.4538e-01],
        [-9.0898e+00,  8.7861e+00],
        [-7.2728e+00,  6.9751e+00],
        [-9.3784e+00,  9.0264e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.6520,   9.2640],
        [  3.0101,  -3.1850],
        [  8.0859,  -8.4979],
        [-11.9235,  11.5124],
        [ -7.9967,   7.6745],
        [ -8.7296,   8.3878],
        [  3.8794,  -4.1475],
        [  7.5683,  -8.0369]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.3156,  -6.6836],
        [ -8.4341,   8.1616],
        [  5.8298,  -6.2160],
        [-12.5056,  12.0619],
        [ -2.9037,   2.6949],
        [-13.6277,  13.0917],
        [ -7.6447,   7.3637],
        [  5.5591,  -5.9311]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.4910,   9.1443],
        [ -6.2788,   6.0339],
        [ -9.2039,   8.8659],
        [ -3.7143,   3.4939],
        [-11.9319,  11.5939],
        [ -4.9052,   4.6612],
        [ -7.8605,   7.6117],
        [-14.5836,  14.0845]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.8880,  -7.3465],
        [  1.6513,  -1.7932],
        [ -4.6284,   4.3789],
        [ -7.0569,   6.8132],
        [ -6.6060,   6.3330],
        [ -0.9450,   0.7818],
        [-10.7234,  10.3953],
        [-10.6134,  10.1767]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.5629,   8.2160],
        [ -9.0433,   8.7479],
        [  1.9563,  -2.1149],
        [ -1.3513,   1.1667],
        [-14.6084,  14.0235],
        [  3.3539,  -3.5799],
        [ -8.2993,   8.0087],
        [  6.2181,  -6.6240]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.8456,   9.5374],
        [ -2.3170,   2.1071],
        [ -4.9613,   4.7273],
        [  5.1111,  -5.3874],
        [-11.9386,  11.5772],
        [-11.1291,  10.8065],
        [ -9.8622,   9.5228],
        [  5.8408,  -6.2010]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.7919,   1.6138],
        [  5.1892,  -5.4964],
        [-10.1642,   9.8701],
        [-10.0709,   9.7261],
        [  7.5559,  -8.0790],
        [  4.3016,  -4.5530],
        [-13.2268,  12.8056],
        [ -3.1956,   3.0062]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.8992,   3.6749],
        [ -3.3600,   3.1390],
        [-13.3115,  12.8222],
        [  3.6280,  -3.8587],
        [-10.2030,   9.8182],
        [-10.7804,  10.3609],
        [ -9.8654,   9.6518],
        [ -6.3044,   6.0878]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.6128,  -8.1185],
        [ -6.6417,   6.3790],
        [ -9.0058,   8.7447],
        [-10.1031,   9.7730],
        [  4.5023,  -4.8157],
        [  3.6809,  -3.9224],
        [ -2.6346,   2.4421],
        [  6.2256,  -6.6752]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.0853,  -7.5332],
        [ -5.4348,   5.2047],
        [ -8.0240,   7.7059],
        [-13.4212,  12.9552],
        [  5.7898,  -6.2322],
        [  6.4124,  -6.8472],
        [  2.5776,  -2.8317],
        [  4.2040,  -4.4872]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.7402,   4.4903],
        [ -5.9800,   5.7361],
        [-11.8061,  11.4055],
        [  2.2924,  -2.4421],
        [-13.2014,  12.7661],
        [  1.7663,  -1.9583],
        [-10.1347,   9.8019],
        [ -2.6284,   2.4428]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.9637,   6.6621],
        [ -3.2734,   3.0609],
        [  3.2870,  -3.4767],
        [ -7.6877,   7.4164],
        [  2.6739,  -2.8471],
        [ -4.7244,   4.4991],
        [-13.6543,  13.1350],
        [ -9.3627,   9.0090]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.4076,   9.0679],
        [ -2.8570,   2.6440],
        [ -5.3770,   5.1277],
        [-11.2257,  10.7851],
        [  3.5749,  -3.7917],
        [  6.2742,  -6.5890],
        [-12.3205,  11.9323],
        [ -0.3232,   0.1385]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.3410,   0.1465],
        [ -6.2583,   5.9982],
        [ -3.9259,   3.7232],
        [ -2.3458,   2.1193],
        [-11.0044,  10.5960],
        [  2.3384,  -2.5242],
        [  5.3346,  -5.6159],
        [  7.4197,  -7.9571]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1014,  11.7362],
        [  1.1941,  -1.3571],
        [  1.4859,  -1.6273],
        [  2.1302,  -2.3855],
        [ -4.1289,   3.9551],
        [-10.0461,   9.6826],
        [ -2.5647,   2.3711],
        [ -2.3859,   2.1692]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.8751,   4.6394],
        [  2.3143,  -2.5280],
        [  3.8590,  -4.1085],
        [  3.9425,  -4.2905],
        [ -4.4949,   4.2580],
        [  3.3028,  -3.5132],
        [ -1.0372,   0.8518],
        [-11.9089,  11.5348]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.0329,  10.6182],
        [ -0.1295,  -0.0385],
        [  6.9986,  -7.4841],
        [ -8.2289,   7.9254],
        [  3.4139,  -3.6368],
        [ -5.1939,   4.9054],
        [ -3.8559,   3.6131],
        [ -9.5993,   9.2508]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.1203, -6.5133],
        [ 4.4195, -4.7062],
        [ 8.2339, -8.8502],
        [-6.8074,  6.5359],
        [-7.1031,  6.8101],
        [-7.0140,  6.7517],
        [ 4.8579, -5.1866],
        [ 5.2581, -5.6218]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.9960, -1.1514],
        [-1.6536,  1.4810],
        [ 7.0100, -7.4600],
        [-8.1081,  7.7952],
        [-5.2603,  5.0370],
        [-9.3167,  8.9677],
        [ 0.4386, -0.6305],
        [ 3.8840, -4.1195]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.0582,   0.9042],
        [ -4.5055,   4.2742],
        [ -9.1163,   8.7850],
        [ -0.4663,   0.2868],
        [ -0.3728,   0.2083],
        [-11.3047,  10.9254],
        [  2.8074,  -3.0197],
        [-12.8245,  12.3622]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.8287,  -6.2392],
        [ -7.6302,   7.3471],
        [-10.7428,  10.3440],
        [ -5.8245,   5.5743],
        [ -9.2793,   8.9774],
        [-10.3026,   9.9427],
        [-11.8043,  11.4594],
        [  6.2472,  -6.6659]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.0410,   0.8638],
        [  4.9795,  -5.4438],
        [  0.2657,  -0.4186],
        [  3.4086,  -3.6188],
        [  0.2083,  -0.3654],
        [ -4.5122,   4.2929],
        [ -9.3800,   9.0373],
        [-11.9843,  11.6556]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.4841,  11.0448],
        [  6.2807,  -6.7170],
        [ -8.9627,   8.6250],
        [-11.5263,  11.1401],
        [  5.5585,  -5.8391],
        [  7.2524,  -7.7889],
        [ -7.4330,   7.1604],
        [  2.5012,  -2.7083]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.5227, -8.0775],
        [-1.5666,  1.3721],
        [-9.3448,  8.9775],
        [-0.6761,  0.5165],
        [-1.7155,  1.5476],
        [ 7.0346, -7.5095],
        [-5.2173,  4.9384],
        [ 1.9508, -2.1816]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.3552, -7.9155],
        [-5.9056,  5.6217],
        [ 5.9428, -6.2971],
        [-8.2959,  8.0168],
        [ 1.4623, -1.6085],
        [-1.3329,  1.1573],
        [-8.8523,  8.5495],
        [ 1.4870, -1.6507]], device='cuda:0')
Iteration Acc 0.8750
tensor([0, 1, 0, 1, 0, 1, 1, 0], device='cuda:0')
tensor([0, 1, 0, 1, 0, 0, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.7384,  8.4434],
        [-8.4736,  8.1562],
        [ 1.9396, -2.1195],
        [ 4.9419, -5.2740],
        [-6.9533,  6.6796],
        [ 0.1596, -0.3078],
        [-9.3287,  8.9979],
        [-9.5982,  9.2555]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.6878,  13.2068],
        [  5.1421,  -5.4891],
        [-10.6410,  10.2914],
        [  0.4047,  -0.5661],
        [  3.3608,  -3.5661],
        [  3.0324,  -3.2687],
        [-11.1290,  10.7259],
        [  6.4263,  -6.8510]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.2411,   9.8644],
        [  6.1220,  -6.4967],
        [-10.8369,  10.4522],
        [ -6.3033,   6.0221],
        [  5.8964,  -6.2253],
        [  4.3124,  -4.5711],
        [  4.0900,  -4.3110],
        [  0.7777,  -1.0171]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.4199, -6.8290],
        [ 1.2711, -1.4390],
        [-0.7244,  0.5683],
        [ 4.7209, -5.0407],
        [-2.1470,  1.9719],
        [-6.5894,  6.2898],
        [ 0.8005, -0.9594],
        [-9.2279,  8.8769]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.1777,  -7.6711],
        [ -8.3330,   8.0335],
        [  3.6256,  -3.8501],
        [-10.7118,  10.3030],
        [  2.8818,  -3.0772],
        [  1.6784,  -1.8004],
        [ -7.0525,   6.7619],
        [ -6.3744,   6.1229]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.5154,  9.1646],
        [ 5.4572, -5.8236],
        [ 7.9719, -8.5273],
        [-7.2126,  6.9078],
        [ 4.0636, -4.3048],
        [-6.9848,  6.7161],
        [-5.2590,  5.0026],
        [ 3.5965, -3.8325]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.0189,   5.7668],
        [-11.5040,  11.0900],
        [  6.2427,  -6.6735],
        [  1.0374,  -1.1990],
        [  1.3410,  -1.5298],
        [  0.0497,  -0.1869],
        [-12.0808,  11.6048],
        [-16.3525,  15.8717]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.6429,  -8.1323],
        [ -4.6922,   4.4588],
        [  3.6089,  -3.8069],
        [-11.7160,  11.2981],
        [-10.6433,  10.2484],
        [-10.9117,  10.5298],
        [  5.1858,  -5.5120],
        [ -3.6907,   3.4625]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0545,   7.7491],
        [ -7.6243,   7.3296],
        [ -3.7765,   3.5465],
        [ -7.9882,   7.7332],
        [ -4.4608,   4.1974],
        [-14.6832,  14.1978],
        [  6.8109,  -7.3048],
        [  0.5170,  -0.6417]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.0087, -2.1662],
        [ 1.9937, -2.1473],
        [ 4.1184, -4.4122],
        [-6.4179,  6.1670],
        [ 5.1593, -5.4405],
        [ 7.0718, -7.5065],
        [-4.3211,  4.0712],
        [-0.9235,  0.7507]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6251,  -5.9556],
        [-10.6991,  10.3284],
        [ -3.7052,   3.4909],
        [ -0.1321,  -0.0629],
        [  3.7297,  -3.9562],
        [ -8.0674,   7.7918],
        [-10.3679,   9.9630],
        [ -9.7140,   9.3557]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.4476,  13.0370],
        [ -8.3763,   8.0853],
        [ -7.4796,   7.1880],
        [ -4.5996,   4.3864],
        [ -9.9004,   9.5563],
        [  3.8582,  -4.0732],
        [-10.3694,  10.0172],
        [ -7.7593,   7.4331]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.7371, -5.0248],
        [-9.5676,  9.1986],
        [ 5.4725, -5.7922],
        [-1.0377,  0.8710],
        [-8.2204,  7.8932],
        [-2.9725,  2.7874],
        [-2.3805,  2.1875],
        [-8.5872,  8.3126]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.0757, -3.3002],
        [-9.9600,  9.6648],
        [-0.9730,  0.7807],
        [ 1.3793, -1.5588],
        [ 2.3826, -2.5554],
        [-3.2306,  3.0145],
        [-4.9531,  4.7193],
        [-9.3324,  8.9800]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.1001,  -1.2718],
        [ -7.5278,   7.2351],
        [ -2.8214,   2.6133],
        [-10.6014,  10.2460],
        [-10.3300,   9.9216],
        [  6.7698,  -7.1962],
        [ -8.2286,   7.8622],
        [ -9.9461,   9.6138]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.3685,  10.0416],
        [ -0.0109,  -0.1424],
        [  0.4097,  -0.5355],
        [ -5.4835,   5.2445],
        [  5.8076,  -6.0995],
        [ -7.6727,   7.4007],
        [  5.5971,  -5.9642],
        [  2.1058,  -2.2947]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.5399,   9.1625],
        [ -6.4537,   6.1971],
        [ -9.1785,   8.8430],
        [  2.0771,  -2.2606],
        [ -6.4813,   6.1815],
        [  6.7917,  -7.2725],
        [-11.5914,  11.1922],
        [ -9.0606,   8.7329]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.8608,  -2.0543],
        [ -5.1809,   4.9482],
        [-11.8176,  11.3402],
        [  3.9221,  -4.1435],
        [ -9.0742,   8.7317],
        [-10.9716,  10.5551],
        [ -5.2689,   5.0313],
        [  6.9179,  -7.3710]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.0833,  -3.3379],
        [  4.6122,  -4.9296],
        [-11.5843,  11.2092],
        [-12.7377,  12.3035],
        [ -9.6941,   9.3465],
        [ -4.5492,   4.2929],
        [  6.5737,  -7.0591],
        [  0.7327,  -0.8510]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.8993,  -2.1216],
        [  0.2979,  -0.4381],
        [  2.5939,  -2.7942],
        [  1.2726,  -1.4448],
        [ -9.5655,   9.2174],
        [ -9.5036,   9.2280],
        [ -0.4951,   0.3066],
        [-14.5844,  14.0834]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4976,  -2.6920],
        [-10.5735,  10.1605],
        [ -3.6850,   3.4468],
        [-10.2673,   9.9611],
        [  5.6269,  -5.9370],
        [  5.6767,  -6.0419],
        [-13.1953,  12.7819],
        [  6.0024,  -6.3445]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.2603, -7.7394],
        [-0.9916,  0.8101],
        [ 6.2495, -6.6358],
        [ 1.7650, -1.9529],
        [ 6.4791, -6.9369],
        [ 5.3025, -5.6032],
        [ 7.0798, -7.5342],
        [ 6.1370, -6.5276]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.7729,  12.3874],
        [ -8.1603,   7.8666],
        [  0.8406,  -1.0007],
        [ -6.7739,   6.5253],
        [ -2.6530,   2.4654],
        [ -0.3202,   0.1559],
        [ -0.1651,   0.0158],
        [  7.6917,  -8.2181]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.4336,  6.1636],
        [ 7.4990, -8.0228],
        [-9.6338,  9.3235],
        [-8.1460,  7.8735],
        [-8.6269,  8.2925],
        [ 7.1764, -7.7643],
        [-7.6059,  7.3242],
        [-7.4768,  7.2038]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.0570,   9.6663],
        [-10.0956,   9.7353],
        [  0.7236,  -0.8567],
        [ -7.7636,   7.4671],
        [  2.2474,  -2.4299],
        [  0.0722,  -0.2067],
        [-12.4553,  12.0341],
        [  7.3783,  -8.0351]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.7893,  -8.3003],
        [ -2.8470,   2.6607],
        [-11.3636,  10.9936],
        [-12.7826,  12.2877],
        [-13.3738,  12.9797],
        [  6.8678,  -7.3368],
        [  2.3266,  -2.4986],
        [ -1.6674,   1.4821]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.5463,  -5.9732],
        [  2.4391,  -2.6015],
        [ -8.6572,   8.2856],
        [ -5.8677,   5.6194],
        [  9.2938, -10.0039],
        [ -7.0992,   6.8080],
        [ -9.4884,   9.1418],
        [  2.0583,  -2.2264]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3171,  -5.6335],
        [-10.7044,  10.3047],
        [ -8.0807,   7.8156],
        [  4.0406,  -4.2727],
        [ -8.1261,   7.8246],
        [  1.1258,  -1.2954],
        [  6.5027,  -7.0241],
        [  0.5791,  -0.7395]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.2785,   8.9019],
        [ -9.0756,   8.7366],
        [ -8.9455,   8.6403],
        [  2.6875,  -2.8976],
        [  6.6859,  -7.1793],
        [  7.2774,  -7.7621],
        [ -8.2843,   7.9543],
        [-12.1634,  11.6992]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.0239,  -7.5362],
        [  1.9417,  -2.1536],
        [ -9.5668,   9.2998],
        [-13.9908,  13.5646],
        [ -0.0385,  -0.1017],
        [ -8.3602,   8.0901],
        [-10.6537,  10.2668],
        [ -8.0686,   7.7495]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.9774,   8.6301],
        [-10.4133,  10.0465],
        [ -8.8181,   8.5031],
        [ -5.2339,   4.9836],
        [  4.3923,  -4.7230],
        [  4.0209,  -4.2181],
        [ -8.2333,   7.9375],
        [ -9.3495,   8.9679]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.9420,  1.7552],
        [-9.9838,  9.5889],
        [-4.1664,  3.9257],
        [-9.2942,  8.9857],
        [ 4.1807, -4.4520],
        [-9.5184,  9.1592],
        [ 6.0589, -6.5639],
        [ 8.7266, -9.4351]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.8872, -5.2065],
        [-9.0232,  8.7739],
        [-7.7308,  7.4624],
        [ 1.8466, -2.0592],
        [-7.8585,  7.5518],
        [-7.5490,  7.2778],
        [ 7.2443, -7.7155],
        [ 4.8434, -5.1284]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.1895,   3.9854],
        [ -0.3693,   0.2107],
        [  4.1140,  -4.3794],
        [-12.6870,  12.2656],
        [ -2.0090,   1.8116],
        [ -3.3444,   3.1442],
        [  6.5414,  -7.0161],
        [ -5.3170,   5.0389]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.0194,  0.8458],
        [-9.3832,  9.0949],
        [ 3.9109, -4.1380],
        [-6.3344,  6.0861],
        [ 8.8380, -9.5347],
        [ 5.3048, -5.5566],
        [ 6.5248, -7.0078],
        [ 6.5194, -6.9704]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.2465,  13.7320],
        [  0.5415,  -0.6899],
        [-12.2596,  11.8670],
        [ -8.8790,   8.5203],
        [  4.8678,  -5.1284],
        [ -9.8948,   9.5176],
        [ -7.2956,   7.0145],
        [ -7.7051,   7.4350]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.4521,  -3.6650],
        [-12.8920,  12.4969],
        [  4.0970,  -4.3649],
        [ -8.4051,   8.1595],
        [  8.6965,  -9.2929],
        [-12.5501,  12.0605],
        [  4.4948,  -4.7921],
        [-10.9005,  10.5983]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.7476,   5.5039],
        [-14.3799,  13.9157],
        [ -9.1182,   8.8010],
        [  0.0834,  -0.2877],
        [ -7.4964,   7.1914],
        [  0.1197,  -0.2763],
        [ -9.8596,   9.4806],
        [  2.0523,  -2.1940]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.3083,  -3.5667],
        [  5.2686,  -5.6042],
        [  5.1303,  -5.5870],
        [-10.5870,  10.1566],
        [-10.6496,  10.2877],
        [  7.3235,  -7.8382],
        [ -9.7769,   9.4125],
        [ -3.1239,   2.9193]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.4243, -7.9980],
        [ 4.0937, -4.3673],
        [ 4.0115, -4.2911],
        [ 3.0037, -3.2426],
        [ 2.0424, -2.2084],
        [-5.2170,  4.9502],
        [-5.7798,  5.5128],
        [-6.4750,  6.1685]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1410,  11.7674],
        [ -9.1022,   8.8154],
        [ -2.3250,   2.1315],
        [  4.7918,  -5.0875],
        [ -5.6719,   5.4524],
        [ -9.8541,   9.5139],
        [  5.0004,  -5.2615],
        [  3.9556,  -4.1880]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.4789,   9.1149],
        [-10.5234,  10.1477],
        [  1.8572,  -2.0428],
        [ -6.0202,   5.7623],
        [ -0.2472,  -0.0125],
        [ -9.7462,   9.4442],
        [  6.0733,  -6.4734],
        [ -6.9531,   6.6820]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3397,  -5.6881],
        [ -9.7581,   9.4109],
        [ -5.1695,   4.9753],
        [  2.4492,  -2.6192],
        [-11.6523,  11.2413],
        [ -9.1121,   8.8017],
        [ -2.5160,   2.3172],
        [ -6.4802,   6.1816]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.9257,   6.7006],
        [ -0.8269,   0.6451],
        [  1.9179,  -2.1090],
        [ -6.9432,   6.6701],
        [  5.5172,  -5.8704],
        [  0.6237,  -0.8191],
        [-12.8452,  12.3971],
        [ -8.1574,   7.8466]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.3822,  10.0034],
        [  8.3865,  -8.9946],
        [  2.3494,  -2.5275],
        [  0.2749,  -0.3986],
        [ -8.7416,   8.4985],
        [ -1.2640,   1.0957],
        [-12.2819,  11.9294],
        [-11.9728,  11.5638]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.3189,  -4.5777],
        [  0.2941,  -0.4391],
        [ -9.9468,   9.6620],
        [ -2.1210,   1.9215],
        [ -6.6480,   6.3637],
        [  2.8374,  -2.9885],
        [  8.7835,  -9.4612],
        [-11.3232,  10.8708]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.7694, -5.0557],
        [ 6.6105, -7.0229],
        [ 3.2720, -3.4512],
        [ 0.1222, -0.2638],
        [ 4.0349, -4.2707],
        [-9.5650,  9.2086],
        [-8.9821,  8.6890],
        [-1.4308,  1.2396]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.4014, -7.8584],
        [-8.4076,  8.0810],
        [-4.5284,  4.2834],
        [ 8.2219, -8.7626],
        [ 2.9174, -3.1239],
        [-6.6154,  6.3373],
        [ 8.5809, -9.2545],
        [ 0.1752, -0.3136]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5891,  10.2107],
        [  1.5559,  -1.7715],
        [ -7.9054,   7.5938],
        [ -5.2385,   5.0162],
        [-12.3221,  11.8757],
        [-10.2870,   9.9469],
        [ -5.3287,   5.1121],
        [ -4.0136,   3.7702]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.8506,  -6.1726],
        [-11.4557,  11.0345],
        [ -8.7851,   8.5050],
        [ -5.1665,   4.9137],
        [ -8.3019,   7.9862],
        [ -7.5853,   7.3118],
        [ -4.7167,   4.4915],
        [-12.7846,  12.3266]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
tensor([0, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.5490, -3.8291],
        [ 5.8864, -6.2961],
        [-3.9127,  3.6957],
        [ 3.7556, -3.9794],
        [-9.2339,  8.9105],
        [ 3.0771, -3.3278],
        [ 6.1018, -6.4752],
        [-9.7970,  9.4083]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.3511,  8.0385],
        [-2.2866,  2.1010],
        [ 5.4756, -5.8349],
        [ 5.4013, -5.7863],
        [-9.0132,  8.7751],
        [ 1.3048, -1.5092],
        [-2.8825,  2.6829],
        [ 4.0402, -4.2879]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.7323,  6.4387],
        [ 7.1310, -7.6266],
        [-4.2927,  4.1659],
        [ 4.7821, -5.0402],
        [-1.5272,  1.3541],
        [-8.2702,  7.9609],
        [ 1.0003, -1.1616],
        [ 1.8538, -2.0204]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.5106,   9.2163],
        [-12.4573,  12.0189],
        [-11.9983,  11.6493],
        [ -8.9426,   8.6542],
        [ -2.4609,   2.2277],
        [ -4.3625,   4.1262],
        [  3.7399,  -3.9690],
        [  6.9703,  -7.3704]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.6129,  9.2584],
        [ 1.3845, -1.5345],
        [-9.9516,  9.6129],
        [-9.1214,  8.7758],
        [ 3.9899, -4.2519],
        [ 3.2091, -3.3769],
        [ 7.3153, -7.8022],
        [ 7.6737, -8.2003]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.0433,  -0.2252],
        [-10.9157,  10.5431],
        [ -7.6124,   7.3295],
        [  5.6550,  -6.0078],
        [-11.0371,  10.6951],
        [  4.2323,  -4.4992],
        [  2.2126,  -2.4127],
        [  1.5265,  -1.6976]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3835,  -5.6721],
        [ -5.8615,   5.6293],
        [  5.8509,  -6.2493],
        [  1.4310,  -1.5821],
        [  8.1746,  -8.7708],
        [-13.9414,  13.5494],
        [-13.8311,  13.3276],
        [ -8.7542,   8.4776]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.0672,  6.8203],
        [ 6.2019, -6.6744],
        [ 3.5185, -3.7561],
        [-8.9746,  8.6955],
        [-9.2734,  8.9300],
        [-4.2584,  4.0387],
        [ 4.5672, -4.8477],
        [-1.2470,  1.0652]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.8936, -2.0691],
        [-7.7860,  7.5415],
        [ 7.2358, -7.7510],
        [-8.9156,  8.6113],
        [-8.4086,  8.1108],
        [-2.1522,  1.9615],
        [ 4.1156, -4.3537],
        [ 3.4743, -3.6608]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.4678,  -4.7344],
        [ -6.1297,   5.8727],
        [ -9.5128,   9.1934],
        [ -0.8095,   0.5985],
        [-10.8948,  10.5075],
        [ -3.9936,   3.7644],
        [-12.6558,  12.2293],
        [ -4.8009,   4.5691]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.3958,  9.0593],
        [ 6.7048, -7.1997],
        [ 5.5917, -5.9125],
        [ 7.1881, -7.7078],
        [ 4.2002, -4.4127],
        [-6.9635,  6.6793],
        [ 5.5858, -5.9586],
        [ 8.5406, -9.1988]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7391,   8.4389],
        [ -8.2792,   7.9899],
        [ -4.1893,   3.9660],
        [ -5.1731,   4.9334],
        [-12.8202,  12.4211],
        [  5.1840,  -5.4684],
        [-11.0903,  10.7351],
        [-12.1608,  11.7622]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.1654,   0.9835],
        [  2.9306,  -3.1275],
        [  7.3234,  -7.7860],
        [  6.3842,  -6.8617],
        [ -6.5013,   6.2386],
        [ -0.6267,   0.4629],
        [ -6.8479,   6.5598],
        [-10.2172,   9.8979]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.1816,   9.7807],
        [-14.1453,  13.6437],
        [-14.9252,  14.3874],
        [  2.8558,  -3.0600],
        [ -8.6841,   8.3970],
        [  5.0632,  -5.3662],
        [ -0.4263,   0.2592],
        [ -3.3772,   3.1607]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.9567, -6.3643],
        [ 3.9547, -4.3223],
        [ 0.6607, -0.7984],
        [ 0.8386, -0.9832],
        [ 4.8913, -5.1693],
        [-5.7920,  5.5410],
        [ 0.4117, -0.5589],
        [-0.1763,  0.0320]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.5837,  -3.9754],
        [-12.7573,  12.3484],
        [  4.0959,  -4.3080],
        [ -5.3949,   5.1838],
        [  3.5236,  -3.6982],
        [ -8.9697,   8.6282],
        [  0.1800,  -0.3656],
        [ -9.4244,   9.1372]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.7272,   5.4799],
        [  5.7445,  -6.1099],
        [ -7.5733,   7.2788],
        [  4.0996,  -4.3406],
        [ -7.7929,   7.5790],
        [-14.5405,  14.0299],
        [  2.2309,  -2.4213],
        [  1.0107,  -1.1511]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.6851,  -8.1988],
        [-12.0775,  11.6736],
        [  0.9480,  -1.0811],
        [  4.2611,  -4.4918],
        [ -8.3588,   8.0930],
        [  5.6423,  -5.9803],
        [-12.2431,  11.7617],
        [  7.0380,  -7.4841]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.8581,  7.5815],
        [-5.6651,  5.3990],
        [ 5.6837, -6.0682],
        [ 0.5518, -0.6838],
        [-2.4485,  2.2334],
        [-0.3361,  0.1792],
        [ 3.1518, -3.3722],
        [ 4.5948, -4.8579]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.0072,   8.7125],
        [-14.2246,  13.7134],
        [  3.8321,  -4.0907],
        [  3.7671,  -4.0242],
        [-11.7382,  11.4018],
        [  5.4903,  -5.7921],
        [  3.7641,  -3.9916],
        [-10.6029,  10.2674]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.6490,  14.0888],
        [  3.2415,  -3.4967],
        [  3.0823,  -3.2889],
        [ -8.8846,   8.5612],
        [  1.6200,  -1.8023],
        [-12.0198,  11.5477],
        [ -6.1292,   5.8510],
        [ -8.1569,   7.9007]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.2937, -6.7750],
        [-3.4853,  3.2764],
        [-3.9752,  3.7538],
        [-0.3144,  0.1460],
        [ 6.3039, -6.7811],
        [-0.6988,  0.5447],
        [ 3.5754, -3.7866],
        [ 7.8784, -8.4276]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.1997,  0.0318],
        [-4.6280,  4.3862],
        [ 1.1769, -1.3561],
        [-9.2709,  8.9495],
        [ 9.0258, -9.7025],
        [ 1.8756, -2.0258],
        [-6.1600,  5.8969],
        [-4.6345,  4.3607]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.6865,  -5.0090],
        [  2.3576,  -2.5052],
        [  4.0623,  -4.3144],
        [  7.3304,  -7.8248],
        [-11.2560,  10.8272],
        [ -4.2087,   3.9918],
        [-10.8623,  10.5075],
        [  7.7130,  -8.2705]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.1091,   7.7955],
        [-12.6625,  12.2370],
        [ -2.4846,   2.2837],
        [ -9.3722,   9.0269],
        [ -5.8034,   5.5509],
        [ -6.2321,   5.9875],
        [  3.8387,  -4.0440],
        [  3.9130,  -4.1272]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.1208,   7.8657],
        [-12.0627,  11.6339],
        [ -4.0573,   3.8155],
        [-13.0549,  12.5946],
        [  7.1165,  -7.6270],
        [  2.3546,  -2.5816],
        [  5.2198,  -5.5198],
        [  7.2041,  -7.7319]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.9703,  5.7436],
        [-0.6270,  0.4523],
        [-9.5503,  9.2108],
        [-9.2307,  8.9159],
        [ 4.4024, -4.6554],
        [ 3.2890, -3.4944],
        [-9.1779,  8.8289],
        [-9.5669,  9.2105]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.0072, -4.1834],
        [-0.0857, -0.0391],
        [ 4.6709, -5.0440],
        [ 6.0190, -6.4739],
        [-6.2587,  6.0091],
        [-7.7556,  7.4790],
        [-6.3049,  6.0906],
        [ 5.8282, -6.1032]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.9061,  8.6146],
        [ 5.5648, -5.9933],
        [ 2.4550, -2.6357],
        [ 2.8986, -3.1064],
        [-7.0210,  6.7578],
        [ 7.6699, -8.0786],
        [-8.9655,  8.6782],
        [-9.4914,  9.1819]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.5165,   3.3045],
        [  1.6924,  -1.7986],
        [  4.9845,  -5.3271],
        [ -4.0593,   3.8456],
        [-12.4410,  12.0195],
        [-11.4487,  11.0256],
        [ -8.1080,   7.8200],
        [ -8.9316,   8.5818]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.5715,   0.3805],
        [ -2.6223,   2.4145],
        [-11.8857,  11.4508],
        [-12.4254,  11.9822],
        [ -3.2963,   3.0895],
        [  2.6059,  -2.7673],
        [  3.0901,  -3.3702],
        [  7.5002,  -8.0248]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.4681,  11.0746],
        [  5.9050,  -6.3457],
        [  1.5864,  -1.7577],
        [  5.3561,  -5.6538],
        [ -8.1556,   7.8555],
        [ -7.5079,   7.1580],
        [ -7.0641,   6.7936],
        [  1.8442,  -1.9960]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.6154,   0.4178],
        [ -9.0403,   8.7363],
        [-10.7808,  10.4271],
        [  6.0537,  -6.4200],
        [ -4.6535,   4.4053],
        [ -8.0423,   7.8109],
        [ -7.0868,   6.8245],
        [ -5.8227,   5.5709]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.4257,  11.9739],
        [ -9.0477,   8.7577],
        [  0.7491,  -0.8650],
        [ -8.0192,   7.7161],
        [ -8.9799,   8.6835],
        [  7.3744,  -7.8408],
        [  4.1651,  -4.3913],
        [-10.4873,  10.0760]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.2832,   0.1071],
        [  7.3787,  -7.8712],
        [  4.8198,  -5.1496],
        [  5.6734,  -6.0637],
        [-11.8928,  11.5394],
        [  7.1350,  -7.6283],
        [ -6.0255,   5.7619],
        [  3.4108,  -3.6192]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.4137e+00, -4.6566e+00],
        [ 5.3855e+00, -5.7302e+00],
        [-6.3743e+00,  6.1173e+00],
        [ 1.8648e+00, -1.9963e+00],
        [-8.3926e+00,  8.0986e+00],
        [-9.4325e+00,  9.1053e+00],
        [-1.5323e-01, -6.1179e-03],
        [-1.1995e+01,  1.1632e+01]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.5081,  -2.6845],
        [  0.1063,  -0.2789],
        [ -1.2880,   1.1096],
        [ -3.2293,   2.9769],
        [-11.3804,  10.9922],
        [-13.0881,  12.6604],
        [ -8.3049,   8.0088],
        [  5.7183,  -6.1122]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5838,  -4.7916],
        [-10.0445,   9.7366],
        [ -7.5896,   7.2186],
        [  5.0673,  -5.3486],
        [ -5.2712,   4.9905],
        [ -9.1451,   8.8253],
        [ -3.2176,   3.0316],
        [-11.8149,  11.4108]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.4546,   7.1494],
        [-12.7805,  12.3955],
        [  4.0303,  -4.2753],
        [ -7.2373,   6.9755],
        [ -3.4846,   3.2724],
        [ -6.6832,   6.4190],
        [ -5.0438,   4.7959],
        [  2.7921,  -3.0300]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.7130,  -6.1444],
        [-11.6797,  11.3247],
        [-10.1724,   9.7909],
        [ -6.5415,   6.3028],
        [  1.9947,  -2.1257],
        [-12.7227,  12.3267],
        [  4.9631,  -5.2733],
        [-11.2593,  10.8559]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.0005,  11.5959],
        [-10.5259,  10.1254],
        [ -0.8014,   0.6424],
        [ -9.8766,   9.5213],
        [  0.2401,  -0.4191],
        [-10.6370,  10.2741],
        [  5.2843,  -5.6494],
        [ -6.4409,   6.1562]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5951,  -4.8969],
        [-11.8139,  11.4655],
        [  5.2727,  -5.5688],
        [ -0.4585,   0.2944],
        [  8.7689,  -9.3947],
        [  1.4706,  -1.6283],
        [ -5.8691,   5.6552],
        [  6.5557,  -6.9729]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.3192,  -2.4887],
        [-12.7880,  12.2794],
        [  3.2777,  -3.4706],
        [  1.4591,  -1.6206],
        [  4.0594,  -4.4118],
        [ -8.5324,   8.1880],
        [ -0.1991,   0.0243],
        [  7.5408,  -8.0800]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.1200,  -1.2794],
        [ -8.6784,   8.3103],
        [  6.4884,  -6.9760],
        [  4.1097,  -4.3999],
        [-10.3524,  10.0008],
        [ -5.1475,   4.8964],
        [ -9.3046,   8.9653],
        [-10.7790,  10.3867]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.8377,  11.4367],
        [-11.6773,  11.2695],
        [ -7.8266,   7.5336],
        [  6.3162,  -6.6493],
        [ -7.8273,   7.5280],
        [ -9.9348,   9.6269],
        [ -0.0723,  -0.0858],
        [ -0.8226,   0.6661]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.4596,  10.0807],
        [ -3.9347,   3.7023],
        [ -0.6023,   0.4378],
        [ -0.7711,   0.6135],
        [ -8.5149,   8.1772],
        [  6.5073,  -6.9949],
        [  7.9913,  -8.5695],
        [  0.1793,  -0.3164]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.6939,  -1.8686],
        [ -8.7178,   8.3769],
        [ -9.5789,   9.2170],
        [ -9.6465,   9.2941],
        [-10.1236,   9.8050],
        [  3.1280,  -3.3462],
        [-10.3136,   9.9532],
        [ -7.5731,   7.2870]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.1320,  10.7548],
        [  4.1585,  -4.3954],
        [ -7.2414,   6.9637],
        [  4.1051,  -4.3514],
        [ -1.2968,   1.1276],
        [  3.4695,  -3.7014],
        [  4.9299,  -5.2453],
        [ -8.4999,   8.1736]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.9465,  10.5531],
        [ -0.6338,   0.4749],
        [  2.4675,  -2.6751],
        [  6.4087,  -6.7833],
        [  4.8256,  -5.1043],
        [ -1.1739,   1.0031],
        [  3.2959,  -3.5589],
        [  3.3045,  -3.4919]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.1513,  -2.3030],
        [  4.1731,  -4.4386],
        [ -5.1199,   4.8967],
        [  2.1167,  -2.2779],
        [-13.2853,  12.9060],
        [  5.9271,  -6.2156],
        [  9.2612,  -9.9625],
        [  4.2693,  -4.5413]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 0, 1, 0, 1, 0, 0, 0], device='cuda:0')
tensor([0, 0, 1, 0, 1, 0, 0, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.0918,  6.8246],
        [-9.4430,  9.1120],
        [ 5.0507, -5.3194],
        [-5.6005,  5.3608],
        [-9.3141,  9.0022],
        [-1.9393,  1.7516],
        [-0.9671,  0.8072],
        [ 0.3302, -0.4844]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.8845,  -4.0735],
        [-11.0332,  10.5956],
        [ -5.9828,   5.7245],
        [  4.6938,  -4.9626],
        [  3.3834,  -3.5750],
        [  8.6078,  -9.1988],
        [  3.3810,  -3.5950],
        [ -9.7761,   9.4490]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.6093,  -3.8561],
        [ -7.8613,   7.6538],
        [ -6.7922,   6.5264],
        [  8.2434,  -8.8205],
        [  6.4327,  -6.8174],
        [-11.0990,  10.7170],
        [  3.6179,  -3.7857],
        [  4.0782,  -4.3192]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.6361, -8.1785],
        [-0.1100, -0.0362],
        [ 4.3431, -4.6604],
        [-6.6268,  6.3710],
        [-7.2324,  6.9470],
        [ 4.8618, -5.1573],
        [-7.7936,  7.5126],
        [ 0.3473, -0.4967]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.2116,   9.8383],
        [ -9.5990,   9.2417],
        [ -8.1432,   7.8620],
        [-13.1236,  12.7348],
        [ -9.2440,   8.8846],
        [ -7.5662,   7.2947],
        [-14.5017,  13.9776],
        [  6.1879,  -6.5746]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.5807,  -2.7672],
        [  5.9631,  -6.3697],
        [  6.9892,  -7.4417],
        [ -9.0793,   8.7866],
        [ -0.5129,   0.3301],
        [-15.6343,  15.1509],
        [  5.1604,  -5.4643],
        [  5.5406,  -5.9188]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.8087,   7.5196],
        [ -0.5652,   0.4135],
        [ -8.6879,   8.4070],
        [ -6.5634,   6.2740],
        [-10.5113,  10.1432],
        [ -0.4405,   0.2714],
        [ -9.8089,   9.4454],
        [ -6.2059,   5.9570]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.7801,  -5.0761],
        [-14.9837,  14.4228],
        [ -6.9162,   6.6564],
        [  0.1472,  -0.2928],
        [-12.1405,  11.6584],
        [-11.0975,  10.7860],
        [-12.8957,  12.4794],
        [-10.5046,  10.1309]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.3926,  -6.8193],
        [ -1.5640,   1.3946],
        [ -7.6332,   7.3173],
        [ -7.3872,   7.0714],
        [  1.5755,  -1.7179],
        [  6.2051,  -6.7342],
        [-10.2847,   9.9783],
        [ -8.1471,   7.8765]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.0960,  8.7591],
        [-2.2473,  2.0901],
        [ 3.2489, -3.4764],
        [-9.7749,  9.4034],
        [ 1.6059, -1.7618],
        [ 3.7219, -3.8947],
        [ 2.5469, -2.7494],
        [ 8.1106, -8.7117]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.3521,  10.9219],
        [  7.2088,  -7.6604],
        [-12.2000,  11.8049],
        [ -2.8796,   2.7041],
        [ -9.4797,   9.1257],
        [  6.4952,  -6.9492],
        [  4.8473,  -5.1562],
        [ -6.6309,   6.3607]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.9038,  1.7310],
        [ 1.7182, -1.8819],
        [-8.0684,  7.7900],
        [ 1.2827, -1.4481],
        [ 3.0259, -3.2195],
        [ 0.9445, -1.1375],
        [-9.4325,  9.1417],
        [ 3.4281, -3.6440]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.7478,  -1.9074],
        [  7.2983,  -7.8222],
        [  6.1047,  -6.5324],
        [-11.4969,  11.0849],
        [  4.7940,  -5.1464],
        [  5.6116,  -6.1673],
        [  4.8986,  -5.1849],
        [  4.2410,  -4.5321]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.3218,  -0.6712],
        [  6.3868,  -6.8653],
        [  2.2624,  -2.5216],
        [  2.7461,  -2.9718],
        [-10.8334,  10.4552],
        [  2.6128,  -2.7638],
        [-12.6453,  12.2370],
        [ -4.5469,   4.3657]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.5235,  -0.6622],
        [-13.3386,  12.7951],
        [-11.0683,  10.6855],
        [ -6.2290,   6.0196],
        [-12.0700,  11.6901],
        [ -9.9113,   9.5729],
        [ -5.1029,   4.8358],
        [  3.2246,  -3.6191]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.5478,   8.2306],
        [ -8.4188,   8.1100],
        [  3.7409,  -4.0022],
        [ -3.3973,   3.1880],
        [  4.8885,  -5.1742],
        [-10.2768,   9.9105],
        [  1.8933,  -2.0557],
        [  2.2705,  -2.4826]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.2584, -2.4894],
        [-6.9812,  6.6893],
        [-0.0865, -0.0882],
        [ 4.5016, -4.7919],
        [ 3.5304, -3.7446],
        [-7.7581,  7.4604],
        [-9.8484,  9.4990],
        [-1.2142,  1.0211]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.1524,   1.9669],
        [  4.4579,  -4.6979],
        [ -9.8159,   9.4385],
        [ -8.0042,   7.7132],
        [-14.7283,  14.2466],
        [ -8.9337,   8.6514],
        [-13.6095,  13.1273],
        [  0.2616,  -0.4118]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.6835, -4.9785],
        [ 4.3595, -4.6643],
        [-5.0318,  4.8415],
        [-8.6438,  8.3692],
        [-6.9044,  6.6363],
        [ 6.7912, -7.2388],
        [ 1.4139, -1.6242],
        [ 1.8759, -2.0349]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.7890,  11.4006],
        [ -2.0184,   1.8355],
        [-10.3887,  10.0324],
        [ -0.1916,   0.0148],
        [  5.3808,  -5.6737],
        [  3.3794,  -3.5665],
        [  6.6444,  -7.0869],
        [ -1.3905,   1.2247]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.9859,  -7.4570],
        [ -6.4674,   6.1884],
        [-12.2377,  11.8264],
        [  7.6763,  -8.2192],
        [  2.1438,  -2.2921],
        [  0.4995,  -0.6811],
        [ -3.8289,   3.5981],
        [  6.1265,  -6.5937]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.0274, -3.2228],
        [-6.6524,  6.3809],
        [ 2.5644, -2.7331],
        [ 2.6146, -2.8151],
        [-7.9919,  7.7013],
        [ 5.0635, -5.3487],
        [-5.8472,  5.5860],
        [-9.7368,  9.4168]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.1394,  10.7481],
        [-12.2152,  11.8376],
        [-11.6617,  11.2617],
        [ -7.1719,   6.9025],
        [-10.2511,   9.9252],
        [ -1.5808,   1.3775],
        [  4.6269,  -4.8757],
        [ -9.9089,   9.5389]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.3007,  12.8014],
        [ -6.1992,   5.9232],
        [-12.5408,  12.0726],
        [  2.5925,  -2.7974],
        [-10.2533,   9.9040],
        [  0.9044,  -1.0812],
        [ -0.4501,   0.2956],
        [ -7.9275,   7.6316]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.7418,   0.5930],
        [ -7.5374,   7.2141],
        [-10.6934,  10.3301],
        [  2.3048,  -2.4908],
        [ -8.0610,   7.7882],
        [  4.3016,  -4.6871],
        [  5.8051,  -6.1812],
        [  6.2289,  -6.7006]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.6687,  -1.8415],
        [  0.8378,  -1.0353],
        [ -4.9987,   4.7517],
        [  4.5015,  -4.7297],
        [-10.9900,  10.6207],
        [  2.5044,  -2.6719],
        [ -9.2327,   8.8853],
        [  1.4143,  -1.5872]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0482,   7.7669],
        [ -8.7454,   8.4278],
        [-10.9893,  10.6536],
        [-10.8279,  10.4671],
        [  5.4252,  -5.7425],
        [ -9.7441,   9.3910],
        [  6.9544,  -7.4325],
        [  1.4741,  -1.6495]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.3702,   0.1990],
        [  7.3381,  -7.8095],
        [ -5.8715,   5.6211],
        [  5.0625,  -5.3560],
        [ -1.8552,   1.6721],
        [-11.0987,  10.7595],
        [  1.0968,  -1.3016],
        [  1.7289,  -1.8851]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.2330,  -6.6410],
        [ -7.1511,   6.8534],
        [  0.7115,  -0.8641],
        [ -8.2757,   7.9691],
        [-10.4556,  10.0780],
        [  5.9271,  -6.2821],
        [ -7.0207,   6.7493],
        [  0.1904,  -0.3466]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.2193,  8.9117],
        [-8.7001,  8.4196],
        [-9.7010,  9.3435],
        [-7.6384,  7.3577],
        [-2.3581,  2.1649],
        [ 1.6696, -1.8948],
        [ 6.6710, -7.1008],
        [ 1.5218, -1.6777]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.9271,  -3.0993],
        [ -2.6237,   2.2425],
        [-10.1353,   9.7903],
        [-10.6342,  10.3188],
        [ -8.7806,   8.4813],
        [ -8.1655,   7.8214],
        [-11.8860,  11.5176],
        [  4.5591,  -4.8309]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.2624,   7.9694],
        [ -8.5151,   8.2120],
        [-10.5870,  10.2248],
        [  5.5611,  -5.8951],
        [  2.8492,  -3.0586],
        [  8.1526,  -8.7954],
        [ -1.8203,   1.6042],
        [-12.7590,  12.3826]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.1658,  -0.3311],
        [  7.8311,  -8.4681],
        [  5.1155,  -5.4114],
        [ -0.5864,   0.4304],
        [-10.7165,  10.3241],
        [  0.6662,  -0.8029],
        [-10.7481,  10.3866],
        [  1.3977,  -1.5781]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.4175,  12.0232],
        [-10.9912,  10.6042],
        [ -8.9289,   8.6498],
        [ -7.5884,   7.3018],
        [-12.6637,  12.2897],
        [  2.3151,  -2.4622],
        [-10.1013,   9.7680],
        [  3.9109,  -4.1263]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1320,   8.7970],
        [-11.0574,  10.6418],
        [ -9.7832,   9.4156],
        [-10.9651,  10.5658],
        [  4.8365,  -5.1315],
        [  3.1971,  -3.4097],
        [-10.4437,  10.1133],
        [-10.2619,   9.9486]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.9480,   7.7058],
        [-10.2959,  10.0173],
        [ -4.9006,   4.6627],
        [ -8.4231,   8.0948],
        [ -0.4904,   0.3197],
        [-10.1383,   9.8046],
        [  5.9836,  -6.3826],
        [  0.6274,  -0.7891]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.2432,  -1.4183],
        [ -8.7268,   8.4514],
        [  5.8365,  -6.2784],
        [  0.9504,  -1.1128],
        [ -3.8188,   3.5593],
        [  1.6958,  -1.8443],
        [ -2.6944,   2.5032],
        [-10.4663,  10.0649]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.7091,   7.3887],
        [-12.4130,  12.0632],
        [  3.0986,  -3.2948],
        [-14.0600,  13.6732],
        [ -9.1560,   8.8335],
        [ -8.5639,   8.2854],
        [ -8.7592,   8.4280],
        [-13.3020,  12.8515]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.8529,  -6.2090],
        [ -0.6707,   0.4887],
        [-10.1496,   9.8198],
        [-10.9020,  10.4874],
        [ -6.8916,   6.6229],
        [  1.0481,  -1.1934],
        [ -2.7648,   2.5554],
        [-13.7169,  13.2011]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.3407,   7.0570],
        [ -9.4080,   9.0716],
        [ -2.1889,   1.9520],
        [ -8.1414,   7.8547],
        [-13.1173,  12.6695],
        [ -5.5752,   5.3061],
        [ -8.3792,   8.0620],
        [  4.8712,  -5.1655]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.6637,   1.4824],
        [  4.6056,  -4.8930],
        [ -9.3116,   8.9916],
        [ -1.9186,   1.7485],
        [-10.5310,  10.2875],
        [-14.8148,  14.3539],
        [ -5.5480,   5.3022],
        [ -9.9010,   9.5273]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.6896,  -4.9520],
        [  6.4297,  -6.8634],
        [-10.1474,   9.8365],
        [  7.3712,  -7.9296],
        [ -8.7968,   8.4794],
        [ -8.7341,   8.4123],
        [  4.0158,  -4.2632],
        [ -7.8563,   7.5603]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.4931,   9.1401],
        [ -5.4681,   5.2158],
        [ -9.2452,   8.9051],
        [-16.1878,  15.5654],
        [ -8.2440,   7.9829],
        [  3.3337,  -3.5308],
        [-11.3028,  10.9652],
        [-12.6928,  12.2567]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.1447,  8.8226],
        [ 3.8672, -4.0913],
        [ 7.1020, -7.6397],
        [ 6.0735, -6.5810],
        [-1.8710,  1.6873],
        [ 7.2755, -7.8222],
        [ 2.9021, -3.0537],
        [ 5.2921, -5.6377]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4788,   6.2315],
        [  6.4919,  -6.8897],
        [ -6.6601,   6.4058],
        [ -2.8774,   2.6725],
        [  2.1510,  -2.3280],
        [  6.3901,  -6.8159],
        [-10.9169,  10.5768],
        [  0.4558,  -0.5813]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.9906,   7.7197],
        [  2.3469,  -2.4747],
        [  2.6000,  -2.8460],
        [  3.3950,  -3.5768],
        [ -8.8373,   8.5399],
        [-12.9299,  12.4473],
        [ -6.7314,   6.4802],
        [ -1.4957,   1.3010]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.9718,  -3.1666],
        [  5.6801,  -5.9917],
        [-11.6408,  11.2509],
        [  2.5065,  -2.6516],
        [ -1.0623,   0.8873],
        [  2.4644,  -2.7069],
        [ -8.9921,   8.6548],
        [ -0.6174,   0.4278]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.1667,  -3.3660],
        [-10.3559,   9.9389],
        [  5.9929,  -6.2628],
        [  4.5888,  -4.8701],
        [  2.8823,  -3.1323],
        [  6.1324,  -6.5173],
        [  1.4065,  -1.5952],
        [ -3.9107,   3.6788]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.3570,  -3.5477],
        [  0.9356,  -1.1008],
        [-10.8062,  10.4592],
        [  6.1738,  -6.5520],
        [-10.8544,  10.4907],
        [ -0.1311,  -0.0708],
        [  1.9281,  -2.0786],
        [-11.8534,  11.4223]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.5278,   5.2505],
        [-13.3115,  12.8187],
        [ -9.9033,   9.6001],
        [-10.6272,  10.2504],
        [ -7.5221,   7.2799],
        [-10.3423,  10.0217],
        [ -4.4109,   4.1724],
        [  2.3520,  -2.5626]], device='cuda:0')
Iteration Acc 1.0000
tensor([1, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
tensor([1, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.4690, -7.9708],
        [ 5.4333, -5.7402],
        [ 7.9447, -8.4909],
        [ 1.8316, -2.0321],
        [-0.8102,  0.6445],
        [ 1.6065, -1.8355],
        [ 5.7358, -6.1068],
        [-1.3969,  1.2213]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.9042,  -4.1183],
        [ -8.2084,   7.9667],
        [  0.4678,  -0.6453],
        [-10.4794,  10.1115],
        [ -5.6448,   5.3675],
        [ -2.7995,   2.5521],
        [  5.7240,  -6.1208],
        [  5.4623,  -5.7839]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.9838,  -1.1989],
        [ -9.2641,   8.9375],
        [  4.7467,  -5.0042],
        [  4.7058,  -5.0784],
        [-10.7485,  10.3800],
        [-11.2213,  10.9083],
        [-10.1709,   9.8572],
        [ -3.3422,   3.1329]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.5585,   9.2569],
        [  2.3235,  -2.4850],
        [-14.7358,  14.2089],
        [ -4.3655,   4.1650],
        [ -6.2800,   6.0226],
        [  3.2058,  -3.4142],
        [  1.6889,  -1.8405],
        [  1.7798,  -1.9486]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.7703,  8.5030],
        [-7.3815,  7.1032],
        [ 2.3773, -2.5925],
        [ 2.0195, -2.1932],
        [ 4.0958, -4.3256],
        [ 6.2026, -6.6081],
        [ 0.7806, -0.9224],
        [-8.9042,  8.5888]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.9491,   3.7181],
        [  5.3987,  -5.7956],
        [ -8.2844,   8.0276],
        [  4.0715,  -4.2499],
        [-12.9626,  12.5560],
        [  6.0474,  -6.3781],
        [ -1.5787,   1.3995],
        [  2.0399,  -2.1579]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4301,   6.1733],
        [-11.0592,  10.6975],
        [-10.6735,  10.3116],
        [-11.3469,  10.9992],
        [ -7.8314,   7.5391],
        [-10.8772,  10.4960],
        [  2.3081,  -2.4939],
        [  6.1260,  -6.5118]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.5300,  -5.8385],
        [-10.1728,   9.8481],
        [-15.2096,  14.7193],
        [ -8.0651,   7.7947],
        [ -0.2850,   0.0462],
        [ -6.9128,   6.6506],
        [  2.2295,  -2.4286],
        [  2.6317,  -2.7878]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.3927,  -6.7365],
        [  3.3790,  -3.5809],
        [-10.3612,  10.0373],
        [  3.7282,  -3.9387],
        [-11.1045,  10.7078],
        [  4.3149,  -4.5710],
        [ -6.1822,   5.9228],
        [ -1.8789,   1.7024]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.9170,   5.6556],
        [-10.1803,   9.8679],
        [ -6.3851,   6.1018],
        [  7.6184,  -8.1289],
        [  6.5585,  -7.1244],
        [ -6.8919,   6.6110],
        [  5.4250,  -5.8411],
        [ -0.9056,   0.7695]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.2521,  -3.4851],
        [  7.7364,  -8.2542],
        [ -8.0203,   7.7205],
        [  8.7799,  -9.4295],
        [  1.5460,  -1.7535],
        [  4.5303,  -4.7815],
        [  4.7580,  -5.0901],
        [-12.3075,  11.8377]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.8609, -0.9914],
        [ 6.3533, -6.7032],
        [ 0.4521, -0.6054],
        [-5.1688,  4.9192],
        [-9.0074,  8.6967],
        [ 3.4320, -3.6947],
        [-9.0994,  8.7978],
        [ 2.2084, -2.3784]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6025,  -5.9990],
        [-11.3478,  10.9539],
        [  3.2525,  -3.4722],
        [  3.9779,  -4.2275],
        [  6.0873,  -6.5558],
        [  1.8394,  -2.0071],
        [  5.1900,  -5.4466],
        [ -9.3785,   9.0379]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.1895,   2.9715],
        [  3.9420,  -4.1199],
        [  4.0524,  -4.3059],
        [  6.1759,  -6.5877],
        [ -6.2122,   5.9683],
        [-12.6495,  12.2631],
        [ -1.8458,   1.6421],
        [  3.0447,  -3.2417]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.6573, -3.8760],
        [ 4.5174, -4.7576],
        [-5.7483,  5.5098],
        [ 1.1986, -1.3595],
        [-7.4253,  7.1474],
        [ 1.5941, -1.7686],
        [ 8.2076, -8.7940],
        [-7.9651,  7.6477]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.2142,  6.9203],
        [ 4.5121, -4.9230],
        [-1.8454,  1.6534],
        [-2.0405,  1.8515],
        [ 5.1760, -5.5176],
        [-1.4251,  1.2532],
        [-9.9516,  9.6330],
        [-8.3454,  8.0287]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.9801,   6.6799],
        [ -4.4786,   4.2419],
        [  3.5780,  -3.7829],
        [  3.3594,  -3.6165],
        [  6.6005,  -7.0157],
        [-12.6811,  12.3143],
        [  5.3277,  -5.6387],
        [  4.8702,  -5.3093]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.1314,  -0.3112],
        [  8.6630,  -9.2808],
        [ -5.8115,   5.5551],
        [-11.4254,  11.0441],
        [ -5.1136,   4.8706],
        [-11.1402,  10.7381],
        [ -9.2527,   8.9339],
        [ -1.7077,   1.5202]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.3783,   5.1460],
        [-10.2963,   9.9329],
        [  5.5502,  -5.9001],
        [  5.8348,  -6.2343],
        [ -0.6262,   0.4807],
        [  3.5684,  -3.7571],
        [ -7.0702,   6.8060],
        [ -0.3830,   0.2147]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5565,  10.1636],
        [  6.6240,  -7.0733],
        [  3.4535,  -3.6346],
        [ -8.7287,   8.4276],
        [-11.5883,  11.1352],
        [-11.3711,  11.0048],
        [  7.9358,  -8.3523],
        [ -9.9069,   9.5991]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.2404, -7.7586],
        [ 2.6223, -2.7945],
        [ 0.9953, -1.1877],
        [ 6.2184, -6.6108],
        [ 4.9138, -5.2379],
        [-8.6645,  8.3434],
        [-2.6023,  2.3878],
        [-3.5584,  3.3437]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.5833,  8.2461],
        [-2.5263,  2.3324],
        [-1.5096,  1.3393],
        [ 5.1428, -5.4993],
        [ 3.4360, -3.6603],
        [ 8.0652, -8.6387],
        [-0.3213,  0.1675],
        [ 5.3907, -5.7295]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.2402,  -5.5851],
        [ -4.2936,   4.0557],
        [ -7.6156,   7.3554],
        [ -3.6298,   3.3992],
        [  2.6622,  -2.8343],
        [-12.6320,  12.2343],
        [ -0.0540,  -0.1248],
        [ -8.8014,   8.4653]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3792,   9.0417],
        [ -6.7166,   6.4600],
        [-15.0818,  14.6004],
        [ -5.0009,   4.7488],
        [  4.4130,  -4.7408],
        [ -7.5043,   7.1656],
        [  4.7173,  -5.0193],
        [ -7.8612,   7.5688]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.7688,  0.6151],
        [-7.0480,  6.7387],
        [ 1.1090, -1.2682],
        [-3.3655,  3.1399],
        [-9.2170,  8.8964],
        [-6.4993,  6.2314],
        [ 5.1943, -5.4800],
        [ 8.0590, -8.5468]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.9372, -5.2078],
        [-3.3309,  3.1295],
        [-0.4333,  0.2771],
        [-0.6673,  0.5221],
        [ 5.3990, -5.7140],
        [ 3.6318, -3.8797],
        [-7.3864,  7.1057],
        [ 7.3771, -7.8945]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.8561,  8.5770],
        [ 4.9878, -5.2787],
        [-4.5855,  4.3913],
        [ 8.6457, -9.3897],
        [ 1.9790, -2.1482],
        [-8.0550,  7.7634],
        [ 3.7263, -3.9664],
        [ 1.9641, -2.1393]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.2655,   1.0622],
        [  3.4602,  -3.6501],
        [-10.0784,   9.7110],
        [ -0.4343,   0.2237],
        [  1.7695,  -1.9012],
        [  4.7603,  -5.0091],
        [  1.1226,  -1.2656],
        [  5.9584,  -6.3153]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.2609,   8.9838],
        [ -9.5926,   9.3096],
        [  2.1214,  -2.2858],
        [ -7.4766,   7.1714],
        [-10.1873,   9.8210],
        [  3.0419,  -3.2687],
        [ -9.1629,   8.8166],
        [  6.2054,  -6.6508]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.2636, -7.6825],
        [ 3.7679, -4.0423],
        [-3.1895,  2.9757],
        [ 0.8860, -1.0417],
        [-0.9351,  0.7768],
        [ 5.1110, -5.4881],
        [-9.5019,  9.2042],
        [ 4.1005, -4.3297]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.5550,   6.3100],
        [ -8.4048,   8.1308],
        [  2.6967,  -2.9061],
        [ -6.9972,   6.7132],
        [  7.6323,  -8.1886],
        [-10.6430,  10.2474],
        [-12.7484,  12.2773],
        [ -9.8529,   9.5375]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.0462,   9.7003],
        [  1.3216,  -1.4750],
        [ -8.2057,   7.8668],
        [ -8.8790,   8.5433],
        [-12.6222,  12.1580],
        [-10.6581,  10.3771],
        [  5.8352,  -6.2074],
        [-12.6082,  12.1365]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.9601,   0.7966],
        [  5.8283,  -6.2599],
        [  6.2859,  -6.6953],
        [ -2.9796,   2.7859],
        [-13.7033,  13.2326],
        [-10.0972,   9.7730],
        [  1.9763,  -2.1547],
        [ -5.2695,   5.0296]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.9528,   7.6622],
        [-14.0597,  13.6177],
        [-12.0416,  11.5588],
        [ -4.4480,   4.1997],
        [-10.2519,   9.9079],
        [ -1.6378,   1.4679],
        [ -7.9234,   7.6125],
        [-10.3454,  10.0039]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.5195, -1.7116],
        [ 3.0538, -3.2446],
        [ 6.9895, -7.4528],
        [-3.7736,  3.5167],
        [-8.2420,  7.9452],
        [ 6.6030, -6.9568],
        [-9.8866,  9.5008],
        [-0.0494, -0.1239]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-4.1835,  3.9635],
        [-1.4436,  1.2712],
        [ 0.4331, -0.6017],
        [ 0.2470, -0.3975],
        [-4.7472,  4.5253],
        [-3.7020,  3.4720],
        [-7.3721,  7.0665],
        [-9.8405,  9.5068]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.0067,  -2.2176],
        [-11.5432,  11.1796],
        [  4.9778,  -5.2952],
        [  2.8029,  -3.0697],
        [-10.6655,  10.3105],
        [-11.3828,  10.9977],
        [  1.3458,  -1.4873],
        [ -9.2477,   8.9090]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.0729,   3.8655],
        [-10.0740,   9.7341],
        [ -9.4987,   9.1559],
        [  4.5838,  -4.8245],
        [ -9.4948,   9.1602],
        [  2.4185,  -2.5881],
        [ -7.8891,   7.6067],
        [  3.8568,  -4.0809]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.7842,  5.5328],
        [ 6.4992, -6.9860],
        [ 1.1819, -1.3430],
        [-8.6954,  8.3478],
        [-9.3321,  9.0045],
        [ 0.4648, -0.6166],
        [ 4.7166, -5.0041],
        [ 0.5811, -0.7553]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 8.2982, -8.8476],
        [-8.9959,  8.6390],
        [ 6.1232, -6.6043],
        [-5.6153,  5.3587],
        [ 4.5588, -4.8139],
        [-2.5216,  2.3382],
        [-0.4094,  0.1918],
        [-0.1717,  0.0237]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.5424,   8.2876],
        [-10.9417,  10.5400],
        [  0.1586,  -0.3021],
        [ -0.6523,   0.4688],
        [ -9.2925,   8.9875],
        [  5.1731,  -5.4440],
        [  2.0335,  -2.1990],
        [ -5.0040,   4.8082]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.2065, -0.3646],
        [-0.8190,  0.6501],
        [ 4.1370, -4.3836],
        [-8.6247,  8.3210],
        [-3.3159,  3.1095],
        [-8.6235,  8.3045],
        [-2.7678,  2.5684],
        [-7.4484,  7.1708]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.8224,   5.5821],
        [  1.1091,  -1.2644],
        [ -2.6067,   2.3982],
        [ -1.7545,   1.5757],
        [ -8.7324,   8.4190],
        [  7.0720,  -7.6288],
        [-11.0735,  10.7476],
        [  0.4808,  -0.6444]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.5263,   8.2077],
        [-11.7016,  11.2779],
        [  4.1231,  -4.3468],
        [ -5.5505,   5.2955],
        [  0.9327,  -1.1054],
        [ -9.9834,   9.6452],
        [ -5.9958,   5.7442],
        [  1.3315,  -1.5148]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.6397,  -0.7917],
        [  1.2122,  -1.5929],
        [ -4.3201,   4.1094],
        [-10.3452,   9.9209],
        [ -9.9744,   9.6545],
        [-10.5043,  10.1901],
        [-11.9718,  11.5739],
        [  5.1240,  -5.3746]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.0049,  -2.1722],
        [-14.9441,  14.4416],
        [  6.1844,  -6.5943],
        [  0.8769,  -1.0716],
        [  5.7348,  -6.0589],
        [-12.5397,  12.1885],
        [ -3.3215,   3.1134],
        [ -7.6813,   7.4246]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.9951, -7.4793],
        [-7.5346,  7.2524],
        [ 3.7966, -4.0210],
        [ 6.4241, -6.8873],
        [-9.9828,  9.6014],
        [-8.7273,  8.4210],
        [-1.5842,  1.4181],
        [-3.7468,  3.5241]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.0944,   2.8911],
        [  5.5498,  -5.8451],
        [ -5.4172,   5.1603],
        [ -9.5153,   9.1482],
        [  5.1385,  -5.4921],
        [-10.3788,  10.0395],
        [ -1.5006,   1.3008],
        [ -8.2962,   8.0002]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.7999,  -7.3403],
        [  2.3457,  -2.5259],
        [  2.4612,  -2.6441],
        [ -1.4733,   1.2930],
        [-10.5518,  10.2072],
        [-14.4262,  13.9750],
        [ -1.0464,   0.8850],
        [ -8.5003,   8.1620]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.6541,   5.4025],
        [  5.0786,  -5.4396],
        [ -8.1493,   7.8656],
        [  5.2902,  -5.6475],
        [ -7.3016,   7.0160],
        [  3.3870,  -3.5528],
        [ -7.3749,   7.0905],
        [-14.0346,  13.6271]], device='cuda:0')
Iteration Acc 1.0000
tensor([1, 0, 1, 0, 1, 0, 1, 1], device='cuda:0')
tensor([1, 0, 1, 0, 1, 0, 1, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.7005,  -5.9838],
        [  1.3214,  -1.5099],
        [  0.3598,  -0.5207],
        [  1.9167,  -2.0723],
        [-11.4383,  11.0706],
        [ -8.3132,   8.0115],
        [ -1.3506,   1.1753],
        [  5.8361,  -6.2534]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.5120,   2.2459],
        [  8.0481,  -8.6536],
        [  3.1504,  -3.3350],
        [-11.1730,  10.8136],
        [ -5.1155,   4.8931],
        [  5.6862,  -6.0518],
        [  4.1614,  -4.4517],
        [  0.7781,  -1.1153]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.9418,  10.5892],
        [  7.4194,  -7.8263],
        [ -9.9783,   9.5589],
        [-10.1668,   9.8323],
        [-10.3828,  10.0024],
        [  3.8448,  -4.0978],
        [-10.1321,   9.7617],
        [-11.5565,  11.1207]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.8245,   6.5466],
        [-10.9600,  10.5773],
        [ -0.6831,   0.4991],
        [  3.4888,  -3.6757],
        [-11.6282,  11.2148],
        [-11.8800,  11.5040],
        [  0.1900,  -0.3319],
        [ -6.7711,   6.5067]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 8.0575, -8.5974],
        [ 5.9750, -6.3859],
        [ 5.5389, -5.8153],
        [ 4.6374, -4.9755],
        [ 1.1293, -1.2961],
        [ 4.6079, -4.9152],
        [ 4.7980, -5.0874],
        [ 4.2431, -4.4885]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.0203,  -0.1428],
        [  1.3867,  -1.5552],
        [  1.7436,  -1.9189],
        [  1.5036,  -1.6486],
        [ -0.4454,   0.2699],
        [-11.4050,  10.9606],
        [  1.9255,  -2.0891],
        [-13.0071,  12.5961]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.3390,  -7.7848],
        [  8.3198,  -8.9800],
        [  0.3162,  -0.4720],
        [ -9.0763,   8.7394],
        [  4.1380,  -4.3935],
        [ -2.8942,   2.6978],
        [-11.6430,  11.1842],
        [ -8.4587,   8.1662]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.2570,   8.9177],
        [ -0.3208,   0.1852],
        [-10.8846,  10.4851],
        [ -4.3493,   4.1412],
        [  4.9031,  -5.1981],
        [-10.7127,  10.3185],
        [  3.3048,  -3.5185],
        [  3.3915,  -3.5864]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.0867,   9.7424],
        [ -8.8493,   8.5778],
        [ -7.7607,   7.4894],
        [ -0.9279,   0.7522],
        [  4.3007,  -4.5463],
        [ -6.9268,   6.6354],
        [-10.1863,   9.8086],
        [ -7.4448,   7.1532]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.6900,   2.4796],
        [-12.6988,  12.3179],
        [-13.2284,  12.7597],
        [-12.2468,  11.8201],
        [-12.2500,  11.8096],
        [  2.2457,  -2.4160],
        [  4.0029,  -4.2259],
        [  2.2074,  -2.4062]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.1020,   2.8803],
        [  7.6046,  -8.1992],
        [ -8.7405,   8.4254],
        [-12.9904,  12.5897],
        [ -5.1694,   4.9286],
        [ -6.4999,   6.2274],
        [ -7.9269,   7.6582],
        [  4.7462,  -4.9668]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.8208, -0.9813],
        [-1.8731,  1.7007],
        [ 0.8069, -0.9656],
        [ 6.7893, -7.2942],
        [-1.7678,  1.5872],
        [ 0.5168, -0.6458],
        [ 4.3169, -4.6084],
        [ 6.3117, -6.6634]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.9996,   3.7652],
        [ -2.5206,   2.3254],
        [  7.1650,  -7.6444],
        [ -8.7839,   8.4855],
        [  0.9917,  -1.1873],
        [-12.3908,  11.9593],
        [  0.8385,  -0.9872],
        [ -7.2034,   6.8867]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.2469, -7.8628],
        [-8.9637,  8.6662],
        [ 8.5814, -9.2220],
        [ 3.1256, -3.3792],
        [ 7.5484, -8.0845],
        [-9.7061,  9.3345],
        [-9.2454,  8.9568],
        [-7.9658,  7.6724]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.9677,  -6.3329],
        [-15.0134,  14.5345],
        [  5.2001,  -5.6023],
        [ -7.2333,   6.9513],
        [-10.8020,  10.4350],
        [  5.4144,  -5.8378],
        [-14.9317,  14.4279],
        [ -6.1816,   5.9127]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.9891,  9.6315],
        [-7.6542,  7.3197],
        [-3.8526,  3.6168],
        [ 6.7534, -7.2767],
        [ 0.9528, -1.1021],
        [ 4.5467, -4.8427],
        [-7.0154,  6.7479],
        [-4.7849,  4.5667]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.3335,  1.1528],
        [ 6.4542, -6.8630],
        [ 8.3859, -9.0021],
        [ 1.8654, -1.9963],
        [ 4.5502, -4.8333],
        [ 0.6588, -0.8114],
        [ 6.3942, -6.7679],
        [ 4.3909, -4.6719]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.1946, -5.5406],
        [-5.2791,  5.0140],
        [-1.2146,  1.0339],
        [-9.8702,  9.5324],
        [-9.5653,  9.1972],
        [-9.6027,  9.2759],
        [ 6.1306, -6.5825],
        [-1.1491,  0.9927]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.9010,   6.6453],
        [ -9.3559,   9.0039],
        [ -7.3709,   7.0825],
        [-11.2785,  10.9104],
        [ -7.2954,   6.9993],
        [  3.2422,  -3.5112],
        [  4.6399,  -4.9220],
        [-12.9440,  12.4535]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.8581,  10.3917],
        [  2.1957,  -2.3601],
        [ -5.7741,   5.4809],
        [-10.1170,   9.7410],
        [  5.2243,  -5.5274],
        [ -1.1453,   0.9694],
        [-11.9593,  11.5762],
        [  1.1598,  -1.2958]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.7387,  -8.2644],
        [ -9.9869,   9.6326],
        [ -9.4391,   9.0918],
        [ -0.8042,   0.6246],
        [  0.8686,  -1.0124],
        [-11.6572,  11.1762],
        [ -9.5980,   9.2832],
        [  2.7098,  -2.8567]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.7749, -2.9540],
        [ 2.8368, -3.0601],
        [-7.9459,  7.6775],
        [ 3.0694, -3.2362],
        [ 2.8871, -3.1101],
        [-8.6745,  8.3726],
        [-6.1876,  5.9340],
        [-5.3794,  5.1328]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.5451,  12.1011],
        [  4.2279,  -4.4923],
        [  1.0259,  -1.1712],
        [  4.3096,  -4.5660],
        [-12.0723,  11.7187],
        [-13.1062,  12.5957],
        [ -8.6245,   8.3197],
        [  0.5934,  -0.8226]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  8.0904,  -8.6373],
        [-13.1896,  12.7276],
        [ -8.3112,   8.0226],
        [  2.0622,  -2.2322],
        [  7.5203,  -8.1274],
        [ -9.2284,   8.8950],
        [  2.6943,  -2.8739],
        [ -5.7715,   5.5420]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.7802,  13.3080],
        [ -1.6317,   1.4369],
        [ -8.6772,   8.3259],
        [ -5.5791,   5.3453],
        [ -8.9090,   8.5851],
        [  0.4615,  -0.6033],
        [ -7.4436,   7.1547],
        [ -7.4853,   7.2245]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.1693,  -7.6713],
        [ -3.0866,   2.8771],
        [-12.4919,  11.9933],
        [-14.0834,  13.5004],
        [  8.3492,  -8.8580],
        [  5.5242,  -5.8597],
        [ -1.7007,   1.5329],
        [ -7.5764,   7.2933]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.5769,  11.1589],
        [  1.3446,  -1.5083],
        [ -8.6229,   8.2935],
        [ -8.5569,   8.2377],
        [  0.1233,  -0.2646],
        [-12.1008,  11.7388],
        [  4.9486,  -5.2394],
        [ -3.0302,   2.8092]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.7298,   0.5562],
        [ -3.1738,   2.9570],
        [-11.0311,  10.6545],
        [ -9.5721,   9.2603],
        [  6.4479,  -6.8750],
        [ -4.1186,   3.9185],
        [  4.1156,  -4.3369],
        [  3.1831,  -3.3678]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.6099,   6.3031],
        [  5.1019,  -5.4798],
        [-11.4302,  11.0131],
        [ -7.4083,   7.0884],
        [ -9.9588,   9.6208],
        [-11.3099,  10.9432],
        [-13.6916,  13.2460],
        [ -0.4290,   0.2986]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.3884,  8.0636],
        [-8.8001,  8.5236],
        [-3.8013,  3.5715],
        [-0.3393,  0.1977],
        [ 0.8923, -1.0755],
        [-6.2342,  6.0069],
        [ 3.1841, -3.3874],
        [ 7.2099, -7.7208]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.2250,   9.8389],
        [  6.0319,  -6.4244],
        [  3.9053,  -4.2490],
        [ -9.0980,   8.7663],
        [  3.3541,  -3.5218],
        [  8.1770,  -8.8036],
        [  7.3999,  -7.9243],
        [  5.5454,  -5.9694]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.0500,  7.7373],
        [-9.9062,  9.5206],
        [ 7.2349, -7.6293],
        [ 4.8345, -5.1052],
        [-8.6239,  8.2658],
        [ 2.8325, -3.1931],
        [-8.8114,  8.4380],
        [ 6.3670, -6.7708]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.2527,   5.0194],
        [-12.0670,  11.7229],
        [-10.1794,   9.8188],
        [  7.1500,  -7.5773],
        [  3.2832,  -3.4691],
        [  3.0947,  -3.2815],
        [ -8.6261,   8.3286],
        [  0.1944,  -0.3258]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.0028,   8.6532],
        [ -5.0187,   4.7971],
        [-13.5600,  13.1519],
        [-11.0984,  10.7147],
        [  2.1105,  -2.3047],
        [  0.8557,  -1.0202],
        [  3.6913,  -3.8387],
        [  0.5341,  -0.6789]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.0804e+01,  1.0429e+01],
        [-1.0163e+01,  9.8525e+00],
        [-5.6719e+00,  5.4201e+00],
        [-5.2131e+00,  4.9548e+00],
        [-1.9811e-01,  3.4987e-03],
        [-9.0302e+00,  8.7175e+00],
        [-7.3879e+00,  7.0816e+00],
        [ 7.8046e+00, -8.2692e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.6402, -1.7656],
        [-2.1949,  1.9835],
        [ 0.1334, -0.3635],
        [-9.2034,  8.9278],
        [ 3.5430, -3.7675],
        [ 4.8335, -5.0320],
        [ 5.4847, -5.8753],
        [ 2.2662, -2.4216]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.6578,   8.3591],
        [-10.5416,  10.2244],
        [-10.7015,  10.3298],
        [ -8.6673,   8.3616],
        [  6.8166,  -7.3347],
        [  4.9767,  -5.3323],
        [-10.8825,  10.5149],
        [ -9.6404,   9.2701]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.1968,  -2.3429],
        [ -2.8692,   2.6784],
        [  3.9745,  -4.2517],
        [  0.9969,  -1.1538],
        [ -7.8099,   7.5167],
        [-11.1896,  10.7676],
        [  2.5911,  -2.7742],
        [  0.7786,  -0.9541]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.6189,  -3.9375],
        [ -1.8211,   1.6200],
        [-11.1555,  10.7345],
        [  1.1880,  -1.3162],
        [  2.8258,  -3.0571],
        [-11.8590,  11.4680],
        [-12.6295,  12.1586],
        [  2.8770,  -3.0741]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.4518,   8.1638],
        [  3.3884,  -3.6022],
        [ -8.0442,   7.7238],
        [  4.2715,  -4.5000],
        [ -4.5619,   4.3081],
        [  6.9887,  -7.4181],
        [-11.5589,  11.1565],
        [  2.5614,  -2.7234]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.5731,   8.2439],
        [ -0.7834,   0.6264],
        [-12.6157,  12.2000],
        [-11.4916,  11.0530],
        [  7.4623,  -8.0247],
        [-11.8938,  11.4716],
        [-10.1173,   9.8651],
        [  3.7122,  -3.9532]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.9970,  -3.1408],
        [  0.3505,  -0.4834],
        [  5.5433,  -5.8961],
        [-10.7765,  10.4454],
        [ -9.5854,   9.2695],
        [  6.7813,  -7.2591],
        [  0.9549,  -1.0994],
        [ -2.0634,   1.8508]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.2057,  -0.3548],
        [ -8.3028,   8.0458],
        [ -8.4746,   8.1840],
        [-11.8181,  11.4468],
        [-12.7176,  12.2931],
        [-10.0377,   9.7060],
        [ -0.6484,   0.4697],
        [ -6.5514,   6.2644]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.4823,   9.1183],
        [  6.9279,  -7.3937],
        [  2.8670,  -3.1156],
        [-11.1528,  10.7281],
        [  3.4102,  -3.6226],
        [ -9.6419,   9.3108],
        [  0.5578,  -0.7368],
        [ -1.2184,   1.0486]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.8903,   1.6888],
        [ -6.2746,   6.0217],
        [  8.1952,  -8.7423],
        [-10.3687,   9.9763],
        [  5.4655,  -5.7752],
        [  1.1968,  -1.3370],
        [  4.0894,  -4.2775],
        [ -7.0187,   6.7417]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.1275,  -7.6831],
        [ -8.1762,   7.8364],
        [  3.3240,  -3.5353],
        [ -2.4620,   2.2524],
        [-13.5383,  13.0548],
        [ -0.8842,   0.7182],
        [-12.4323,  11.9931],
        [-10.4097,  10.0619]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.1829,   4.9236],
        [  6.3298,  -6.7431],
        [-11.5673,  11.1360],
        [ -3.0383,   2.8363],
        [ -8.7431,   8.3969],
        [-13.3471,  12.8699],
        [  6.3621,  -6.8052],
        [-10.0460,   9.6716]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.9791,  9.6592],
        [-1.2823,  1.1111],
        [ 1.3992, -1.5468],
        [-8.0075,  7.7148],
        [-9.3188,  8.9970],
        [ 5.9571, -6.2760],
        [-5.9452,  5.6705],
        [-8.9456,  8.5964]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.2037,   4.9733],
        [  4.8847,  -5.2402],
        [ -2.7261,   2.5353],
        [ -8.8026,   8.4817],
        [  5.7758,  -6.1191],
        [ -1.1660,   0.9712],
        [ -7.0060,   6.7446],
        [-10.7381,  10.3973]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.3040,  -0.5030],
        [ -4.0236,   3.7550],
        [  6.9914,  -7.4652],
        [  6.0802,  -6.5422],
        [ -8.5058,   8.1829],
        [-11.1399,  10.7527],
        [ -4.2852,   4.0486],
        [ -7.5910,   7.3134]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 1, 0, 0, 1, 1, 1, 1], device='cuda:0')
tensor([0, 1, 0, 0, 1, 1, 1, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.2012,  -0.3576],
        [  0.6335,  -0.7828],
        [-11.9336,  11.5050],
        [-13.0379,  12.5747],
        [  4.8724,  -5.1608],
        [ -0.4555,   0.2967],
        [ -8.5947,   8.2885],
        [ -9.6981,   9.3972]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.3322,   0.1804],
        [-12.2200,  11.8502],
        [-12.2932,  11.8558],
        [  3.5434,  -3.7722],
        [ -1.4960,   1.3045],
        [  6.4874,  -6.9205],
        [ -9.5762,   9.2448],
        [ -7.2694,   7.0000]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7049,   8.3966],
        [-12.2288,  11.8256],
        [ -3.1491,   2.9173],
        [ -6.9877,   6.7092],
        [-12.5047,  12.1446],
        [  0.3631,  -0.5328],
        [  0.8287,  -0.9867],
        [ -7.0388,   6.7731]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.6928,  10.3059],
        [  8.4158,  -9.1077],
        [ -7.9047,   7.5835],
        [  3.3806,  -3.5687],
        [  3.1313,  -3.2919],
        [ -6.7439,   6.4572],
        [-11.8347,  11.4981],
        [ -6.8757,   6.6117]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.2780,  -7.7574],
        [  1.0062,  -1.1568],
        [ -1.2260,   1.0343],
        [ -7.2952,   7.0543],
        [ -7.8898,   7.5967],
        [-10.5292,  10.1785],
        [-10.0662,   9.6970],
        [-12.8250,  12.3605]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.0840,   8.7668],
        [ -3.9605,   3.7241],
        [  4.1048,  -4.3553],
        [ -5.1661,   4.9532],
        [ -7.2955,   7.0018],
        [  4.4781,  -4.7087],
        [  1.0447,  -1.1952],
        [-10.9042,  10.5306]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.7958,   1.5826],
        [ -4.8192,   4.5714],
        [  4.0722,  -4.3610],
        [  3.5797,  -3.8021],
        [ -9.5569,   9.1944],
        [  5.3310,  -5.6458],
        [-10.9655,  10.6054],
        [ -7.1318,   6.8932]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.5496,   8.2603],
        [  7.4938,  -8.1166],
        [  4.3102,  -4.6285],
        [  1.3683,  -1.5568],
        [ -8.9894,   8.6772],
        [  4.5038,  -4.7475],
        [-13.4652,  13.0230],
        [ -1.2602,   1.0910]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.3019, -6.6611],
        [ 1.9810, -2.1515],
        [-9.5557,  9.2603],
        [ 3.9886, -4.2470],
        [-9.9594,  9.6064],
        [ 6.9973, -7.3836],
        [-7.2382,  6.9405],
        [-6.2967,  6.0213]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.9576,  1.7735],
        [-7.9023,  7.6151],
        [-5.2508,  4.9910],
        [ 3.3306, -3.5755],
        [-6.0361,  5.7783],
        [ 7.4158, -7.9530],
        [ 5.7775, -6.1844],
        [-9.8087,  9.4852]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.7346,  -4.9792],
        [ -3.0205,   2.8244],
        [ -8.9706,   8.6630],
        [-10.3295,   9.9658],
        [ -9.4308,   9.1120],
        [  0.5257,  -0.6750],
        [ -9.4708,   9.1479],
        [  1.7954,  -1.9440]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.1986,   1.0126],
        [ -9.7690,   9.4520],
        [ -5.0876,   4.8525],
        [-11.4822,  11.1202],
        [ -7.9013,   7.5971],
        [ -4.1788,   3.9588],
        [ -4.1742,   3.9487],
        [ -8.4216,   8.0917]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.3118,   7.9966],
        [-11.7567,  11.3575],
        [  6.7456,  -7.1559],
        [ -4.0037,   3.7743],
        [  7.6592,  -8.1805],
        [ -1.2433,   1.0524],
        [ -7.9915,   7.7095],
        [-11.5819,  11.1279]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.3842,  5.1257],
        [-7.9303,  7.6301],
        [-8.0640,  7.7529],
        [-9.6627,  9.3419],
        [-4.6007,  4.3533],
        [ 3.4619, -3.6951],
        [-9.1932,  8.8737],
        [ 0.9444, -1.1713]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.2992,   7.0471],
        [  6.5187,  -7.0195],
        [  4.9735,  -5.3276],
        [ -4.0013,   3.7829],
        [ -9.5732,   9.2326],
        [-11.0252,  10.6304],
        [-10.1123,   9.7685],
        [  4.7290,  -5.0671]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.2886e+00, -2.4865e+00],
        [ 3.8603e-01, -5.0549e-01],
        [-1.0770e+01,  1.0444e+01],
        [ 5.6941e+00, -5.9948e+00],
        [-6.7637e+00,  6.4941e+00],
        [-6.6318e+00,  6.3574e+00],
        [-9.7256e+00,  9.4006e+00],
        [-5.5734e-03, -1.2990e-01]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.3715,   3.1781],
        [-10.9195,  10.5396],
        [  2.8188,  -3.0296],
        [  5.9729,  -6.3651],
        [  0.8507,  -0.9932],
        [-12.6182,  12.2009],
        [ -2.0120,   1.8248],
        [  5.2202,  -5.5452]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.7566,   5.5385],
        [-12.0865,  11.6757],
        [ -4.8919,   4.6760],
        [ -9.0958,   8.7814],
        [ -1.1876,   1.0079],
        [  4.2607,  -4.5998],
        [ -7.7794,   7.4776],
        [ -7.7312,   7.4258]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6083,  -5.9865],
        [ -1.5442,   1.3613],
        [  3.9301,  -4.1743],
        [  7.9673,  -8.5851],
        [-11.7751,  11.3694],
        [  7.1101,  -7.6963],
        [ -2.7024,   2.5082],
        [ -0.8519,   0.7011]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.0259,   9.6663],
        [  1.4984,  -1.6725],
        [-10.5934,  10.2222],
        [-11.0714,  10.7251],
        [ -2.3769,   2.1786],
        [ -8.8390,   8.5010],
        [ -9.2430,   8.9224],
        [ -1.0399,   0.8106]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.5033,  -8.0613],
        [ -0.6014,   0.4372],
        [ -6.9357,   6.6364],
        [-10.0495,   9.7415],
        [ -1.4470,   1.2865],
        [  0.0927,  -0.2479],
        [  1.3383,  -1.5230],
        [-11.9151,  11.5299]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.1637,  -6.5546],
        [  4.4352,  -4.6918],
        [-12.5047,  12.0716],
        [  3.2316,  -3.4674],
        [ -3.9442,   3.7334],
        [ -6.0077,   5.7853],
        [-11.1783,  10.7736],
        [ -5.7848,   5.5622]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.5274, -8.0281],
        [-7.7420,  7.4755],
        [-9.3199,  8.9530],
        [ 1.5316, -1.6781],
        [-6.9012,  6.6438],
        [ 5.0151, -5.3233],
        [-9.4800,  9.1563],
        [ 4.1461, -4.4343]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.8515,   2.6443],
        [ -3.4462,   3.2222],
        [ -0.7715,   0.5707],
        [  7.9771,  -8.5338],
        [  7.2862,  -7.8120],
        [ -6.0201,   5.7757],
        [-11.6636,  11.3073],
        [  0.2877,  -0.4522]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-3.7771,  3.5615],
        [-3.1336,  2.9324],
        [ 2.9489, -3.1917],
        [ 4.3903, -4.5977],
        [ 1.5982, -1.7476],
        [-0.0558, -0.0858],
        [-7.3494,  7.0740],
        [ 1.0534, -1.2184]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.7418,  10.3572],
        [  1.9488,  -2.1215],
        [ -6.2974,   6.0242],
        [  3.3668,  -3.5492],
        [ -5.4644,   5.2651],
        [ -0.8729,   0.6706],
        [ -9.9026,   9.5626],
        [  4.1046,  -4.3108]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.7739e+00,  9.4154e+00],
        [-8.2483e+00,  7.9899e+00],
        [ 6.1975e-01, -7.7251e-01],
        [-5.4151e+00,  5.1763e+00],
        [ 5.5628e-03, -1.4676e-01],
        [-2.5200e-01,  8.0515e-02],
        [-1.4170e+01,  1.3668e+01],
        [-5.2623e+00,  5.0287e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.9261, -6.3369],
        [ 4.6618, -5.0206],
        [-2.6069,  2.4533],
        [ 3.6964, -4.0897],
        [ 3.1710, -3.3547],
        [ 2.1882, -2.3684],
        [ 1.7540, -1.8976],
        [-3.4145,  3.2107]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.1113,  -0.2689],
        [  0.5260,  -0.7021],
        [-12.9728,  12.4737],
        [  0.1945,  -0.3646],
        [  2.9635,  -3.1635],
        [  4.2296,  -4.4995],
        [ -1.2448,   1.0961],
        [  7.7785,  -8.3399]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0482,   7.7720],
        [  0.5543,  -0.7209],
        [ -9.4599,   9.1150],
        [ -5.0521,   4.8083],
        [  5.6941,  -6.1018],
        [ -1.2623,   1.0808],
        [-10.3279,  10.0000],
        [  5.8193,  -6.1954]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.9672, -3.1979],
        [-3.0496,  2.8430],
        [-9.8381,  9.4852],
        [ 3.0441, -3.2383],
        [-6.1133,  5.8663],
        [ 6.2799, -6.7326],
        [-2.7483,  2.5478],
        [-5.0003,  4.7706]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.5652,  -5.9531],
        [  2.2432,  -2.4041],
        [ -7.4961,   7.2136],
        [  3.8765,  -4.1067],
        [ -9.2565,   8.9241],
        [-15.6474,  15.0861],
        [ -9.9619,   9.6018],
        [-11.7456,  11.3403]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.7513,  -6.0981],
        [ -6.6257,   6.3474],
        [ -2.0368,   1.8520],
        [  6.2236,  -6.6375],
        [ -8.3828,   8.0519],
        [-12.5105,  12.0598],
        [  1.6774,  -1.8511],
        [  1.5419,  -1.6971]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.0048,  -3.2091],
        [-12.2180,  11.7846],
        [  1.8209,  -1.9772],
        [ -7.0242,   6.7452],
        [-12.9687,  12.5369],
        [ -0.9779,   0.7956],
        [ -5.9616,   5.7032],
        [ -3.8964,   3.6405]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.9402, -7.3940],
        [-9.6193,  9.2939],
        [ 5.9408, -6.2531],
        [ 4.6604, -4.9269],
        [-8.5833,  8.2961],
        [ 6.4013, -6.9254],
        [-7.1346,  6.8236],
        [-2.0502,  1.8559]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.5717,  -7.0264],
        [ -9.4386,   9.0778],
        [ -7.7700,   7.4661],
        [-13.4788,  12.9921],
        [-11.0896,  10.6889],
        [  2.9510,  -3.1980],
        [  7.4960,  -8.1546],
        [  3.9456,  -4.1622]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.3895,  -3.5709],
        [ -6.4819,   6.2306],
        [  1.7675,  -1.9324],
        [  6.4965,  -6.9747],
        [  2.4482,  -2.6696],
        [  5.5546,  -5.9207],
        [-10.6929,  10.3290],
        [-10.0470,   9.6895]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.2687,   5.0179],
        [ -1.6066,   1.4285],
        [ -8.2820,   7.9258],
        [ -9.1232,   8.8020],
        [ -7.9634,   7.6640],
        [-13.6369,  13.1334],
        [-13.0184,  12.6120],
        [  6.9263,  -7.4936]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.2325,  7.9398],
        [-9.7348,  9.3719],
        [-9.1181,  8.8187],
        [-5.4461,  5.2108],
        [-7.3430,  7.0303],
        [ 2.3012, -2.4863],
        [-0.6620,  0.4956],
        [-8.8073,  8.5204]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.0874,  -5.3674],
        [-11.1193,  10.6481],
        [  5.4428,  -5.7319],
        [  6.3936,  -6.7509],
        [  1.0750,  -1.2165],
        [  1.0152,  -1.1727],
        [  4.8646,  -5.1259],
        [ -8.5400,   8.2535]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.0851,  -4.3231],
        [  5.6422,  -6.0524],
        [ -8.9626,   8.6333],
        [  5.8651,  -6.1923],
        [-12.8918,  12.4418],
        [ -1.6718,   1.5023],
        [ -5.4990,   5.2427],
        [ -8.7780,   8.4792]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.1287,  10.7006],
        [ -8.7581,   8.4790],
        [-12.3783,  11.9600],
        [ -2.6532,   2.4379],
        [-13.3500,  12.8194],
        [-11.3605,  10.9801],
        [  6.5197,  -6.9564],
        [ -8.4032,   8.0793]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.2812,   1.1181],
        [-10.6476,  10.2552],
        [ -7.3067,   7.0250],
        [ -2.9048,   2.6888],
        [ -2.2196,   2.0361],
        [ -6.6175,   6.3216],
        [-12.0577,  11.6557],
        [  2.6833,  -2.9077]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6283,  -5.9896],
        [  4.5604,  -4.8159],
        [  1.6747,  -1.8140],
        [ -8.2708,   7.9667],
        [  0.7488,  -0.8957],
        [ -2.4929,   2.3012],
        [ -0.4657,   0.3084],
        [-14.5289,  14.0728]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.8411,  -4.0265],
        [ -7.3028,   7.0105],
        [  0.2183,  -0.4659],
        [-10.3025,  10.0226],
        [ -4.9002,   4.6890],
        [ -6.4452,   6.1854],
        [  5.3565,  -5.7069],
        [ -7.6316,   7.3535]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.5669,  7.2834],
        [ 1.1082, -1.2506],
        [ 7.0883, -7.5821],
        [-9.3969,  9.0807],
        [ 3.0722, -3.2959],
        [ 6.5501, -7.0257],
        [ 7.0079, -7.4691],
        [-4.0503,  3.8277]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.7535,   0.5527],
        [-10.5729,  10.1349],
        [  6.1491,  -6.5554],
        [-10.9002,  10.4999],
        [  3.5317,  -3.8044],
        [  0.3551,  -0.5186],
        [  5.0723,  -5.4160],
        [ -3.8588,   3.6042]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.2926,  -4.5303],
        [  2.7122,  -2.8950],
        [ -4.2983,   4.0629],
        [ -9.1704,   8.8870],
        [-10.5782,  10.1994],
        [-13.4333,  12.9037],
        [ -0.0939,  -0.0645],
        [-12.8497,  12.3514]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.2879,   9.0019],
        [  3.8870,  -4.2115],
        [-10.9639,  10.5571],
        [-12.1439,  11.6549],
        [  3.5364,  -3.7563],
        [ -6.8679,   6.5826],
        [ -0.4347,   0.2774],
        [  4.1957,  -4.4698]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.8205, -3.0101],
        [ 6.1044, -6.5181],
        [ 0.3473, -0.5041],
        [ 7.2967, -7.8121],
        [ 4.7113, -5.0043],
        [ 3.4473, -3.6313],
        [-8.5856,  8.3040],
        [ 2.4695, -2.6469]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 0, 0, 0, 0, 0, 1, 0], device='cuda:0')
tensor([0, 0, 0, 0, 0, 0, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.5013,   1.3204],
        [  2.7424,  -2.9157],
        [-12.1758,  11.7215],
        [ -1.5785,   1.4221],
        [  3.2602,  -3.4563],
        [  1.8688,  -2.0118],
        [  3.8357,  -4.0461],
        [ -6.0070,   5.7785]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.9176,  0.7575],
        [ 2.3398, -2.4672],
        [ 1.4927, -1.6425],
        [ 3.5929, -3.9397],
        [ 4.0588, -4.2440],
        [-1.7229,  1.5495],
        [-2.5816,  2.3817],
        [-1.3978,  1.2195]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.5688,   0.4124],
        [-10.7056,  10.3384],
        [-12.7547,  12.3434],
        [ -9.7752,   9.4018],
        [-11.1257,  10.7394],
        [ -6.3200,   6.0837],
        [  5.1626,  -5.5238],
        [ -7.4442,   7.1416]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.8107,   7.5177],
        [-11.2977,  10.9329],
        [ -1.0979,   0.9324],
        [-13.7682,  13.3435],
        [ -8.6456,   8.3185],
        [ -8.1648,   7.8747],
        [ -1.0639,   0.8637],
        [  5.1135,  -5.4356]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7186,   9.3911],
        [  3.3204,  -3.5291],
        [  4.3250,  -4.5435],
        [ -9.8334,   9.4872],
        [ -7.1878,   6.9344],
        [-13.7717,  13.3262],
        [-10.7135,  10.3186],
        [-11.7278,  11.4425]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.8980,  5.6273],
        [-6.2108,  5.9579],
        [-0.5423,  0.3961],
        [-7.4139,  7.1305],
        [-3.9582,  3.8038],
        [-9.5792,  9.2524],
        [-7.4177,  7.1360],
        [-6.2711,  6.0206]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.9547,  -5.3139],
        [  0.9739,  -1.1189],
        [  6.6606,  -7.1519],
        [  0.8127,  -0.9866],
        [  5.9894,  -6.4452],
        [ -4.2229,   3.9766],
        [-10.6231,  10.3142],
        [  5.3389,  -5.6612]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.4203, -6.7751],
        [ 4.7402, -5.1190],
        [ 4.2011, -4.4296],
        [ 4.6538, -4.9781],
        [-1.4688,  1.2798],
        [ 3.2383, -3.3948],
        [ 0.1827, -0.3514],
        [-5.8060,  5.5445]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.7135,   1.5133],
        [  4.6147,  -4.9194],
        [ -6.2579,   5.9954],
        [ -7.2928,   7.0240],
        [-14.9558,  14.4913],
        [-11.5437,  11.1326],
        [ -8.0176,   7.7172],
        [  3.5434,  -3.7517]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1726,   8.8552],
        [ -1.8442,   1.6623],
        [-14.1705,  13.6257],
        [  3.1910,  -3.3894],
        [  7.7591,  -8.2866],
        [-10.1669,   9.8302],
        [-10.4718,  10.0937],
        [  7.4738,  -8.0210]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.3999,  0.2450],
        [ 4.0061, -4.2436],
        [-3.6790,  3.4635],
        [ 2.9273, -3.0698],
        [ 5.0001, -5.3415],
        [-8.2627,  7.9708],
        [-6.3106,  6.0598],
        [ 2.8123, -3.0464]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4606,  -2.7053],
        [ -3.6547,   3.4325],
        [  3.8867,  -4.1646],
        [ -7.9040,   7.6141],
        [  4.4173,  -4.6956],
        [-10.8740,  10.5675],
        [ -7.7001,   7.3957],
        [-12.6851,  12.2349]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.0738, -3.2680],
        [-7.9549,  7.6635],
        [ 1.9518, -2.1356],
        [-1.4872,  1.2898],
        [ 2.2392, -2.3874],
        [ 6.2016, -6.5789],
        [ 2.3845, -2.5403],
        [-7.4070,  7.1178]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.8953,   5.6041],
        [ -7.4863,   7.2196],
        [ -0.3179,   0.1118],
        [ -4.5537,   4.3722],
        [ -8.7710,   8.4122],
        [-12.5929,  12.1387],
        [-11.7407,  11.3735],
        [ -9.9290,   9.5217]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.9893, -2.2242],
        [ 5.5770, -5.9946],
        [-9.3812,  9.0833],
        [-5.5058,  5.2162],
        [-1.9345,  1.7775],
        [-7.6567,  7.3826],
        [ 7.6879, -8.3044],
        [-1.5404,  1.3839]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.5297,  -8.0967],
        [ -3.5152,   3.3006],
        [-11.5579,  11.1576],
        [  6.5411,  -7.0336],
        [  0.6028,  -0.7329],
        [  2.8332,  -3.0826],
        [  4.1332,  -4.3426],
        [-12.0841,  11.7148]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.9911,  -4.2038],
        [  5.2929,  -5.5684],
        [  2.2012,  -2.3592],
        [-10.0382,   9.6777],
        [  1.8626,  -2.0404],
        [ -9.3074,   8.9959],
        [ -7.7714,   7.4489],
        [ -2.4182,   2.2324]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.0810,  10.6899],
        [-11.5183,  11.1844],
        [ -5.8738,   5.6366],
        [  0.2218,  -0.3605],
        [-11.1310,  10.7889],
        [  5.9773,  -6.3556],
        [-11.7394,  11.3461],
        [  1.1868,  -1.3208]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.6325,  -3.8697],
        [-10.0763,   9.7052],
        [  1.0184,  -1.2165],
        [ -9.6221,   9.2780],
        [ -9.7720,   9.4536],
        [  5.5061,  -5.8979],
        [ -0.5810,   0.4093],
        [-10.2448,   9.9147]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.7269,  -5.0928],
        [  1.4788,  -1.6708],
        [ -3.4864,   3.2852],
        [-12.1969,  11.7448],
        [ -0.4355,   0.2676],
        [  8.3667,  -8.9752],
        [ -5.0077,   4.7545],
        [  5.1215,  -5.4148]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.2923,  -7.8265],
        [ -9.2889,   8.9563],
        [ -4.4899,   4.2270],
        [ -7.6836,   7.4603],
        [-11.3788,  10.9737],
        [  0.1999,  -0.3522],
        [  5.5217,  -5.9473],
        [  4.3282,  -4.6067]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.8555,  10.4734],
        [ -0.8371,   0.6658],
        [-12.5762,  12.1252],
        [  3.4251,  -3.6338],
        [-11.4356,  11.0529],
        [ -7.7082,   7.4145],
        [  6.6217,  -7.0453],
        [-10.3564,   9.9729]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.2654,  13.7869],
        [  7.8457,  -8.4443],
        [-14.5990,  14.0679],
        [ -9.0015,   8.6891],
        [ -3.9123,   3.6795],
        [  1.7074,  -1.8537],
        [  6.6194,  -7.0183],
        [ -7.8804,   7.6163]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.6195, -3.8765],
        [-5.3952,  5.1734],
        [-8.9481,  8.6105],
        [ 4.2387, -4.4760],
        [ 1.5386, -1.7145],
        [-3.5967,  3.3671],
        [ 5.9090, -6.4077],
        [ 7.2392, -7.7227]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.7290,  -7.2585],
        [ -3.8917,   3.6711],
        [  2.0344,  -2.2045],
        [  7.4316,  -7.9255],
        [-10.9765,  10.6184],
        [-11.6725,  11.3254],
        [ -8.8740,   8.5242],
        [-10.8016,  10.4748]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.0165,  -3.2034],
        [  6.9357,  -7.4731],
        [  7.2274,  -7.6840],
        [-10.0530,   9.7307],
        [ -0.6563,   0.4928],
        [  5.0686,  -5.3665],
        [ -9.9666,   9.6335],
        [ -5.6058,   5.3228]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.1697,  12.7005],
        [-14.5148,  14.0707],
        [ -9.1822,   8.8639],
        [-11.1878,  10.8240],
        [-12.2768,  11.8754],
        [-11.9817,  11.6324],
        [ -7.1892,   6.9237],
        [ -1.9897,   1.8136]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.6276,  -4.8547],
        [ -4.0187,   3.7956],
        [ -5.1332,   4.8466],
        [  3.6707,  -3.8850],
        [  1.8407,  -2.0624],
        [-10.5221,  10.1799],
        [-11.2402,  10.9016],
        [  0.0669,  -0.2035]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.3706,  7.0965],
        [-7.6907,  7.4033],
        [ 4.9976, -5.2821],
        [ 4.9436, -5.2389],
        [-8.0500,  7.7649],
        [-9.9066,  9.6098],
        [ 5.5832, -5.8962],
        [ 0.2809, -0.4427]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1155,   8.7989],
        [ -2.8192,   2.6009],
        [ -5.2314,   5.0079],
        [-11.9732,  11.5738],
        [ -6.5936,   6.3081],
        [-13.1772,  12.7347],
        [  0.6660,  -0.7889],
        [  5.6470,  -6.0125]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.6384, -1.7846],
        [ 5.2426, -5.5290],
        [-8.6056,  8.2804],
        [ 5.8304, -6.2906],
        [-1.3479,  1.1731],
        [-9.8519,  9.5534],
        [-5.0694,  4.8197],
        [ 6.7993, -7.2027]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.0580,  -0.0962],
        [-12.4011,  11.9714],
        [  5.3609,  -5.6761],
        [ -3.6497,   3.4017],
        [  4.8976,  -5.1650],
        [  2.1149,  -2.2660],
        [  1.4833,  -1.6546],
        [  8.8733,  -9.4758]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.9155,  9.6038],
        [-1.4593,  1.2759],
        [-9.0149,  8.7014],
        [-2.4594,  2.2326],
        [-9.9402,  9.6417],
        [-8.8611,  8.5294],
        [-5.5226,  5.2643],
        [-8.4451,  8.1317]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.2025,  11.8095],
        [  0.4333,  -0.5743],
        [ -3.7320,   3.5070],
        [ -7.3040,   7.0058],
        [ -7.6507,   7.3697],
        [  4.6166,  -4.8625],
        [-16.8271,  16.2844],
        [-13.5321,  13.1084]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.0295,   8.7129],
        [ -4.0289,   3.7974],
        [  5.8531,  -6.1984],
        [  6.8394,  -7.2726],
        [  1.6566,  -1.8686],
        [-12.3341,  11.9028],
        [ -6.7100,   6.4222],
        [-11.3707,  11.0827]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.8854,  -3.0593],
        [-11.9037,  11.5316],
        [ -9.5806,   9.2964],
        [ -2.5776,   2.3845],
        [  4.7604,  -5.1288],
        [ -8.1952,   7.9130],
        [ -0.1996,   0.0170],
        [  6.4028,  -6.8917]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.8124,  5.5620],
        [ 4.2847, -4.5768],
        [ 3.7043, -3.9175],
        [-8.5770,  8.2343],
        [-9.1415,  8.8358],
        [-2.5239,  2.3081],
        [ 4.2614, -4.5706],
        [-0.0886, -0.0710]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.6761, -2.8567],
        [-5.6363,  5.3918],
        [ 7.9845, -8.6191],
        [-7.4767,  7.2055],
        [-0.8369,  0.6735],
        [-6.6870,  6.4155],
        [-8.6047,  8.3530],
        [ 2.1440, -2.3190]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.0648,  -5.3843],
        [  4.9408,  -5.2529],
        [  6.9080,  -7.4450],
        [ -7.6875,   7.3993],
        [  8.5920,  -9.2441],
        [  4.8030,  -5.1307],
        [ -0.1780,   0.0215],
        [-12.6880,  12.2156]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.2203,  10.8668],
        [ -4.8794,   4.6326],
        [ -8.1745,   7.9131],
        [  4.1975,  -4.4302],
        [ -9.4870,   9.1381],
        [  3.7043,  -3.9084],
        [ -0.9184,   0.7500],
        [ -6.2271,   5.9524]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.5180,  1.3360],
        [ 2.4449, -2.6440],
        [-8.2713,  7.9241],
        [-7.3902,  7.0760],
        [ 1.2441, -1.3966],
        [-4.8084,  4.5696],
        [ 5.7730, -6.1840],
        [-5.6340,  5.3853]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.0341, -7.5233],
        [-6.3482,  6.0942],
        [ 4.4340, -4.7151],
        [ 1.8732, -2.0342],
        [-8.9999,  8.6719],
        [-7.0488,  6.7687],
        [-1.9986,  1.8206],
        [-7.6629,  7.3683]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.7634,  -7.2244],
        [-10.2133,   9.8168],
        [-15.6746,  15.1945],
        [-12.5690,  12.1386],
        [ -8.7461,   8.4677],
        [ -6.3310,   6.0825],
        [ -1.8677,   1.6540],
        [ -9.6590,   9.3034]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.0953, -0.0633],
        [-5.4507,  5.2294],
        [-5.0488,  4.8109],
        [-9.6589,  9.2855],
        [-8.1935,  7.8753],
        [-2.1195,  1.9133],
        [-6.1588,  5.8944],
        [ 3.1348, -3.3495]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.6394, -4.9978],
        [ 7.2217, -7.7437],
        [-8.3320,  8.0218],
        [ 2.7357, -2.9404],
        [ 2.8328, -3.0141],
        [-6.1538,  5.8691],
        [ 0.6212, -0.7453],
        [ 3.1782, -3.3987]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.1711,   9.7702],
        [  3.9865,  -4.1906],
        [  6.9551,  -7.4297],
        [-13.7182,  13.2978],
        [ -8.7896,   8.5305],
        [ -3.9744,   3.7305],
        [  8.6837,  -9.3671],
        [-14.3682,  13.8773]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.4752,  -3.6352],
        [-10.3186,   9.9818],
        [  2.7303,  -2.9163],
        [-11.2379,  10.8351],
        [ -2.3587,   2.1779],
        [ -1.4087,   1.2299],
        [  4.8241,  -5.2173],
        [ -5.6539,   5.3862]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.6229,  -0.7764],
        [  4.3956,  -4.7143],
        [ -0.4914,   0.3091],
        [ -7.7986,   7.5114],
        [-12.8050,  12.3304],
        [  4.9159,  -5.2176],
        [ -9.2445,   8.9981],
        [  2.3677,  -2.5406]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.6190,  -3.8813],
        [  1.0586,  -1.2012],
        [-10.4096,  10.0514],
        [  6.0534,  -6.4747],
        [ -9.4923,   9.1646],
        [ -8.2779,   7.9802],
        [ -7.7714,   7.4509],
        [ -6.1772,   5.9132]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.4907,  -3.6834],
        [-10.4098,  10.0239],
        [  4.0659,  -4.3475],
        [  4.6336,  -4.9018],
        [ -0.0513,  -0.0994],
        [  0.8120,  -0.9486],
        [ -9.6502,   9.3163],
        [  6.1038,  -6.4756]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 1, 0, 0, 0, 0, 1, 0], device='cuda:0')
tensor([0, 1, 0, 0, 0, 0, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.6473,   5.3645],
        [ -3.6411,   3.3982],
        [ -0.8367,   0.6782],
        [  1.2697,  -1.4845],
        [ -9.1240,   8.8000],
        [-11.7705,  11.3019],
        [  2.6861,  -2.8467],
        [ -8.0483,   7.7206]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.9503,  10.5216],
        [  4.5001,  -4.8487],
        [ -9.6303,   9.3045],
        [-10.1900,   9.7567],
        [-11.5991,  11.2386],
        [ -8.8912,   8.5751],
        [-11.0663,  10.6470],
        [  1.3761,  -1.5383]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5454,  10.1792],
        [ -6.0110,   5.7580],
        [-14.9215,  14.4347],
        [ -0.9342,   0.7663],
        [-11.8086,  11.3958],
        [ -9.0670,   8.6421],
        [  2.1744,  -2.3444],
        [-11.8200,  11.4569]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.8899,  7.5748],
        [ 0.5221, -0.6538],
        [ 1.6058, -1.8074],
        [ 3.4037, -3.6048],
        [ 5.3122, -5.6397],
        [ 7.4668, -8.0478],
        [ 4.3052, -4.5412],
        [-1.8353,  1.6578]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.4020,   1.1946],
        [ -3.7582,   3.5208],
        [ -6.4284,   6.2070],
        [  3.8024,  -4.0567],
        [  4.9677,  -5.2960],
        [-10.2755,   9.8957],
        [-12.0289,  11.6223],
        [  0.9596,  -1.0681]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7724,   9.4167],
        [-11.8598,  11.4155],
        [  4.6610,  -4.9153],
        [-12.9541,  12.5470],
        [ -2.3030,   2.0956],
        [ -6.6143,   6.2954],
        [  3.0095,  -3.1925],
        [ -1.3978,   1.2175]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3133,  -5.6230],
        [  1.0624,  -1.2196],
        [ -6.9177,   6.6455],
        [ -8.3003,   7.9823],
        [ -8.2909,   8.0655],
        [-10.4921,  10.1371],
        [  1.4053,  -1.6041],
        [ -6.7481,   6.4754]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.2711,   7.0335],
        [-10.6927,  10.3275],
        [  4.1584,  -4.4278],
        [  1.1694,  -1.3078],
        [  2.9257,  -3.1194],
        [  6.0555,  -6.3492],
        [-10.3995,  10.0586],
        [ -3.2736,   3.1068]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.5813, -8.1757],
        [ 3.4662, -3.6951],
        [-8.9950,  8.6606],
        [-7.8792,  7.5843],
        [ 7.3780, -7.8251],
        [ 4.6018, -4.8798],
        [ 8.1671, -8.7720],
        [-9.9845,  9.5897]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.2396,  -0.3776],
        [ -9.7803,   9.4060],
        [  0.7052,  -0.8893],
        [ -2.3490,   2.1332],
        [  4.2406,  -4.4939],
        [  5.8219,  -6.0889],
        [ -9.4613,   9.1311],
        [-13.1232,  12.7402]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.6817,  -7.1190],
        [  3.5728,  -3.7930],
        [  4.9137,  -5.2495],
        [  3.6051,  -3.8679],
        [-12.4572,  12.0595],
        [ -4.6681,   4.4250],
        [ -1.6207,   1.4139],
        [-11.1141,  10.7811]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.9680,   4.7210],
        [-12.7826,  12.3429],
        [ -9.8889,   9.5571],
        [ -7.5261,   7.2042],
        [ -4.8732,   4.6338],
        [-13.0818,  12.6366],
        [  2.6353,  -2.8226],
        [  6.0114,  -6.4736]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.1974,  -6.6583],
        [ -2.9280,   2.7042],
        [ -4.9118,   4.6580],
        [  3.8960,  -4.1297],
        [ -6.4451,   6.1761],
        [ -0.1282,  -0.0222],
        [-11.0114,  10.6693],
        [-10.6413,  10.2604]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.3179,  10.9360],
        [  3.4993,  -3.6906],
        [-11.3409,  10.9530],
        [  2.8424,  -2.9814],
        [  6.1842,  -6.5728],
        [-12.5241,  12.0337],
        [  7.3431,  -7.8374],
        [ -0.3284,   0.1704]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.1984,  -2.4135],
        [  3.8966,  -4.1614],
        [  0.0727,  -0.2261],
        [-10.4915,  10.1100],
        [-10.0194,   9.6771],
        [ -3.0606,   2.8322],
        [ -8.5514,   8.2552],
        [ -9.6213,   9.3159]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.9486,  -6.3673],
        [  4.7537,  -5.0492],
        [  2.4422,  -2.6257],
        [ -4.7512,   4.4836],
        [-11.0477,  10.6589],
        [  1.9041,  -2.1250],
        [  0.4683,  -0.6071],
        [  3.2541,  -3.4763]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.7748,   2.5785],
        [-11.7029,  11.2761],
        [  0.9136,  -1.0880],
        [  4.9312,  -5.2226],
        [-10.6454,  10.2668],
        [  4.7378,  -5.0528],
        [ -6.9093,   6.6422],
        [ -3.0610,   2.8643]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 8.3618, -8.8998],
        [ 2.7246, -2.8826],
        [-8.0434,  7.7259],
        [ 7.5922, -8.1056],
        [ 5.6177, -6.1192],
        [-7.0803,  6.8096],
        [-9.9487,  9.5848],
        [ 0.5999, -0.7416]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.0486,  11.6099],
        [ -6.7327,   6.4552],
        [  4.3493,  -4.6033],
        [  4.6109,  -4.8758],
        [ -6.8094,   6.5330],
        [  2.2204,  -2.3834],
        [  4.9587,  -5.2194],
        [ -1.8823,   1.6992]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.2889, -5.6556],
        [ 4.2947, -4.5771],
        [-0.9558,  0.7636],
        [ 1.5173, -1.6738],
        [-0.9613,  0.7684],
        [-4.1967,  4.0057],
        [ 1.1422, -1.3102],
        [ 3.6051, -3.7947]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.1027,  10.7466],
        [-15.5539,  15.0369],
        [  3.9432,  -4.2075],
        [ -7.2051,   6.9016],
        [ -8.1478,   7.8772],
        [ -9.8062,   9.4619],
        [  4.6288,  -4.9128],
        [ -1.0145,   0.8514]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.4900,  11.0478],
        [-12.6122,  12.1663],
        [ -8.4768,   8.1820],
        [ -7.9845,   7.7157],
        [-12.1268,  11.6934],
        [-10.8308,  10.4548],
        [  3.1941,  -3.3625],
        [ -7.5304,   7.2464]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.0271e+01,  9.8598e+00],
        [-7.8280e+00,  7.5590e+00],
        [-1.4985e+01,  1.4439e+01],
        [-9.2413e+00,  8.8801e+00],
        [-1.0604e+01,  1.0238e+01],
        [ 1.3900e-02, -2.1339e-01],
        [ 1.7601e+00, -1.9261e+00],
        [ 2.4896e+00, -2.6785e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6903,  -6.0707],
        [ -7.2911,   7.0144],
        [  5.4410,  -5.8419],
        [  2.7742,  -2.9369],
        [ -7.2482,   6.9787],
        [  4.0523,  -4.2909],
        [-15.9558,  15.3903],
        [  4.4021,  -4.6764]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.9467,   4.7207],
        [  3.6740,  -3.8661],
        [  4.7810,  -5.0832],
        [ -7.3072,   6.9978],
        [-12.0743,  11.6427],
        [  0.4775,  -0.6155],
        [  0.9421,  -1.0675],
        [ -9.2067,   8.8203]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.8047,   4.5667],
        [  3.6120,  -3.8503],
        [  4.3697,  -4.5674],
        [-10.2646,   9.9363],
        [ -4.9302,   4.6781],
        [ -3.5163,   3.2869],
        [ -0.9400,   0.7852],
        [-11.1088,  10.7025]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.5605,   0.3796],
        [ -6.6893,   6.4100],
        [ -4.7785,   4.5473],
        [  2.7865,  -2.9787],
        [-11.5270,  11.1448],
        [ -8.8461,   8.5192],
        [  4.5507,  -4.8028],
        [  7.8589,  -8.4368]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.4590,  8.1944],
        [-8.7900,  8.4579],
        [ 4.7425, -4.9507],
        [-1.1211,  0.9396],
        [ 5.9771, -6.3454],
        [ 7.4164, -7.8967],
        [-5.3214,  5.0706],
        [ 0.3332, -0.4889]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.7151,  8.3839],
        [ 1.4244, -1.5870],
        [ 0.0478, -0.2046],
        [-6.6596,  6.4337],
        [-8.3674,  8.0822],
        [ 0.7466, -0.9349],
        [ 2.5819, -2.7568],
        [ 4.8864, -5.1918]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.2789,   7.9536],
        [  7.6678,  -8.2522],
        [-10.3914,  10.0431],
        [-13.1943,  12.6978],
        [  8.6190,  -9.2159],
        [  6.9946,  -7.3910],
        [ -3.5413,   3.3055],
        [  1.1812,  -1.3245]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  8.3864,  -8.9495],
        [  8.6232,  -9.2674],
        [-10.0119,   9.6816],
        [-13.1534,  12.7142],
        [ -8.2324,   7.9302],
        [  2.3534,  -2.5345],
        [ -7.7094,   7.4758],
        [ -8.1455,   7.8363]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.4041,  7.1421],
        [ 1.2279, -1.3904],
        [-0.5168,  0.3485],
        [-3.8096,  3.5793],
        [ 4.5759, -4.8546],
        [ 6.2509, -6.6846],
        [-9.6714,  9.3244],
        [-0.2609,  0.1047]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.7270,  9.3811],
        [ 5.4482, -5.7891],
        [ 6.2099, -6.5891],
        [ 2.3053, -2.4715],
        [-0.5499,  0.3745],
        [-2.1589,  1.9757],
        [ 4.2606, -4.4783],
        [-5.8389,  5.5751]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.9038,  -2.0628],
        [ -0.2317,   0.0786],
        [ -7.0382,   6.7447],
        [  5.3277,  -5.6348],
        [ -6.9799,   6.7229],
        [ -4.1304,   3.8962],
        [  0.6343,  -0.7897],
        [-10.6204,  10.3013]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.9165,   4.6674],
        [ -2.9870,   2.8288],
        [-10.2641,   9.8700],
        [  1.7526,  -1.9327],
        [ -8.0929,   7.7952],
        [  1.9757,  -2.1469],
        [ -6.2718,   6.0453],
        [-13.5890,  13.1634]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.0554,   6.7505],
        [ -1.5963,   1.4281],
        [  0.9401,  -1.1057],
        [  4.2516,  -4.4634],
        [-15.4436,  14.8397],
        [  2.9238,  -3.0888],
        [ -1.6618,   1.4838],
        [  3.6493,  -3.9333]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.3294,  -4.5812],
        [  8.2603,  -8.8542],
        [  4.5923,  -4.8572],
        [  1.4979,  -1.6596],
        [ -5.5977,   5.3657],
        [  6.4336,  -6.8541],
        [-10.4841,  10.0476],
        [-10.3455,   9.9829]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.7434,   6.4873],
        [  6.1140,  -6.5366],
        [ -2.8331,   2.6432],
        [ -8.0433,   7.7276],
        [-12.3690,  11.9029],
        [ -1.3670,   1.1747],
        [  2.6436,  -2.8359],
        [ -3.0700,   2.8476]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.2848,   7.9649],
        [-13.3175,  12.8572],
        [  0.2196,  -0.3860],
        [-10.3950,  10.0111],
        [ -7.4202,   7.1408],
        [ -6.0871,   5.8388],
        [  6.8920,  -7.4105],
        [ -0.7961,   0.6220]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.3142,  -6.7265],
        [  3.5723,  -3.8182],
        [-10.2884,   9.9008],
        [ -7.8924,   7.5823],
        [  6.0211,  -6.3402],
        [-12.4316,  12.0613],
        [  1.8107,  -2.0259],
        [  0.3651,  -0.5207]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.0809, -1.2299],
        [ 6.5694, -7.0547],
        [-5.2601,  5.0182],
        [ 1.9385, -2.1351],
        [-9.6791,  9.3502],
        [-3.8043,  3.5982],
        [-6.5698,  6.3005],
        [-7.7815,  7.5127]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.4263,  10.0862],
        [ -9.7030,   9.3751],
        [  2.9863,  -3.1956],
        [ -4.0306,   3.7895],
        [  0.8992,  -1.0468],
        [ -6.1925,   5.9197],
        [ -3.1367,   2.9546],
        [  0.7715,  -0.9499]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.4535,  -1.5882],
        [ -2.3415,   2.1516],
        [ -1.0221,   0.8436],
        [-11.9076,  11.5133],
        [-10.2371,   9.8773],
        [  6.5162,  -6.9017],
        [  2.9754,  -3.1206],
        [  4.2081,  -4.5138]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.1989,  -4.4198],
        [  3.2129,  -3.4103],
        [ -4.2925,   4.0928],
        [ -7.4413,   7.1560],
        [ -9.2102,   8.9001],
        [-10.3020,   9.9429],
        [ -7.3679,   7.1046],
        [  2.8353,  -3.0086]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.3577,  -0.5216],
        [  7.7351,  -8.2171],
        [  0.5805,  -0.7897],
        [-10.1682,   9.8456],
        [ -6.1127,   5.8634],
        [ -8.3866,   8.1716],
        [  4.3241,  -4.5764],
        [  3.5355,  -3.7659]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4745,  -2.6821],
        [  0.1158,  -0.2625],
        [ -6.7428,   6.4682],
        [  1.3528,  -1.5098],
        [-11.3504,  10.9729],
        [ -2.1859,   1.9815],
        [ -3.9643,   3.7346],
        [ -6.4566,   6.1751]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.4633,   0.3198],
        [ -5.8851,   5.6346],
        [  2.6802,  -2.8532],
        [  3.3124,  -3.6408],
        [-12.8347,  12.4424],
        [ -0.5196,   0.3837],
        [-11.9076,  11.5381],
        [  7.2685,  -7.7498]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.3399,  -3.5707],
        [-14.1007,  13.6515],
        [-10.2858,   9.9497],
        [ -8.7802,   8.4504],
        [  2.8790,  -3.0765],
        [  2.3497,  -2.5118],
        [  4.4663,  -4.7352],
        [ -4.8607,   4.6312]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.1835,  -5.4786],
        [  7.5037,  -8.0146],
        [-10.4387,  10.0288],
        [  2.1488,  -2.3143],
        [  3.1120,  -3.3868],
        [  0.9236,  -1.1172],
        [ -6.8493,   6.6236],
        [ -4.7069,   4.4554]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.8920,  11.5076],
        [-12.1100,  11.6511],
        [-10.0315,   9.7500],
        [-11.9635,  11.5822],
        [-10.7196,  10.3683],
        [  3.0642,  -3.2495],
        [  1.9708,  -2.1346],
        [  1.3974,  -1.5677]], device='cuda:0')
Iteration Acc 1.0000
tensor([1, 1, 1, 1, 1, 0, 0, 0], device='cuda:0')
tensor([1, 1, 1, 1, 1, 0, 0, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.7026,   7.4034],
        [ -8.8062,   8.4872],
        [-11.1637,  10.7997],
        [ -2.1545,   1.9693],
        [ -4.0101,   3.7787],
        [  1.1459,  -1.3092],
        [  4.7537,  -5.0415],
        [-12.2477,  11.8126]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1931,   8.8515],
        [-13.7266,  13.2343],
        [  6.9284,  -7.3875],
        [-11.2052,  10.7975],
        [ -9.7551,   9.4200],
        [-10.3530,   9.9882],
        [ -2.0803,   1.8947],
        [ -9.3426,   9.0557]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0914,   7.7957],
        [  1.4171,  -1.5422],
        [-10.7320,  10.3328],
        [ -5.8121,   5.5292],
        [-13.4896,  13.0249],
        [-10.0296,   9.6599],
        [-11.1864,  10.7823],
        [ -7.1091,   6.8577]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.5372,  -5.9694],
        [  7.1579,  -7.7200],
        [ -2.8415,   2.6329],
        [-10.5461,  10.2033],
        [  4.5963,  -4.8584],
        [  0.0852,  -0.2306],
        [  2.6006,  -2.7713],
        [  1.4300,  -1.5966]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.4617,   5.2330],
        [ -0.8624,   0.6909],
        [  2.4568,  -2.6184],
        [-11.3671,  10.9793],
        [  6.2872,  -6.7155],
        [  4.6385,  -4.9581],
        [  4.6540,  -4.9511],
        [-13.1038,  12.6993]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.9974, -5.2878],
        [-7.9355,  7.6087],
        [ 3.9504, -4.1884],
        [ 4.6115, -4.8864],
        [ 0.1525, -0.3122],
        [ 2.9282, -3.1143],
        [-1.0544,  0.8876],
        [-8.3287,  8.0027]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.1884, -2.3615],
        [ 0.2879, -0.5426],
        [ 7.3804, -7.9038],
        [ 4.8086, -5.0531],
        [ 1.8691, -2.0114],
        [ 6.5982, -7.0760],
        [ 1.0787, -1.2179],
        [-5.0181,  4.7568]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.0105,  -6.4610],
        [ -1.0628,   0.8951],
        [  0.8374,  -1.0395],
        [-11.2958,  10.9340],
        [ -6.7394,   6.4873],
        [  2.1177,  -2.2826],
        [  4.0341,  -4.3114],
        [ -4.4339,   4.2309]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.7982,  -2.9917],
        [  1.9854,  -2.1670],
        [  5.5346,  -5.7863],
        [ -7.9728,   7.6720],
        [-13.7259,  13.2404],
        [  4.3091,  -4.6072],
        [  2.5229,  -2.7150],
        [-10.3113,   9.9219]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.0630,  -0.0932],
        [ -7.8932,   7.5882],
        [ -3.2167,   3.0086],
        [ -9.6819,   9.3905],
        [-12.6703,  12.2889],
        [  5.7675,  -6.1721],
        [ -5.0090,   4.7408],
        [  4.1371,  -4.3845]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.3107,   1.1247],
        [  0.8344,  -0.9955],
        [  0.1812,  -0.3809],
        [ -8.7174,   8.4198],
        [  2.6954,  -2.8655],
        [  5.6453,  -5.9687],
        [  7.4751,  -8.0131],
        [-11.6172,  11.2513]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5246,  10.1634],
        [ -9.9734,   9.6175],
        [ -3.0957,   2.8860],
        [-13.0051,  12.5399],
        [  6.4947,  -6.9515],
        [ -7.9164,   7.6042],
        [-10.8025,  10.4081],
        [ -8.5641,   8.2590]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.3779,  5.1705],
        [-8.8307,  8.5025],
        [ 2.5565, -2.7582],
        [ 2.2348, -2.4253],
        [ 6.4668, -6.8324],
        [-7.0684,  6.7795],
        [ 6.8612, -7.3422],
        [-1.8852,  1.6934]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.5057,   6.2679],
        [  5.3043,  -5.6173],
        [  8.6700,  -9.2583],
        [ -9.2645,   9.0139],
        [ -5.1762,   4.9165],
        [ -1.5064,   1.3212],
        [ -7.1340,   6.8835],
        [-11.2099,  10.8433]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  9.1070,  -9.7669],
        [ -0.8579,   0.7089],
        [  0.4639,  -0.6586],
        [  1.8350,  -1.9776],
        [-10.1219,   9.7781],
        [ -3.3384,   3.1302],
        [-13.5199,  13.0604],
        [  3.9782,  -4.2407]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.2596,   1.1018],
        [-11.8081,  11.3732],
        [  1.9174,  -2.0686],
        [ -6.8331,   6.5655],
        [ -9.7823,   9.4394],
        [ -1.7729,   1.5225],
        [ -7.6884,   7.4245],
        [ -8.5942,   8.3044]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.6824,  12.2028],
        [-13.0793,  12.6600],
        [ -7.1782,   6.8988],
        [  4.1703,  -4.3771],
        [  2.5487,  -2.6932],
        [ -5.7977,   5.5591],
        [  4.8819,  -5.2186],
        [-13.2127,  12.7678]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5594,  10.1496],
        [-11.0264,  10.6526],
        [ -8.8966,   8.5851],
        [  7.1872,  -7.6922],
        [-10.6508,  10.2466],
        [-13.8393,  13.3532],
        [  1.6685,  -1.8243],
        [ -8.1931,   7.8874]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.9662,  5.7267],
        [ 6.6321, -7.0688],
        [-0.9257,  0.7571],
        [-8.8068,  8.4938],
        [ 3.8786, -4.1779],
        [ 1.3589, -1.5069],
        [ 4.6636, -4.8324],
        [ 6.1056, -6.5051]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.7995,   2.5741],
        [  2.9357,  -3.1137],
        [ -1.4068,   1.2222],
        [-10.5938,  10.3095],
        [ -8.7387,   8.3902],
        [  7.4448,  -7.9399],
        [ -6.0067,   5.7425],
        [  3.6172,  -3.7973]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.2546,   8.9367],
        [  3.7658,  -3.9845],
        [  7.2313,  -7.8172],
        [ -8.8151,   8.4936],
        [  4.7376,  -5.0433],
        [  2.9277,  -3.2879],
        [-13.7462,  13.3233],
        [ -3.7018,   3.4589]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-16.1904,  15.6551],
        [  1.7555,  -1.9304],
        [ -8.5797,   8.2595],
        [  2.9109,  -3.1167],
        [ -0.2914,   0.1574],
        [ -3.2661,   3.0440],
        [ -0.7407,   0.5708],
        [-11.0195,  10.5930]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.0945,  -4.3314],
        [ -8.1505,   7.9014],
        [ -8.3108,   7.9672],
        [-10.0706,   9.7525],
        [  4.1456,  -4.3570],
        [ -3.3996,   3.1735],
        [ -8.7291,   8.4382],
        [  3.8777,  -4.1164]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.0320,  -1.2119],
        [  0.6195,  -0.7721],
        [ -8.3094,   8.0029],
        [  7.2304,  -7.6843],
        [-10.2234,   9.8603],
        [ -8.5508,   8.2976],
        [ -7.2059,   6.9123],
        [  1.0498,  -1.1938]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.7142,  -5.0132],
        [-10.1811,   9.8281],
        [ -6.6513,   6.3552],
        [-12.8604,  12.4060],
        [ -8.5209,   8.2090],
        [ -8.8245,   8.5223],
        [  2.1819,  -2.3621],
        [  6.4544,  -6.7833]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.7700,  -0.9091],
        [  8.3932,  -9.1062],
        [  3.5320,  -3.7737],
        [-11.2347,  10.8532],
        [ -8.7729,   8.4830],
        [ -9.1147,   8.8089],
        [  5.3775,  -5.6800],
        [ -0.3148,   0.1386]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.1589,  -4.4419],
        [  7.4419,  -7.9705],
        [ -1.8791,   1.6855],
        [-12.7967,  12.3839],
        [  3.9817,  -4.2661],
        [ -3.8278,   3.6279],
        [-12.1325,  11.7378],
        [-10.1782,   9.8236]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.7822,  -6.1360],
        [-11.3130,  10.9114],
        [ -7.9875,   7.7081],
        [  0.2019,  -0.3472],
        [ -1.2987,   1.1226],
        [ -9.2453,   8.9044],
        [  1.7979,  -1.9669],
        [  6.2779,  -6.6291]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.4775, -0.6874],
        [ 2.3310, -2.5180],
        [ 4.4277, -4.6760],
        [-9.1281,  8.7825],
        [ 4.4860, -4.7174],
        [-0.6698,  0.4496],
        [ 2.4906, -2.6357],
        [ 3.3506, -3.6156]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.0194,  -1.1585],
        [-10.0554,   9.7583],
        [  5.6149,  -5.9603],
        [  8.0599,  -8.7623],
        [  5.5805,  -5.9693],
        [  4.5040,  -4.7672],
        [  0.4543,  -0.5950],
        [  6.5925,  -7.0471]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.7108,   4.4722],
        [ -9.5698,   9.2529],
        [-12.2234,  11.8114],
        [ -9.4724,   9.1800],
        [  4.9756,  -5.3295],
        [  1.7287,  -1.9016],
        [-11.8426,  11.4244],
        [ -3.4808,   3.2643]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.1589,   9.7552],
        [  0.8620,  -0.9865],
        [  1.4742,  -1.6486],
        [  2.1541,  -2.3491],
        [ -0.0937,  -0.0712],
        [  0.8815,  -1.0221],
        [ -8.6903,   8.3854],
        [ -8.2111,   7.9098]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.5859,   4.3213],
        [ -1.0316,   0.8648],
        [ -0.3484,   0.1736],
        [-11.1899,  10.8009],
        [  3.0113,  -3.1990],
        [ -4.2055,   3.9666],
        [-10.6205,  10.2932],
        [ -8.3825,   8.1062]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.1981,  -6.5728],
        [-10.1110,   9.7666],
        [  3.2582,  -3.4562],
        [  2.6992,  -2.9308],
        [  0.2143,  -0.3946],
        [ -7.1427,   6.8763],
        [  6.6254,  -7.0905],
        [ -9.3214,   8.9591]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.9451,   0.7652],
        [ -3.8466,   3.6180],
        [ -7.4379,   7.1210],
        [  4.5509,  -4.9202],
        [  3.7335,  -4.0095],
        [-10.6039,  10.2375],
        [-12.7145,  12.1971],
        [ -6.3487,   6.0792]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.7695,  -7.2205],
        [  2.0271,  -2.1770],
        [  4.2880,  -4.5619],
        [ -9.8007,   9.4708],
        [  7.1842,  -7.6773],
        [-12.1816,  11.8128],
        [ -8.8380,   8.5437],
        [ -0.7207,   0.5250]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.0094,  -1.1408],
        [  5.2474,  -5.6231],
        [-13.5918,  13.1684],
        [  3.1234,  -3.3233],
        [ -9.7218,   9.3717],
        [ -9.1585,   8.8236],
        [-12.5942,  12.1841],
        [  5.7899,  -6.1911]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5502,  10.1484],
        [ -7.3958,   7.1147],
        [ -8.9138,   8.6206],
        [ -3.0190,   2.8115],
        [ -5.0900,   4.8184],
        [ -6.6171,   6.3384],
        [  1.3587,  -1.5137],
        [  2.6252,  -2.7705]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.0406,   8.6970],
        [ -6.2903,   6.0301],
        [  9.0353,  -9.7471],
        [ -2.1261,   1.9205],
        [ -6.4567,   6.1852],
        [ -5.2898,   5.0205],
        [  1.6414,  -1.7894],
        [-12.5663,  12.1439]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.4554,   1.2926],
        [ -6.7800,   6.5096],
        [  2.3636,  -2.5247],
        [ -0.5442,   0.3954],
        [ -2.9015,   2.6984],
        [ -9.2487,   8.9153],
        [-10.3930,  10.0209],
        [  3.9586,  -4.1917]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.0919e-01, -5.5012e-02],
        [-1.1282e+01,  1.0879e+01],
        [-6.8602e-01,  5.4043e-01],
        [ 4.7263e+00, -4.9722e+00],
        [-1.0705e+01,  1.0322e+01],
        [-3.0490e+00,  2.8277e+00],
        [-9.4379e+00,  9.1110e+00],
        [-1.5010e-01,  1.1154e-02]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.7910e+00, -6.2085e+00],
        [-1.1557e+01,  1.1157e+01],
        [-1.1527e+01,  1.1131e+01],
        [-2.5575e-03, -1.3706e-01],
        [-1.2422e+01,  1.1993e+01],
        [-9.5276e+00,  9.2349e+00],
        [-1.0838e+01,  1.0494e+01],
        [ 6.3636e+00, -6.8551e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.8000, -3.9946],
        [ 4.7675, -5.0783],
        [ 0.7502, -0.9227],
        [ 2.3614, -2.5173],
        [-5.5716,  5.3276],
        [ 1.7368, -1.8684],
        [ 7.3092, -7.8251],
        [-9.9365,  9.5697]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.6768, -5.0064],
        [-7.3878,  7.1158],
        [-9.6798,  9.3195],
        [-9.9133,  9.6035],
        [ 0.6878, -0.8367],
        [ 5.0348, -5.3933],
        [-3.1972,  2.9913],
        [-0.8441,  0.6869]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.4816,  -3.6776],
        [ -6.1552,   5.8809],
        [ -6.5019,   6.2493],
        [-10.8814,  10.4665],
        [  4.7003,  -4.9343],
        [  7.7227,  -8.3266],
        [  5.8983,  -6.3176],
        [  5.6682,  -6.1304]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-3.8790,  3.6398],
        [ 6.7754, -7.2237],
        [-9.5112,  9.1639],
        [ 1.8453, -2.0005],
        [-4.8733,  4.6238],
        [-7.8768,  7.5786],
        [ 0.2502, -0.4178],
        [ 0.0649, -0.2159]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.2937,  -6.7060],
        [ -2.5344,   2.3540],
        [  6.7236,  -7.2795],
        [-11.0382,  10.7022],
        [ -0.0660,  -0.1452],
        [ -7.8379,   7.5328],
        [  3.0527,  -3.3593],
        [  1.3863,  -1.5822]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.5930,  7.2732],
        [ 3.8275, -4.1431],
        [-9.6169,  9.2872],
        [ 7.8456, -8.4045],
        [-5.0994,  4.8867],
        [-2.3428,  2.1506],
        [ 0.9531, -1.1668],
        [-1.4724,  1.2942]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.6325,   8.3135],
        [ -5.6045,   5.3405],
        [-10.2498,   9.8732],
        [ -3.4099,   3.2050],
        [  4.2267,  -4.4845],
        [  0.9507,  -1.1088],
        [ -0.2237,   0.0534],
        [ -4.3198,   4.1003]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.4137,  10.0174],
        [ -8.1263,   7.8427],
        [  1.6146,  -1.7736],
        [  3.0773,  -3.2622],
        [  3.4129,  -3.6129],
        [  3.4030,  -3.6030],
        [  1.0934,  -1.2563],
        [-12.1235,  11.7605]], device='cuda:0')
Iteration Acc 0.8750
tensor([1, 1, 0, 0, 0, 0, 0, 1], device='cuda:0')
tensor([1, 1, 1, 0, 0, 0, 0, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3294,   9.0125],
        [  6.7528,  -7.2134],
        [  1.2392,  -1.3988],
        [-10.2077,   9.8548],
        [  4.4863,  -4.7720],
        [  3.6479,  -3.9282],
        [  4.4929,  -4.7421],
        [ -6.9470,   6.6461]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.3136,  -3.4764],
        [ -1.3601,   1.1778],
        [ -2.3543,   2.1703],
        [  1.1087,  -1.2835],
        [ -6.2494,   5.9670],
        [ -2.8306,   2.6165],
        [-12.0386,  11.6883],
        [  2.2971,  -2.4984]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4572,   6.2568],
        [-12.0432,  11.6534],
        [  7.9213,  -8.5177],
        [ -0.4191,   0.2633],
        [-13.0090,  12.5412],
        [  0.4930,  -0.6358],
        [  4.2208,  -4.4606],
        [ -1.8771,   1.7042]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.7662, -7.2569],
        [-7.8553,  7.5583],
        [ 3.3124, -3.5262],
        [-5.2908,  5.0477],
        [-4.7543,  4.5176],
        [ 3.3238, -3.5099],
        [ 6.3273, -6.7814],
        [-9.1795,  8.8241]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.5793,   1.3991],
        [-12.9786,  12.5975],
        [ -2.3010,   2.1274],
        [ -4.3275,   4.0913],
        [ -1.6460,   1.3328],
        [ -9.0947,   8.8129],
        [ -0.8709,   0.7219],
        [ -2.8904,   2.6892]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.4697,   2.2795],
        [-11.0169,  10.6131],
        [  7.5916,  -8.1213],
        [ -6.9933,   6.7340],
        [ -3.3404,   3.1127],
        [ -4.7788,   4.5616],
        [ -6.7782,   6.5124],
        [  6.5341,  -6.8866]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.6128,   5.3474],
        [ -6.6968,   6.4327],
        [ -4.9695,   4.7299],
        [ -7.4749,   7.1768],
        [ -8.3247,   8.0055],
        [  6.4040,  -6.9479],
        [-11.0742,  10.6595],
        [  2.9422,  -3.1608]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.9881, -2.5139],
        [-7.9117,  7.6200],
        [ 7.2768, -7.8214],
        [ 4.4855, -4.7559],
        [ 0.7574, -0.9182],
        [-2.5881,  2.3782],
        [-3.8038,  3.5674],
        [ 3.2139, -3.4275]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.3798,  10.0647],
        [-12.2307,  11.8247],
        [  3.8449,  -4.1350],
        [ -3.2480,   3.0440],
        [ -0.3941,   0.2371],
        [  1.3276,  -1.4835],
        [ -7.0757,   6.7789],
        [  3.6679,  -3.9337]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.9852,  -3.2221],
        [ -9.3672,   9.0262],
        [-10.6380,  10.2966],
        [  7.5516,  -8.1400],
        [ -0.8859,   0.7296],
        [ -9.0067,   8.6991],
        [  0.7623,  -0.8966],
        [  7.0637,  -7.5650]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.8411,   7.5186],
        [-10.7302,  10.3861],
        [ -1.9253,   1.7041],
        [ -0.7406,   0.5912],
        [-11.7240,  11.3291],
        [  7.5602,  -8.1447],
        [  1.0356,  -1.1940],
        [  6.5244,  -6.9532]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.4324,  -6.9086],
        [  4.0448,  -4.2946],
        [-10.9304,  10.5452],
        [  5.8194,  -6.2538],
        [ -0.3114,   0.1229],
        [  2.5005,  -2.7441],
        [  9.6843, -10.3976],
        [ -7.2355,   6.9505]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.8111,   6.5408],
        [  2.5645,  -2.7378],
        [ -7.6286,   7.3222],
        [ -1.6359,   1.4614],
        [-11.1231,  10.6948],
        [  8.2046,  -8.8618],
        [-10.3776,   9.9969],
        [  5.1318,  -5.4497]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.3237,   7.0594],
        [-12.1902,  11.7301],
        [  5.3381,  -5.6368],
        [  8.8907,  -9.4866],
        [ -8.7141,   8.4447],
        [-13.6792,  13.2161],
        [-13.2913,  12.8338],
        [  5.9716,  -6.3941]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.0717,  12.6785],
        [  1.4401,  -1.5879],
        [ -2.7750,   2.5781],
        [-11.5602,  11.1261],
        [-14.4403,  13.9268],
        [ -8.9109,   8.5899],
        [  7.2808,  -7.7713],
        [  6.8732,  -7.3429]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.2928,  10.9124],
        [ -1.9190,   1.7254],
        [ -0.3907,   0.2198],
        [ -7.3684,   7.0665],
        [  3.9663,  -4.2054],
        [ -5.4490,   5.2410],
        [ -9.9324,   9.5427],
        [ -7.8386,   7.5543]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.8119,  13.4463],
        [ -6.8071,   6.5450],
        [  1.2781,  -1.4824],
        [  5.5415,  -5.9078],
        [-10.3576,  10.0598],
        [-10.5255,  10.1656],
        [-10.8570,  10.4986],
        [-15.2250,  14.6691]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.6020,   5.3411],
        [ -5.7551,   5.4739],
        [ -8.4534,   8.1273],
        [  3.4308,  -3.6814],
        [-12.5297,  12.1378],
        [-11.6405,  11.3048],
        [-11.1585,  10.7987],
        [-10.0055,   9.6519]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.9965,   9.6721],
        [  8.4225,  -9.0340],
        [ -9.4035,   9.0849],
        [  6.1494,  -6.5663],
        [-10.4756,  10.1046],
        [-11.3781,  11.0045],
        [ -8.3002,   8.0096],
        [  2.4399,  -2.6246]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.5513,  12.0920],
        [ -7.4561,   7.1740],
        [-12.2820,  11.8691],
        [  2.4877,  -2.6858],
        [-11.3705,  11.0059],
        [  2.6723,  -2.8935],
        [ -8.4682,   8.1661],
        [ -4.5147,   4.3086]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4487,   6.1834],
        [  3.6616,  -3.8563],
        [  7.2595,  -7.7760],
        [-10.2853,   9.9414],
        [-11.1598,  10.6896],
        [-10.0181,   9.6855],
        [  6.4142,  -6.8244],
        [ -9.5312,   9.2313]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.0851,   6.8225],
        [-12.4115,  11.9308],
        [ -4.9447,   4.7008],
        [  7.2354,  -7.7416],
        [ -0.0824,  -0.1310],
        [  0.8705,  -1.0254],
        [ -7.7563,   7.4870],
        [  0.9906,  -1.1538]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.5656,  11.1917],
        [  0.9948,  -1.1517],
        [ -9.2733,   8.9465],
        [ -9.0384,   8.7204],
        [ -5.1100,   4.8617],
        [  2.3084,  -2.4784],
        [ -8.1648,   7.8791],
        [-11.1208,  10.7353]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.3642,  -7.8846],
        [-11.9670,  11.5132],
        [ -8.9426,   8.5810],
        [ -8.7813,   8.4811],
        [ -0.2865,   0.1228],
        [ -7.6761,   7.4079],
        [ -7.3094,   7.0180],
        [ -3.9419,   3.7283]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.3606,  13.8921],
        [ -8.5208,   8.2206],
        [-11.7814,  11.3979],
        [  6.8273,  -7.2553],
        [  6.2269,  -6.6426],
        [ -8.8176,   8.5410],
        [  4.4568,  -4.7295],
        [  1.5465,  -1.7548]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.7395,  11.3292],
        [ -9.6733,   9.3221],
        [ -7.9485,   7.6393],
        [  5.8890,  -6.2838],
        [ -3.4554,   3.2344],
        [  0.3763,  -0.5134],
        [  7.0074,  -7.4822],
        [-11.0970,  10.6777]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.0133,  -4.2867],
        [ -9.2846,   8.9880],
        [-10.8302,  10.4586],
        [  4.0222,  -4.3022],
        [-11.4423,  11.0895],
        [  3.0427,  -3.2356],
        [ -8.6492,   8.3060],
        [  5.7632,  -6.1572]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7744,   9.3904],
        [ -7.2771,   6.9980],
        [ -2.5538,   2.3599],
        [  5.0840,  -5.3647],
        [  8.2647,  -8.8550],
        [ -0.7603,   0.6088],
        [-10.5744,  10.2077],
        [ -7.4972,   7.2363]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.2511,   7.9458],
        [-10.6597,  10.3370],
        [  8.2400,  -8.8398],
        [ -4.1784,   3.9340],
        [  6.0234,  -6.3748],
        [  0.7342,  -0.9276],
        [-14.2303,  13.7696],
        [  3.8918,  -4.0987]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.5757, -5.9303],
        [-0.9368,  0.7928],
        [ 6.1239, -6.4644],
        [ 4.1855, -4.3917],
        [-9.3807,  9.0396],
        [ 2.1402, -2.2867],
        [-1.0194,  0.8695],
        [ 4.1348, -4.4083]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.1833,   9.8387],
        [  6.8351,  -7.2998],
        [  5.7934,  -6.1722],
        [  6.2865,  -6.7585],
        [-10.9764,  10.5853],
        [  3.0823,  -3.3148],
        [ -3.6102,   3.4049],
        [ -8.4011,   8.0960]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.4516,   8.1323],
        [  6.3339,  -6.7975],
        [  3.8047,  -3.9851],
        [ -5.9944,   5.7425],
        [  1.6988,  -1.8448],
        [ -8.1770,   7.8752],
        [ -4.9984,   4.7488],
        [-10.1430,   9.7663]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.4676, -6.9073],
        [ 3.1455, -3.3449],
        [ 0.2231, -0.3844],
        [-8.6933,  8.4199],
        [ 3.1686, -3.3613],
        [-3.9036,  3.7076],
        [-2.7937,  2.5949],
        [-6.3071,  6.0458]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.5472,   3.3212],
        [  4.8141,  -5.1261],
        [  2.6189,  -2.7982],
        [ -5.6241,   5.3777],
        [-12.2506,  11.9062],
        [  7.0681,  -7.5578],
        [  4.2113,  -4.4445],
        [  4.1162,  -4.4088]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.6593, -3.9298],
        [-5.7014,  5.4219],
        [ 7.6706, -8.2727],
        [ 5.1818, -5.5093],
        [ 2.6704, -2.8566],
        [ 2.4726, -2.6791],
        [ 1.0790, -1.2657],
        [ 3.2743, -3.4739]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.7940, -2.9782],
        [-0.9091,  0.7490],
        [-7.3439,  7.0591],
        [ 7.3574, -7.8250],
        [-0.6857,  0.5314],
        [-2.3645,  2.1672],
        [ 0.9020, -1.0570],
        [ 6.9326, -7.3251]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.1306,  -3.3294],
        [  5.0015,  -5.2569],
        [-14.7093,  14.1738],
        [ -8.9077,   8.5706],
        [-11.1505,  10.8076],
        [  1.9441,  -2.1098],
        [ -1.2027,   1.0294],
        [  0.6187,  -0.8045]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.9704,   9.6537],
        [-12.7047,  12.3332],
        [ -0.3194,   0.1530],
        [ -1.2005,   1.0264],
        [ -8.7403,   8.4395],
        [ -5.1841,   4.9487],
        [  2.2153,  -2.4230],
        [  4.7780,  -5.0857]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.7385, -2.9684],
        [-7.6049,  7.3248],
        [ 5.3268, -5.6828],
        [-8.1548,  7.8648],
        [-8.2627,  7.9707],
        [-0.7208,  0.5706],
        [-5.4618,  5.2352],
        [-2.0931,  1.8801]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.9368,  10.5968],
        [ -9.5919,   9.2625],
        [ -6.9568,   6.6623],
        [  0.0553,  -0.2070],
        [ -8.1182,   7.8055],
        [ -3.0384,   2.8350],
        [  1.4125,  -1.5519],
        [  3.2080,  -3.3851]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.0692,  -0.0920],
        [ -3.5140,   3.2917],
        [-10.7019,  10.3004],
        [  2.9884,  -3.1789],
        [  1.4557,  -1.6043],
        [-12.9195,  12.4716],
        [  6.3553,  -6.7818],
        [ -9.2261,   8.8675]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4181,  -2.5870],
        [  1.8625,  -2.0493],
        [ -0.0848,  -0.0828],
        [-11.7591,  11.3698],
        [ -6.6686,   6.4152],
        [  4.8397,  -5.1362],
        [  6.9371,  -7.3575],
        [ -6.8292,   6.5558]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.7080,  10.2945],
        [ -7.3836,   7.1067],
        [ -4.2428,   4.0296],
        [ -1.5101,   1.3151],
        [  6.5638,  -6.9992],
        [  0.9878,  -1.1480],
        [ -2.7512,   2.5493],
        [-10.3536,   9.9755]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.3097,  6.0457],
        [-8.7425,  8.4756],
        [-9.0365,  8.7393],
        [-4.0168,  3.7906],
        [ 0.6525, -0.8020],
        [-7.4410,  7.1432],
        [-9.9820,  9.6094],
        [ 2.2123, -2.3900]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.4792,   4.2498],
        [  5.8340,  -6.1889],
        [ -7.8425,   7.5705],
        [-10.2853,   9.9258],
        [  1.9647,  -2.1464],
        [-10.3644,  10.0031],
        [-10.0960,   9.7277],
        [ -9.4374,   9.1205]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.2417,  11.8393],
        [  2.0679,  -2.2219],
        [  2.4626,  -2.6865],
        [  6.9833,  -7.4749],
        [-12.3087,  11.8359],
        [ -1.5673,   1.4055],
        [-10.0621,   9.7348],
        [-10.8629,  10.4758]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.9497,   6.6641],
        [ -9.3077,   8.9672],
        [  0.1875,  -0.3370],
        [-10.6152,  10.2903],
        [-10.3016,   9.9581],
        [ -8.7398,   8.4406],
        [ -6.6073,   6.3639],
        [-13.2608,  12.7677]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.1928,   7.8922],
        [-12.3194,  11.9112],
        [ -9.2396,   8.9045],
        [  5.7153,  -6.1235],
        [ -6.9267,   6.6757],
        [-10.6131,  10.2283],
        [ -6.5294,   6.2787],
        [  5.2403,  -5.5850]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.1052,   0.9413],
        [-10.9754,  10.5696],
        [  2.0101,  -2.1889],
        [  2.3015,  -2.4376],
        [  5.9110,  -6.3938],
        [ -3.4099,   3.1935],
        [ -8.4064,   8.1134],
        [ -0.5963,   0.4435]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.3878, -0.5152],
        [-4.9703,  4.6665],
        [ 7.2025, -7.6636],
        [-0.5509,  0.3811],
        [ 7.1603, -7.7224],
        [-7.7396,  7.4634],
        [-7.4750,  7.1859],
        [ 3.1610, -3.3898]], device='cuda:0')
Iteration Acc 0.8750
tensor([0, 1, 0, 1, 0, 1, 1, 0], device='cuda:0')
tensor([0, 1, 0, 0, 0, 1, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.0149,  -6.4309],
        [-13.1611,  12.7392],
        [ -0.9019,   0.7133],
        [  5.7443,  -6.0054],
        [  5.0935,  -5.4863],
        [ -9.1941,   8.8239],
        [ -9.2584,   8.9464],
        [  1.3671,  -1.5262]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.2758,   6.0682],
        [ -8.7504,   8.4845],
        [ -7.4634,   7.1472],
        [-12.1719,  11.7900],
        [  2.7822,  -2.9642],
        [ -1.1460,   0.9996],
        [  4.1946,  -4.3945],
        [ -0.8404,   0.6818]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.4359,  11.0237],
        [  3.6607,  -3.8839],
        [-12.2761,  11.8358],
        [ -4.4471,   4.2035],
        [  3.2997,  -3.4849],
        [  7.7156,  -8.2941],
        [  0.5291,  -0.6891],
        [-13.3249,  13.0010]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.7286,   7.4665],
        [-10.6601,  10.2586],
        [ -8.2556,   7.9602],
        [-10.0809,   9.7069],
        [  5.2948,  -5.7493],
        [  3.2057,  -3.4435],
        [  1.5249,  -1.6899],
        [ -8.9261,   8.5992]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.4986,  -0.6484],
        [-12.6719,  12.2699],
        [  3.6534,  -3.8485],
        [  5.7724,  -6.2440],
        [  0.7293,  -0.8897],
        [ -6.3916,   6.1129],
        [  4.4310,  -4.6854],
        [  1.9274,  -2.0956]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.8570, -1.9873],
        [-8.5259,  8.1450],
        [-8.3947,  8.1000],
        [ 5.0982, -5.3971],
        [ 4.1874, -4.5536],
        [-8.8964,  8.5707],
        [-8.2124,  7.9156],
        [-9.5134,  9.1748]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.2373,  -2.3931],
        [ -3.2984,   3.0844],
        [-11.0792,  10.6710],
        [  3.2066,  -3.4049],
        [-10.6552,  10.2993],
        [ -0.2952,   0.1276],
        [  6.3433,  -6.8335],
        [ -2.3635,   2.1792]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.4669,  11.0923],
        [ -9.5290,   9.1853],
        [  1.8732,  -2.0978],
        [ -5.7942,   5.5559],
        [  3.2206,  -3.4301],
        [  8.8861,  -9.4858],
        [  7.3102,  -7.8904],
        [ -8.7498,   8.4277]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.9806,  -2.1791],
        [ -2.1625,   1.9887],
        [ -5.8407,   5.5724],
        [  4.6784,  -4.9887],
        [-10.8512,  10.4660],
        [ -1.5518,   1.3797],
        [ -7.4447,   7.1611],
        [  3.1950,  -3.4219]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.6934,  -4.9807],
        [ -7.2796,   6.9933],
        [  4.4309,  -4.7713],
        [ -8.5059,   8.1939],
        [  3.5235,  -3.7311],
        [  5.9909,  -6.3785],
        [ -6.4278,   6.1648],
        [-11.0511,  10.6038]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.0883,  11.6444],
        [-10.9697,  10.6479],
        [-13.9397,  13.4893],
        [  0.7569,  -0.9083],
        [  0.1657,  -0.3211],
        [  5.8035,  -6.1462],
        [  5.4865,  -5.8318],
        [-11.6043,  11.1976]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.4790,   0.3071],
        [  1.3018,  -1.4805],
        [-10.1052,   9.7598],
        [  5.1138,  -5.4477],
        [  1.0640,  -1.1935],
        [ -6.9493,   6.7163],
        [  4.2871,  -4.5047],
        [  5.7870,  -6.1635]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.4785e+00, -4.7194e+00],
        [ 1.2270e-01, -2.7084e-01],
        [ 3.9394e+00, -4.2214e+00],
        [-6.6064e+00,  6.3408e+00],
        [ 5.5779e+00, -5.9464e+00],
        [ 1.0167e+00, -1.1663e+00],
        [-1.1801e+01,  1.1378e+01],
        [-2.0485e-01, -7.7845e-03]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.8077,   6.6200],
        [ -3.5461,   3.3043],
        [ -7.5980,   7.3081],
        [-13.9645,  13.5351],
        [  5.1661,  -5.5540],
        [  4.2973,  -4.6124],
        [  2.7895,  -2.9757],
        [  3.3088,  -3.4829]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.0140,   8.7304],
        [  9.5146, -10.3024],
        [  4.1650,  -4.4717],
        [  2.2479,  -2.3797],
        [ -0.9499,   0.7552],
        [  3.7735,  -4.0042],
        [-15.0767,  14.5124],
        [  6.4448,  -6.9044]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.5275,  6.2300],
        [-6.7580,  6.4798],
        [ 5.5563, -5.8947],
        [ 2.5075, -2.7080],
        [-7.1450,  6.8692],
        [-6.5067,  6.2390],
        [ 1.1343, -1.3552],
        [-7.9586,  7.6769]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.7072,   2.5066],
        [-10.4759,  10.0820],
        [ -8.6914,   8.3983],
        [  3.3679,  -3.5998],
        [-10.0317,   9.6837],
        [  3.9176,  -4.1674],
        [  5.2724,  -5.5755],
        [  0.3070,  -0.4499]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.5137,   3.2757],
        [  6.7469,  -7.1886],
        [ -7.5322,   7.2263],
        [-10.8866,  10.4741],
        [-12.3754,  12.0005],
        [  2.1371,  -2.3387],
        [  2.1694,  -2.3312],
        [  4.5155,  -4.7734]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.4436,  -5.7545],
        [ -6.2392,   5.9948],
        [ -8.5356,   8.1997],
        [  4.8845,  -5.1773],
        [-11.1728,  10.8090],
        [  2.0290,  -2.1988],
        [ -9.0225,   8.7303],
        [  3.2306,  -3.4977]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.9970,   5.7455],
        [  4.9866,  -5.2223],
        [  2.9304,  -3.1007],
        [ -9.5038,   9.1988],
        [  4.0150,  -4.2268],
        [  0.1522,  -0.2930],
        [ -8.0060,   7.7211],
        [-12.8875,  12.5320]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.8405,   0.6670],
        [ -7.3529,   7.0769],
        [  0.8043,  -1.0065],
        [-15.8108,  15.3073],
        [  2.8347,  -3.0201],
        [  5.6739,  -6.0613],
        [  4.0728,  -4.3293],
        [ -7.5625,   7.2584]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.3600e-01, -4.1387e-01],
        [-1.3292e+01,  1.2895e+01],
        [ 4.6829e+00, -4.9841e+00],
        [-9.8377e+00,  9.5195e+00],
        [-4.8229e+00,  4.5975e+00],
        [-3.1863e-01,  1.1569e-01],
        [-1.6197e+00,  1.0783e+00],
        [-8.9874e-03, -1.6821e-01]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.5956,  -3.7990],
        [-10.8973,  10.5141],
        [-10.5198,  10.1277],
        [  5.1572,  -5.5795],
        [  8.9741,  -9.5912],
        [  3.2984,  -3.5648],
        [ -2.3606,   2.0298],
        [-13.0526,  12.6389]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.0162, -6.3963],
        [-1.8231,  1.6194],
        [-0.9474,  0.7547],
        [ 2.2320, -2.4708],
        [ 0.9075, -1.0716],
        [-0.8396,  0.6839],
        [-3.3444,  3.1292],
        [ 1.8613, -2.0368]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.8344,  11.3931],
        [  0.7480,  -0.9146],
        [-11.3603,  10.9632],
        [-10.8637,  10.4498],
        [  5.3726,  -5.7458],
        [  1.6155,  -1.7834],
        [  9.1193,  -9.7820],
        [ -6.8851,   6.6226]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.4378,   8.1179],
        [  2.2368,  -2.4170],
        [ -1.9077,   1.7173],
        [  1.2700,  -1.3957],
        [ -9.5460,   9.1913],
        [  4.7809,  -4.9981],
        [ -1.2946,   1.1202],
        [-10.7997,  10.4889]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.9397,  -2.1011],
        [-12.9140,  12.5108],
        [ -2.3219,   2.1219],
        [ -5.9742,   5.7400],
        [ -6.5881,   6.3669],
        [ -7.4105,   7.1290],
        [  7.3108,  -7.7295],
        [ -9.1451,   8.8102]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4292,  -2.5895],
        [  3.5701,  -3.8447],
        [-10.0848,   9.8011],
        [ -8.9838,   8.6894],
        [  5.3451,  -5.6178],
        [ -5.1643,   4.9317],
        [  4.0344,  -4.2562],
        [ -6.8836,   6.6274]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.7225,  -6.0524],
        [  5.8399,  -6.2052],
        [ -3.9552,   3.7397],
        [-13.2497,  12.7797],
        [-15.2818,  14.7565],
        [  4.8741,  -5.2151],
        [ -8.0236,   7.7335],
        [  2.3890,  -2.6150]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.7533,   3.5519],
        [ -4.7576,   4.5343],
        [  2.7890,  -2.9058],
        [ -9.7851,   9.4576],
        [-12.2766,  11.7684],
        [  6.7992,  -7.2766],
        [ -7.4280,   7.1538],
        [ -6.8207,   6.5548]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.3299,  -4.6022],
        [-10.6546,  10.2762],
        [-10.7107,  10.3711],
        [  5.2153,  -5.7061],
        [ -9.6331,   9.3109],
        [ -8.7729,   8.4768],
        [ -3.8262,   3.5943],
        [ -1.0841,   0.9171]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.8140,   5.5467],
        [-11.4024,  11.0041],
        [  0.6493,  -0.7995],
        [ -8.3358,   8.0015],
        [ -7.7208,   7.4067],
        [ -9.3275,   8.9661],
        [  2.1771,  -2.3393],
        [-10.2939,   9.9070]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.8507,  11.4265],
        [ -6.5082,   6.2305],
        [ -9.1248,   8.7881],
        [  5.2991,  -5.6070],
        [-11.5928,  11.1686],
        [ -8.5173,   8.2124],
        [  4.3898,  -4.6115],
        [ -8.8239,   8.5044]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.1900,   7.8535],
        [ -9.8370,   9.5198],
        [-14.6193,  14.1539],
        [ -2.1617,   1.9719],
        [-10.0007,   9.6038],
        [ -0.8453,   0.6809],
        [ -6.2803,   5.9784],
        [ -7.3086,   7.0392]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.5121,  -2.7710],
        [ -1.8789,   1.6963],
        [-10.3584,  10.0015],
        [-10.4890,  10.1208],
        [ -0.1566,  -0.0328],
        [ -8.1833,   7.9862],
        [  5.9091,  -6.3048],
        [-10.7551,  10.3842]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5867,  -4.9620],
        [ -9.7613,   9.4266],
        [  7.7567,  -8.1582],
        [  3.3063,  -3.5633],
        [  1.2490,  -1.4025],
        [  5.9561,  -6.2905],
        [-10.7663,  10.4014],
        [  5.6302,  -5.9185]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.3877,  -4.6466],
        [-13.5865,  13.1046],
        [-10.8794,  10.4730],
        [-10.3334,  10.0340],
        [ -5.8583,   5.5800],
        [ -9.5866,   9.2106],
        [-13.0593,  12.5575],
        [  3.3307,  -3.5423]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.7056,  8.3924],
        [ 5.1042, -5.3667],
        [-4.5042,  4.2550],
        [ 3.6578, -3.8840],
        [-0.6805,  0.5159],
        [ 3.4242, -3.6515],
        [-6.6589,  6.3747],
        [ 0.3155, -0.4655]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.4387,  -6.9119],
        [ -8.5659,   8.2892],
        [  6.3593,  -6.7970],
        [  5.4833,  -5.7860],
        [ -7.1198,   6.8326],
        [ -7.0340,   6.7934],
        [  5.1159,  -5.4794],
        [-11.6849,  11.2796]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.4633,  8.1896],
        [ 0.9251, -1.0875],
        [-4.3413,  4.1001],
        [ 2.1012, -2.2975],
        [-9.0666,  8.7692],
        [ 5.4406, -5.8537],
        [ 2.4972, -2.6756],
        [ 2.2023, -2.3860]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.1205, -6.5275],
        [-1.5849,  1.3939],
        [ 2.7616, -2.9781],
        [-5.4209,  5.1590],
        [-8.0503,  7.7770],
        [ 5.2415, -5.6081],
        [-9.8443,  9.4907],
        [ 1.0896, -1.2321]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.0823,   9.8114],
        [  6.7021,  -7.1287],
        [ -8.1665,   7.8860],
        [  8.1546,  -8.7671],
        [ -4.8346,   4.5699],
        [  4.6729,  -4.9563],
        [ -4.8343,   4.5888],
        [  6.2802,  -6.7117]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.4770,  -5.8600],
        [  5.5743,  -5.9504],
        [ -3.0909,   2.8996],
        [ -9.9589,   9.6311],
        [ -0.7251,   0.5399],
        [  8.1689,  -8.7766],
        [-11.0209,  10.5817],
        [  3.8715,  -4.1117]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.1476e+01,  1.1064e+01],
        [-1.4726e-01,  2.9074e-03],
        [-9.3768e+00,  9.0593e+00],
        [-1.1309e+01,  1.0889e+01],
        [ 6.9661e+00, -7.4018e+00],
        [-4.7802e+00,  4.5598e+00],
        [-2.4171e-01,  5.6593e-02],
        [ 9.1229e-01, -1.0809e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.6629,  -4.9379],
        [  0.8858,  -1.0432],
        [  0.2445,  -0.4038],
        [-12.0148,  11.5548],
        [  1.5570,  -1.7046],
        [  4.9405,  -5.2787],
        [  1.0403,  -1.2085],
        [-11.0768,  10.7404]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7242,   9.3939],
        [ -5.9755,   5.7037],
        [ -8.5098,   8.2346],
        [  3.3081,  -3.5045],
        [ -7.8384,   7.5288],
        [  4.8039,  -5.1258],
        [-12.0864,  11.6785],
        [-10.1925,   9.8325]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.8964,  9.5584],
        [-7.7395,  7.4892],
        [-3.0478,  2.8351],
        [ 3.9560, -4.2278],
        [ 4.1633, -4.3809],
        [-8.6848,  8.3678],
        [-5.4012,  5.1418],
        [-8.2333,  7.8943]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.6114,  14.1690],
        [ -4.0566,   3.8511],
        [  1.2546,  -1.4012],
        [ -9.0629,   8.7296],
        [-10.2437,   9.8868],
        [-13.5871,  13.1292],
        [ -0.7503,   0.5562],
        [ -8.3384,   8.0955]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.2209,   9.8147],
        [  3.2051,  -3.4393],
        [ -9.4795,   9.1055],
        [-11.3995,  10.9925],
        [ -3.7504,   3.5203],
        [  2.9659,  -3.2764],
        [  6.0863,  -6.4261],
        [  7.7311,  -8.2609]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.5230,  -0.6943],
        [ -6.5102,   6.2377],
        [  6.4292,  -6.8091],
        [ -7.4525,   7.1701],
        [-10.0492,   9.6634],
        [-10.1463,   9.8023],
        [ -9.3778,   9.0493],
        [  2.8013,  -2.9582]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 1, 0, 1, 1, 1, 1, 0], device='cuda:0')
tensor([0, 1, 0, 1, 1, 1, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.9120,   9.5398],
        [  6.9858,  -7.4797],
        [-14.0775,  13.5763],
        [  1.1433,  -1.2895],
        [  5.5045,  -5.8823],
        [  0.2318,  -0.3709],
        [ -9.4354,   9.1136],
        [  2.5363,  -2.7195]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.0270, -0.1630],
        [ 4.5002, -4.7726],
        [-9.7006,  9.3617],
        [ 5.1537, -5.4920],
        [ 1.4625, -1.6487],
        [-2.5309,  2.3533],
        [-7.5577,  7.2378],
        [ 6.0177, -6.4148]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.5831,  8.2485],
        [-1.6271,  1.4313],
        [-9.8844,  9.5689],
        [-5.2727,  4.9986],
        [-7.6224,  7.3050],
        [-9.9223,  9.6284],
        [ 4.0107, -4.2611],
        [-8.6213,  8.3054]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.4905,  -4.6793],
        [  6.4788,  -6.9427],
        [  5.6077,  -5.9780],
        [  7.6158,  -8.1606],
        [ -1.2704,   1.1081],
        [-10.4695,  10.1020],
        [-14.8885,  14.4340],
        [  6.6185,  -7.0237]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.9642,   8.6669],
        [  6.5280,  -6.9650],
        [-14.3803,  13.8598],
        [  4.1582,  -4.3822],
        [  6.1909,  -6.6284],
        [  5.5574,  -5.9042],
        [ -2.2159,   2.0187],
        [  4.1115,  -4.3994]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.3269,  -5.6803],
        [ -6.5016,   6.2281],
        [ -8.5474,   8.1572],
        [ -5.0325,   4.7523],
        [-14.5464,  14.0355],
        [-12.0470,  11.6413],
        [-13.1790,  12.7526],
        [  6.8946,  -7.3370]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.9005,   6.6161],
        [ -0.5465,   0.3940],
        [-11.6433,  11.3155],
        [  6.7244,  -7.1755],
        [-10.2293,   9.8426],
        [-10.9673,  10.6180],
        [ -0.8087,   0.6224],
        [ -1.2498,   1.0457]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.0930,  -7.5832],
        [  7.7488,  -8.2660],
        [-12.8152,  12.3578],
        [ -7.2625,   7.0352],
        [ -8.0457,   7.7441],
        [-10.0295,   9.7201],
        [ -2.3726,   2.1817],
        [  5.5374,  -5.9363]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.8285,  10.4621],
        [ -2.6357,   2.4317],
        [-10.9940,  10.6399],
        [  6.6120,  -7.0672],
        [ -9.6280,   9.3580],
        [ -5.8623,   5.6159],
        [  7.4083,  -7.9180],
        [ -0.5057,   0.3476]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.5222,   8.2291],
        [-12.9984,  12.5473],
        [-11.7175,  11.3063],
        [  4.7667,  -5.0638],
        [  0.6996,  -0.8638],
        [-12.2241,  11.9018],
        [ -1.7891,   1.5825],
        [  0.5026,  -0.6511]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.4144,  -1.5850],
        [ -9.1510,   8.7806],
        [ -8.2605,   7.9484],
        [ -1.7357,   1.5631],
        [-13.1283,  12.6823],
        [-10.0578,   9.7122],
        [  7.6317,  -8.1680],
        [  7.3128,  -7.8221]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.9232,   9.5645],
        [ -1.2971,   1.1527],
        [ -6.0489,   5.7932],
        [-11.8415,  11.4075],
        [ -9.7158,   9.4002],
        [  1.5386,  -1.7094],
        [ -7.2131,   6.9326],
        [ -5.1921,   4.9557]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.8165,  13.3304],
        [-12.2103,  11.8343],
        [ -9.7045,   9.3419],
        [  6.7493,  -7.1635],
        [ -7.6905,   7.4147],
        [  4.4992,  -4.7056],
        [ -4.2768,   4.0460],
        [ -8.1393,   7.8628]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.7326, -6.0826],
        [-0.4876,  0.3296],
        [ 3.7581, -4.0092],
        [-8.8461,  8.5513],
        [ 1.9746, -2.1343],
        [-9.0987,  8.7392],
        [ 4.3800, -4.6385],
        [ 1.1926, -1.3786]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.4279,   7.1660],
        [  3.7440,  -3.9738],
        [ -7.2638,   7.0017],
        [  4.9854,  -5.3078],
        [-12.7891,  12.4068],
        [-12.2465,  11.8199],
        [  3.4543,  -3.7369],
        [  3.0247,  -3.2290]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.1228,   9.7563],
        [ -3.0187,   2.8107],
        [ -9.1725,   8.8682],
        [-11.5219,  11.1497],
        [ -0.7576,   0.5805],
        [-10.5544,  10.2166],
        [-11.0848,  10.7168],
        [  7.3786,  -7.8865]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.7547,  -7.2012],
        [-11.8324,  11.4404],
        [  3.9374,  -4.1314],
        [  6.1258,  -6.4476],
        [ -7.7999,   7.5096],
        [  0.9802,  -1.1318],
        [  6.7867,  -7.3455],
        [  8.5806,  -9.2663]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.5894, -3.7556],
        [ 0.4462, -0.6007],
        [ 1.7395, -1.9036],
        [-4.8399,  4.6013],
        [-3.3952,  3.1854],
        [ 4.1012, -4.3357],
        [ 3.5755, -3.7491],
        [ 3.4026, -3.5794]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.4448,   8.1559],
        [-11.4332,  11.0232],
        [-12.2206,  11.7883],
        [-11.9867,  11.4676],
        [-10.4023,  10.0649],
        [-10.7660,  10.3406],
        [  0.8767,  -1.0384],
        [  1.7962,  -1.9725]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0611,   7.7254],
        [  3.6028,  -3.7968],
        [  8.1682,  -8.6988],
        [  2.2163,  -2.3787],
        [  3.2556,  -3.4790],
        [-11.9353,  11.5374],
        [  5.0903,  -5.4014],
        [-13.6191,  13.1640]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.6546,  -4.9678],
        [-10.7125,  10.3606],
        [  3.1953,  -3.3904],
        [  4.8388,  -5.1285],
        [  1.3044,  -1.4586],
        [ -7.7103,   7.3638],
        [ -4.1993,   3.8951],
        [  3.7034,  -3.9435]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.2889,   1.0732],
        [ -8.6054,   8.3250],
        [  8.2973,  -8.9181],
        [ -3.2686,   3.1111],
        [-11.1224,  10.7497],
        [-12.4834,  12.0288],
        [ -7.8471,   7.5432],
        [-13.5493,  13.1470]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.7592,  -4.0041],
        [  4.5772,  -4.7674],
        [ -9.2270,   8.9199],
        [ -9.6054,   9.2587],
        [  3.5925,  -3.8000],
        [-10.0612,   9.7613],
        [-12.4523,  11.9989],
        [  5.5967,  -5.9495]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.0302,   5.7112],
        [ -2.9519,   2.7477],
        [-10.7432,  10.3833],
        [  9.1681,  -9.9202],
        [  5.8151,  -6.2027],
        [ -7.4307,   7.1509],
        [  4.8091,  -5.0512],
        [  7.3196,  -7.8787]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.7110,   4.4422],
        [-10.2204,   9.8933],
        [ -6.0835,   5.8437],
        [ -6.6399,   6.3987],
        [  6.8853,  -7.4250],
        [  6.1842,  -6.6121],
        [ -9.9527,   9.6207],
        [ -3.9258,   3.6839]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.9796,  9.6322],
        [-1.3582,  1.1844],
        [-6.1603,  5.9343],
        [ 4.7866, -5.0868],
        [-4.3770,  4.1395],
        [-2.0590,  1.8565],
        [-0.6446,  0.4282],
        [-2.3823,  2.2040]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.0014,  -3.2096],
        [  2.7323,  -2.9423],
        [  5.2415,  -5.5925],
        [-12.1829,  11.6997],
        [  3.4195,  -3.6540],
        [-14.0360,  13.5799],
        [  5.3619,  -5.6745],
        [ -8.8197,   8.6037]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.6832,  -0.8494],
        [ -4.3897,   4.1678],
        [ -8.1395,   7.8115],
        [  2.9846,  -3.1800],
        [ 10.0586, -10.8421],
        [ -2.8845,   2.6746],
        [ -9.8547,   9.4917],
        [ -6.1665,   5.8755]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.6168,  7.3410],
        [-6.8096,  6.5239],
        [ 1.0307, -1.1958],
        [ 6.3019, -6.6972],
        [-9.9035,  9.5753],
        [-7.0326,  6.7574],
        [ 0.6598, -0.7936],
        [ 7.8474, -8.4115]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.4633,   9.1333],
        [  1.0218,  -1.1417],
        [  7.4738,  -8.0345],
        [-13.9038,  13.3467],
        [ -3.7557,   3.5332],
        [  3.7650,  -4.1634],
        [ -5.1437,   4.8889],
        [  5.7075,  -6.0930]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.1623,   4.9049],
        [  6.7742,  -7.2899],
        [  5.1445,  -5.4613],
        [ -2.8076,   2.5998],
        [ -7.8265,   7.5210],
        [  5.9515,  -6.2781],
        [-11.1888,  10.7821],
        [  4.3221,  -4.5656]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  8.7300,  -9.4198],
        [ -6.2353,   5.9717],
        [ -8.3940,   8.0722],
        [-13.3575,  12.8407],
        [  5.2411,  -5.5395],
        [  2.2904,  -2.4387],
        [ -2.1259,   1.9231],
        [ -4.8765,   4.6308]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.7682,  10.4712],
        [  5.4969,  -5.8436],
        [  8.6363,  -9.3386],
        [  1.2080,  -1.3530],
        [  1.0759,  -1.2159],
        [  4.4356,  -4.7234],
        [ -8.6610,   8.3314],
        [-10.0226,   9.6725]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4032,   6.1307],
        [-11.5089,  11.0935],
        [ -3.5307,   3.2990],
        [ -6.5443,   6.2768],
        [-12.0300,  11.6731],
        [ -6.6347,   6.3603],
        [  7.0657,  -7.4833],
        [ -7.4728,   7.2076]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.7777,  -5.0580],
        [ -5.8231,   5.5308],
        [-11.7082,  11.3465],
        [-10.0410,   9.7165],
        [ -0.5441,   0.3657],
        [  1.2387,  -1.3783],
        [ -2.7107,   2.5235],
        [ -0.0396,  -0.1749]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.2070,  -1.3722],
        [  3.3527,  -3.5412],
        [ -0.6045,   0.4453],
        [ -6.0500,   5.8108],
        [-11.1282,  10.7050],
        [ -9.5903,   9.3240],
        [ -8.5674,   8.2547],
        [  7.2726,  -7.7363]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7799,   9.4475],
        [ -3.4712,   3.2506],
        [ -6.4129,   6.1633],
        [  6.2045,  -6.6030],
        [-10.3354,   9.9951],
        [  1.9482,  -2.1261],
        [-11.9032,  11.5364],
        [ -7.5741,   7.2911]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.0342,  -5.3299],
        [  0.6072,  -0.7610],
        [ -1.2256,   1.0439],
        [ -7.5458,   7.2354],
        [-13.2675,  12.8805],
        [  2.8447,  -3.0303],
        [  2.0994,  -2.2707],
        [ -2.5049,   2.3066]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.4063, -6.7796],
        [-9.3449,  9.0366],
        [ 0.1887, -0.3466],
        [-2.8385,  2.6224],
        [-6.4881,  6.2278],
        [-5.4431,  5.2564],
        [-7.7736,  7.4845],
        [ 2.1253, -2.3138]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.6105,  8.3192],
        [-2.0654,  1.8747],
        [ 6.3041, -6.7077],
        [ 3.8003, -4.0331],
        [-8.4471,  8.1670],
        [ 2.2541, -2.4289],
        [ 6.2018, -6.6797],
        [-1.0901,  0.9094]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1179,   8.7740],
        [ -6.4678,   6.2422],
        [ -5.3902,   5.1450],
        [-10.2228,   9.8916],
        [  4.0017,  -4.2339],
        [  0.7705,  -0.9421],
        [-10.0942,   9.7562],
        [  7.3816,  -7.9614]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.4347,   1.2540],
        [  2.8378,  -2.9908],
        [  7.6657,  -8.1718],
        [  3.3879,  -3.6322],
        [ -3.2323,   3.0250],
        [-10.1101,   9.6992],
        [ -9.7885,   9.4528],
        [-10.8290,  10.4193]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.2561,  -1.4437],
        [ -8.5953,   8.2100],
        [  0.2292,  -0.3933],
        [  4.4414,  -4.7227],
        [  5.3392,  -5.6715],
        [ -1.8841,   1.7069],
        [-13.3157,  12.8534],
        [-12.3282,  11.8746]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.0001,   6.7387],
        [ -9.5850,   9.2369],
        [  2.1528,  -2.3599],
        [  3.7188,  -3.9294],
        [-12.2385,  11.7290],
        [ -4.3158,   4.1026],
        [  2.4137,  -2.5888],
        [ -8.7205,   8.3876]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.3876,  -0.5838],
        [-14.6010,  14.1052],
        [-10.9514,  10.5387],
        [-14.8484,  14.3286],
        [  4.2018,  -4.4848],
        [-11.3899,  11.0217],
        [  0.8043,  -0.9971],
        [ -8.3662,   8.0797]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.6939,  -2.8501],
        [  4.2478,  -4.5101],
        [ -5.0637,   4.8227],
        [ -9.5939,   9.3067],
        [  7.0194,  -7.5754],
        [  0.2559,  -0.3917],
        [ -0.2286,   0.0290],
        [-11.3405,  10.9010]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.0707, -6.4105],
        [ 1.9550, -2.1425],
        [-2.7447,  2.5428],
        [-4.4768,  4.2457],
        [ 2.1749, -2.3491],
        [-0.5579,  0.3792],
        [-0.2178,  0.0818],
        [-5.2167,  4.9716]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.3999,  10.9880],
        [  6.2092,  -6.6074],
        [ -5.3025,   5.0382],
        [ -5.6957,   5.4323],
        [ -0.7970,   0.6316],
        [  5.9152,  -6.3768],
        [  3.9295,  -4.1753],
        [-12.1707,  11.7849]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4304,   6.1538],
        [ -8.0631,   7.7390],
        [ -5.9509,   5.7251],
        [ -5.5997,   5.3298],
        [  2.8142,  -3.0731],
        [  0.4032,  -0.5201],
        [  0.7898,  -0.9464],
        [-11.3939,  11.0207]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.1946,   7.8968],
        [-10.8268,  10.5373],
        [ -1.2394,   1.0671],
        [  5.5542,  -5.8935],
        [-10.4915,  10.1434],
        [  0.2150,  -0.3795],
        [ -8.3412,   8.0480],
        [ -0.7452,   0.5974]], device='cuda:0')
Iteration Acc 0.8750
tensor([1, 1, 1, 0, 1, 0, 1, 1], device='cuda:0')
tensor([1, 1, 0, 0, 1, 0, 1, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.8097,   6.5148],
        [  5.4431,  -5.7923],
        [-11.8139,  11.3534],
        [ -6.8480,   6.5653],
        [  6.2102,  -6.5978],
        [ -4.5023,   4.2654],
        [-13.4022,  12.9803],
        [  2.2883,  -2.4755]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.8214,   6.5398],
        [  3.6874,  -3.8720],
        [  3.6082,  -3.8271],
        [ -4.3634,   4.1135],
        [ -6.0212,   5.7793],
        [  4.5822,  -5.0158],
        [  6.2193,  -6.6552],
        [-10.4484,  10.0749]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  9.9109, -10.6548],
        [-10.0790,   9.7596],
        [ -9.6847,   9.3309],
        [  3.3297,  -3.5135],
        [ -0.1575,   0.0335],
        [ -7.5028,   7.2344],
        [ -7.0662,   6.8317],
        [  5.3490,  -5.7579]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-4.6291,  4.3892],
        [-2.7386,  2.4821],
        [-2.3486,  2.1590],
        [ 3.2408, -3.4753],
        [-2.5946,  2.3849],
        [ 2.6331, -2.8353],
        [-3.9008,  3.6626],
        [ 4.0069, -4.3450]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.6282,  10.2896],
        [  5.9562,  -6.3810],
        [-11.5830,  11.2356],
        [  1.4476,  -1.5821],
        [ -8.3933,   8.0412],
        [ -3.6695,   3.4267],
        [ -6.0999,   5.8316],
        [  4.6272,  -4.8999]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.6829,   3.4480],
        [-11.8712,  11.4934],
        [  1.6266,  -1.7870],
        [  1.1563,  -1.3699],
        [ -1.8277,   1.6440],
        [  3.0634,  -3.2750],
        [-11.3706,  11.0062],
        [ -7.2912,   7.0256]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.7282,  10.3608],
        [  4.9950,  -5.2917],
        [-13.4311,  12.9581],
        [  6.1312,  -6.5222],
        [ -7.7969,   7.4697],
        [-10.5924,  10.2416],
        [  0.1914,  -0.3409],
        [  4.2353,  -4.4987]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 8.5475, -9.1664],
        [-7.1115,  6.8472],
        [-5.2445,  4.9917],
        [-1.1852,  0.9855],
        [-8.1009,  7.8446],
        [ 4.9704, -5.2178],
        [-2.8366,  2.6489],
        [ 4.1403, -4.3739]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.4355,   9.1252],
        [  4.8439,  -5.1155],
        [ -4.0323,   3.7873],
        [ -9.5750,   9.2601],
        [  6.0105,  -6.3500],
        [ -9.2397,   8.9031],
        [-12.5164,  12.0338],
        [ -8.0780,   7.7834]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.9965,  10.5911],
        [ -6.1957,   5.9613],
        [  5.6088,  -6.0020],
        [-11.9804,  11.5095],
        [ -1.1653,   0.9855],
        [  2.0123,  -2.1377],
        [ -5.0650,   4.7994],
        [ -5.7814,   5.4948]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7996,   9.4490],
        [-12.5949,  12.1911],
        [ -2.2666,   2.0626],
        [ -3.0239,   2.7948],
        [  5.8264,  -6.2248],
        [-11.4748,  11.0624],
        [ -1.3470,   1.1749],
        [-11.8344,  11.3956]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.3493,   8.0431],
        [ -1.5222,   1.3871],
        [ -4.0431,   3.8774],
        [ -4.3848,   4.1442],
        [-10.6281,  10.2123],
        [ -6.3679,   6.1149],
        [-10.4436,  10.0500],
        [-10.4297,  10.0758]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.2471,   0.0911],
        [ -0.9439,   0.7403],
        [  3.2167,  -3.4550],
        [  6.6175,  -7.0191],
        [  4.5906,  -4.9093],
        [-13.1693,  12.7520],
        [  3.8569,  -4.0948],
        [ -2.6468,   2.4513]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.3572, -1.4772],
        [ 6.3104, -6.7078],
        [-4.0525,  3.8405],
        [-0.6325,  0.4787],
        [ 1.4584, -1.6390],
        [-9.3208,  9.0044],
        [ 1.6908, -1.8980],
        [ 4.5286, -4.7601]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.1522, -0.2870],
        [-6.7222,  6.4723],
        [ 0.5197, -0.6626],
        [-6.2290,  5.9841],
        [-9.8505,  9.5229],
        [-9.8053,  9.4611],
        [ 2.5658, -2.7349],
        [ 1.1875, -1.3583]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4203,  -2.6344],
        [ -6.0802,   5.8105],
        [-10.8741,  10.4650],
        [  5.1578,  -5.4823],
        [-11.0315,  10.6944],
        [  3.0974,  -3.2921],
        [  5.2162,  -5.5400],
        [  5.0881,  -5.4142]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1968,   8.8517],
        [ -9.3499,   8.8774],
        [ -8.8054,   8.5285],
        [-10.8549,  10.4459],
        [  2.4663,  -2.6239],
        [ -7.9195,   7.6301],
        [  6.1664,  -6.6087],
        [  6.0221,  -6.4273]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.6529,  -2.9007],
        [ -9.7879,   9.5047],
        [ -9.3625,   9.0403],
        [-11.1316,  10.7665],
        [ -8.4420,   8.1359],
        [  4.7384,  -4.9727],
        [  2.2716,  -2.4365],
        [-10.3277,   9.9568]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.7620,  -6.1099],
        [-10.3123,   9.9440],
        [ -7.2869,   7.0383],
        [ -9.7390,   9.4580],
        [  6.0542,  -6.5135],
        [  5.3937,  -5.7269],
        [ -9.2425,   8.9342],
        [ -3.4985,   3.3046]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.2217, -6.6500],
        [-7.8662,  7.5787],
        [ 3.4313, -3.6488],
        [-1.2472,  1.0756],
        [-6.7221,  6.4491],
        [-0.1521, -0.0514],
        [ 8.1345, -8.7786],
        [-7.5674,  7.2810]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.2302,   2.0533],
        [ -6.4846,   6.2193],
        [  4.8001,  -5.1027],
        [-16.1135,  15.6707],
        [  6.1269,  -6.4830],
        [ -9.4580,   9.0967],
        [ -6.7398,   6.4450],
        [ -9.0418,   8.7355]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.2589, -5.5707],
        [ 2.7304, -3.0794],
        [ 1.6430, -1.7905],
        [-9.1113,  8.7766],
        [ 0.3544, -0.5034],
        [ 4.3354, -4.6268],
        [ 4.2143, -4.4462],
        [ 7.1197, -7.6614]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.2114,   3.9712],
        [  5.2363,  -5.5734],
        [  2.9265,  -3.1105],
        [  5.1880,  -5.5118],
        [-11.3953,  11.0250],
        [ -2.6576,   2.4299],
        [-12.0418,  11.6149],
        [ -6.1054,   5.8648]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7234,   8.4102],
        [  0.5090,  -0.6256],
        [  5.9188,  -6.2952],
        [ -9.4693,   9.1537],
        [  4.2907,  -4.5398],
        [  8.2384,  -8.8308],
        [ -8.1582,   7.8708],
        [-12.2406,  11.8348]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.4926,   0.3832],
        [  4.4299,  -4.7061],
        [  1.0055,  -1.1572],
        [  1.3029,  -1.4501],
        [ -8.5642,   8.2480],
        [-10.2184,   9.8808],
        [-10.2805,   9.9003],
        [ -5.8602,   5.6287]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.7835,  -0.9241],
        [ -1.1555,   0.9767],
        [ -5.2712,   5.0290],
        [-12.8104,  12.4332],
        [ -3.2839,   3.0887],
        [ -5.4550,   5.1899],
        [ -0.1024,  -0.0251],
        [ -1.2291,   1.0166]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.1793,   3.9628],
        [  3.9989,  -4.2598],
        [-10.3999,  10.0438],
        [ -8.1121,   7.8269],
        [  7.2730,  -7.6432],
        [  1.9406,  -2.0851],
        [ -5.5371,   5.3337],
        [  2.0384,  -2.2161]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-3.7221,  3.5184],
        [-7.8036,  7.5189],
        [-1.3209,  1.1463],
        [ 1.1602, -1.3136],
        [ 4.8026, -5.0726],
        [-7.6838,  7.3908],
        [ 1.1593, -1.3284],
        [-8.5588,  8.2569]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.4431,   0.2877],
        [ -1.6567,   1.4601],
        [ -5.7985,   5.5211],
        [  4.1257,  -4.3847],
        [  0.6095,  -0.7574],
        [ -7.1733,   6.9078],
        [  6.9772,  -7.5388],
        [-10.9272,  10.5071]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7947,   9.4550],
        [  2.3803,  -2.5702],
        [-12.8852,  12.4127],
        [ -1.1014,   0.9248],
        [ -4.1299,   3.9051],
        [ -8.8278,   8.5244],
        [-10.1870,   9.7962],
        [-12.7718,  12.3567]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.6010,  10.2014],
        [  3.8710,  -4.1127],
        [-11.1179,  10.7246],
        [  4.8232,  -5.1180],
        [ -9.3708,   9.0297],
        [ -5.8776,   5.6072],
        [  1.5903,  -1.7201],
        [  6.0286,  -6.3916]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.3290,  -1.4778],
        [  4.0049,  -4.2453],
        [-15.4123,  14.8320],
        [  1.3580,  -1.5277],
        [-13.2897,  12.8286],
        [  5.7802,  -6.2201],
        [  8.2262,  -8.7431],
        [  5.4319,  -5.6886]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.0322,  12.6399],
        [ -9.3837,   9.0735],
        [  2.8080,  -3.0373],
        [-10.3803,  10.0361],
        [-12.0843,  11.6235],
        [  2.1445,  -2.2932],
        [  3.5952,  -3.8464],
        [ -2.4005,   2.2068]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.9910, -3.2694],
        [-8.9336,  8.6025],
        [-8.9734,  8.6935],
        [ 4.0291, -4.2871],
        [-5.2412,  5.0051],
        [-0.7383,  0.5580],
        [-8.7384,  8.4246],
        [-7.8245,  7.5266]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.1922,   7.8864],
        [  3.7839,  -3.9902],
        [  6.6250,  -7.1019],
        [  1.5338,  -1.7767],
        [  6.6060,  -7.0659],
        [-11.5253,  11.0871],
        [  5.3161,  -5.5970],
        [ -0.2433,   0.0487]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.5550,   1.3627],
        [ -6.5047,   6.2176],
        [  6.7496,  -7.1718],
        [-11.5937,  11.2323],
        [ -5.8740,   5.6196],
        [ -7.7855,   7.5128],
        [ -2.5664,   2.3219],
        [ -1.6316,   1.4643]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.3504,  8.0086],
        [-7.7273,  7.4666],
        [-8.9696,  8.6607],
        [ 6.1675, -6.5237],
        [ 1.9746, -2.1568],
        [ 0.7313, -0.8853],
        [-8.6002,  8.2858],
        [ 2.6808, -2.8516]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 8.6254, -9.1912],
        [-5.3874,  5.1603],
        [-8.0497,  7.6943],
        [ 0.5752, -0.7401],
        [-9.9946,  9.6863],
        [ 6.8827, -7.3721],
        [ 6.4464, -6.9020],
        [ 7.2400, -7.7699]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.2099, -4.4471],
        [ 6.0879, -6.4751],
        [ 8.0817, -8.6128],
        [-0.3143,  0.1416],
        [-3.5002,  3.3109],
        [-8.5189,  8.2093],
        [ 3.0593, -3.2861],
        [ 1.0670, -1.2181]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.1564,  10.7301],
        [  3.6080,  -3.8393],
        [  1.3706,  -1.5090],
        [  0.5792,  -0.7152],
        [  3.9739,  -4.1882],
        [ -9.0760,   8.7410],
        [ -7.2118,   6.9543],
        [ -9.2867,   8.9867]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.4777,   9.1518],
        [ -5.0682,   4.8431],
        [  5.6643,  -6.0039],
        [  6.9821,  -7.4293],
        [-11.5337,  11.1543],
        [ -1.1003,   0.8976],
        [-10.2576,   9.9245],
        [  4.6652,  -4.9459]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.7784,  7.4593],
        [ 5.4420, -5.8434],
        [ 8.4738, -9.0256],
        [ 4.3105, -4.5872],
        [ 6.7330, -7.1508],
        [ 8.2211, -8.8153],
        [-8.9058,  8.5746],
        [-4.6645,  4.4334]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.8644,  12.3888],
        [ -7.1720,   6.8983],
        [  5.5471,  -5.9533],
        [ -6.3687,   6.1111],
        [  2.9797,  -3.1570],
        [ -8.5805,   8.2488],
        [-11.7671,  11.3585],
        [ -9.5470,   9.2698]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.0990,  -6.5005],
        [-10.4335,  10.0696],
        [ -7.9009,   7.6153],
        [  6.4811,  -6.8859],
        [ -4.9667,   4.7199],
        [ -6.3124,   6.0529],
        [ -9.9611,   9.6017],
        [  3.4206,  -3.6460]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.1655, -6.6613],
        [-3.2316,  3.0213],
        [-8.1934,  7.9055],
        [ 5.0529, -5.3438],
        [-0.9126,  0.7549],
        [-9.4642,  9.1304],
        [-0.0166, -0.1304],
        [-4.8429,  4.6107]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.6484,  -3.8697],
        [ -8.6275,   8.3125],
        [  1.1493,  -1.3453],
        [  3.6464,  -3.8853],
        [  0.4142,  -0.5709],
        [  5.1578,  -5.4742],
        [  4.2405,  -4.4609],
        [-12.6699,  12.3032]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.6007,   7.3371],
        [  3.1388,  -3.3224],
        [ -0.9195,   0.7564],
        [ -3.7597,   3.5458],
        [  2.4304,  -2.6051],
        [  1.7199,  -1.8868],
        [-12.7617,  12.3180],
        [ -2.0439,   1.8680]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.7173,   8.4383],
        [-11.1352,  10.7536],
        [-12.7338,  12.2010],
        [  1.8285,  -1.9885],
        [ -9.7223,   9.4067],
        [-10.8005,  10.3495],
        [  6.1532,  -6.5741],
        [ -6.9374,   6.7095]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.0957,   8.7789],
        [ -6.1365,   5.8842],
        [  0.0292,  -0.1867],
        [ -5.8970,   5.6384],
        [-12.5095,  12.0586],
        [-10.1237,   9.7511],
        [-12.2276,  11.7804],
        [  4.2656,  -4.5308]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.3464,  -0.4842],
        [ -4.1362,   3.9103],
        [  6.7095,  -7.2118],
        [  1.9187,  -2.0535],
        [  4.9237,  -5.2547],
        [-11.9759,  11.5364],
        [  5.9484,  -6.3558],
        [ -7.7401,   7.4268]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 1, 0, 0, 0, 1, 0, 1], device='cuda:0')
tensor([0, 1, 0, 0, 0, 1, 0, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.4642,   3.2546],
        [ -5.7002,   5.4873],
        [  1.9290,  -2.1178],
        [ -9.8703,   9.5604],
        [ -5.1672,   4.8997],
        [-12.6762,  12.2429],
        [  1.0315,  -1.1970],
        [  3.3720,  -3.7360]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.2843,   9.8903],
        [  5.0509,  -5.3891],
        [  5.6318,  -6.0198],
        [ -7.8447,   7.5464],
        [  7.7336,  -8.3105],
        [  0.9845,  -1.1835],
        [  0.3780,  -0.5679],
        [ -9.8818,   9.5295]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.1938,   8.8020],
        [ -8.9618,   8.6412],
        [-11.9929,  11.5501],
        [-11.1599,  10.7678],
        [ -6.8742,   6.5740],
        [ -7.9188,   7.6586],
        [-13.2107,  12.8176],
        [  2.0295,  -2.1788]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.9235e+00,  8.6033e+00],
        [-9.5602e+00,  9.2630e+00],
        [-1.4713e+01,  1.4114e+01],
        [-8.9030e+00,  8.5818e+00],
        [-3.5707e+00,  3.3524e+00],
        [-7.9983e+00,  7.7091e+00],
        [-5.1986e+00,  4.9491e+00],
        [-1.7898e-01, -2.2268e-03]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.1152, -4.3785],
        [-9.9129,  9.5562],
        [-8.6194,  8.3445],
        [-8.1966,  7.8949],
        [-9.3314,  9.0097],
        [ 0.4648, -0.6064],
        [-6.6804,  6.4215],
        [ 3.7881, -4.0137]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.2803,  12.7730],
        [-10.8344,  10.4675],
        [  6.2081,  -6.6061],
        [ -4.6432,   4.4054],
        [ -7.9598,   7.6819],
        [-10.6082,  10.2709],
        [ -9.1172,   8.7886],
        [ -1.0281,   0.8632]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.4948, -8.0906],
        [-9.6068,  9.2529],
        [ 7.6676, -8.2507],
        [ 2.8163, -3.0086],
        [ 4.7473, -5.0492],
        [-9.2334,  8.9757],
        [-4.8261,  4.5925],
        [-9.9290,  9.5585]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.0861, -6.5613],
        [ 2.4212, -2.5809],
        [-4.2367,  4.0344],
        [ 2.0098, -2.4193],
        [ 5.1398, -5.4733],
        [ 2.1358, -2.2894],
        [ 4.6150, -4.9343],
        [ 3.8836, -4.0946]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.5072,  -0.6556],
        [  3.2742,  -3.5198],
        [ -7.2156,   6.9413],
        [  6.8197,  -7.2919],
        [  5.5934,  -5.9918],
        [  7.3554,  -7.8029],
        [-10.0840,   9.7312],
        [  3.8712,  -4.0772]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.5061,   3.2834],
        [ -0.7989,   0.6239],
        [ -8.0464,   7.7595],
        [-14.7203,  14.2175],
        [-10.3819,  10.0285],
        [ -4.9311,   4.6696],
        [ -6.7969,   6.5020],
        [-12.3801,  11.9102]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.5648,  -3.7400],
        [ -6.5940,   6.3022],
        [ -6.5359,   6.2584],
        [-10.8109,  10.5182],
        [  8.7575,  -9.4415],
        [ -5.9347,   5.6865],
        [  3.8536,  -4.0810],
        [  4.7153,  -5.0770]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.1987,  10.7838],
        [-11.1200,  10.7187],
        [ -8.8977,   8.6198],
        [  0.4509,  -0.6264],
        [ -9.9664,   9.6069],
        [ -3.7399,   3.5235],
        [  3.6692,  -3.8537],
        [  3.8226,  -4.0431]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.5732,   8.2902],
        [-10.3745,  10.0260],
        [-10.7122,  10.2982],
        [ -9.6325,   9.3366],
        [  6.3318,  -6.7704],
        [ -7.1728,   6.8798],
        [ -7.7884,   7.5103],
        [  5.5065,  -5.7953]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.9334,  12.4683],
        [ -9.1500,   8.7965],
        [ -9.0762,   8.7402],
        [ -0.7605,   0.6097],
        [-12.0514,  11.6170],
        [ -8.6225,   8.3467],
        [-11.6269,  11.2339],
        [ -5.4021,   5.1575]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.5284,  10.1319],
        [  5.0800,  -5.3780],
        [ -8.3156,   8.0632],
        [  2.7362,  -2.9342],
        [  6.7151,  -7.2029],
        [  3.1405,  -3.3405],
        [-11.4623,  11.0915],
        [ -9.6024,   9.2787]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6566,  -5.9845],
        [-12.7052,  12.2689],
        [ -6.6925,   6.4218],
        [ -6.1473,   5.8915],
        [  2.1975,  -2.4871],
        [ -3.4109,   3.1922],
        [ -7.5085,   7.2058],
        [  4.1337,  -4.3696]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.3880,  -4.6711],
        [  8.0783,  -8.6710],
        [  0.7616,  -0.9080],
        [-13.3829,  12.8927],
        [ -4.0847,   3.8611],
        [ -0.1345,  -0.0280],
        [-10.6282,  10.2454],
        [  5.2288,  -5.5092]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.1612, -0.3149],
        [-6.9393,  6.6908],
        [ 6.4829, -6.9280],
        [ 3.1994, -3.4068],
        [ 0.1989, -0.3425],
        [ 1.7909, -1.9502],
        [-5.5783,  5.3306],
        [-9.8324,  9.4604]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.7517,   1.5454],
        [ -6.8516,   6.5893],
        [  6.2550,  -6.6072],
        [  8.5375,  -9.1611],
        [ -0.2254,   0.0785],
        [  7.0992,  -7.6663],
        [ -3.5820,   3.3560],
        [-13.8237,  13.3351]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.2992e+00,  1.1260e+00],
        [-6.4735e+00,  6.2130e+00],
        [-1.0885e+01,  1.0507e+01],
        [-3.5999e-03, -1.5963e-01],
        [ 6.8591e+00, -7.3835e+00],
        [ 3.0611e+00, -3.2143e+00],
        [-9.8244e+00,  9.4931e+00],
        [-1.0658e+01,  1.0236e+01]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1264,  11.6970],
        [ -1.1271,   0.9559],
        [  6.9587,  -7.4211],
        [  5.6903,  -6.1129],
        [ -2.5061,   2.3138],
        [  7.8523,  -8.3340],
        [ -2.0616,   1.8637],
        [  6.1767,  -6.5171]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.9090,   8.6298],
        [ -8.4676,   8.1574],
        [  3.1468,  -3.3692],
        [-11.4976,  11.0867],
        [  0.3904,  -0.5481],
        [ -2.1373,   1.9218],
        [ -9.6013,   9.2838],
        [ -6.9293,   6.6173]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.6404,  -2.8076],
        [-11.6444,  11.2753],
        [ -9.2615,   8.9420],
        [ -5.0099,   4.7653],
        [-13.7428,  13.2965],
        [  0.8827,  -1.0266],
        [ -2.7630,   2.5535],
        [  2.6188,  -2.7803]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1130,  11.7506],
        [ -7.8369,   7.5512],
        [ -9.1267,   8.7731],
        [ -1.3294,   1.1721],
        [ -6.1299,   5.8504],
        [  6.0062,  -6.3279],
        [  3.7771,  -4.0054],
        [  2.3978,  -2.5666]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.3101,  10.9255],
        [  6.6847,  -7.1574],
        [-11.1561,  10.7344],
        [ -7.5686,   7.2829],
        [  8.5567,  -9.2630],
        [-11.0569,  10.6746],
        [  0.3188,  -0.4379],
        [  9.5202, -10.3009]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 4.6623, -4.9443],
        [-9.0204,  8.7644],
        [-5.2257,  4.9799],
        [ 3.5534, -3.7877],
        [ 3.4428, -3.7807],
        [-7.4892,  7.1826],
        [-2.6036,  2.4213],
        [-4.7651,  4.5494]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.7781,  -0.9104],
        [ -9.7184,   9.3328],
        [  0.3174,  -0.5098],
        [  6.2359,  -6.6433],
        [  3.0280,  -3.2345],
        [-11.4768,  11.0712],
        [ -3.6847,   3.4678],
        [  4.5596,  -4.7945]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.8948,  8.5483],
        [-4.2247,  3.9982],
        [-4.8963,  4.6799],
        [ 6.5372, -6.9538],
        [ 5.4959, -5.8097],
        [ 4.2948, -4.5370],
        [ 2.1833, -2.3795],
        [-5.4432,  5.2185]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.4586, -3.6425],
        [ 6.7780, -7.1768],
        [ 2.4352, -2.6056],
        [-0.8669,  0.6911],
        [-4.8542,  4.5998],
        [ 5.7760, -6.1344],
        [ 0.3621, -0.5021],
        [-8.1992,  7.8793]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.8681,  12.4918],
        [  3.2929,  -3.4844],
        [-10.5085,  10.1336],
        [ -1.1072,   0.9306],
        [  0.8151,  -0.9961],
        [  3.3489,  -3.5224],
        [ -5.5083,   5.2703],
        [ -6.1101,   5.8297]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1329,  11.7135],
        [ -1.0084,   0.8438],
        [  4.6544,  -5.0097],
        [  5.2604,  -5.6317],
        [ -0.9684,   0.7959],
        [ -8.8893,   8.5203],
        [ -0.1811,   0.0254],
        [ -3.2953,   3.0925]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.8774,   5.6257],
        [  5.7549,  -6.1708],
        [ -9.8008,   9.4113],
        [ -8.6612,   8.3823],
        [-11.5269,  11.0694],
        [  2.5559,  -2.8321],
        [ -2.4059,   2.1979],
        [  3.7278,  -3.9571]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.8241,   2.6245],
        [  7.3969,  -7.9660],
        [  3.7061,  -3.8943],
        [  3.2333,  -3.4344],
        [ -8.2888,   7.9700],
        [-10.2691,   9.9048],
        [  0.8018,  -0.9297],
        [  3.2178,  -3.4401]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-4.8130,  4.5748],
        [ 0.6729, -0.8327],
        [ 6.3611, -6.7426],
        [ 1.4861, -1.6156],
        [ 4.5209, -4.7414],
        [ 3.3298, -3.5429],
        [-7.4009,  7.1348],
        [-9.8167,  9.4546]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.0371,  -5.4197],
        [ -2.5729,   2.3676],
        [  3.8811,  -4.1244],
        [  3.8278,  -4.1146],
        [-11.1658,  10.8067],
        [-10.2139,   9.8420],
        [-11.9221,  11.5782],
        [-10.5667,  10.2405]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.0119,  5.7285],
        [ 6.1056, -6.5505],
        [-5.7377,  5.4696],
        [ 0.3129, -0.4844],
        [-9.4419,  9.1296],
        [ 0.3130, -0.4816],
        [ 6.6358, -7.0964],
        [-5.7964,  5.5491]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.4721,   0.3054],
        [ -8.1020,   7.8076],
        [-11.7280,  11.3254],
        [  7.8067,  -8.3494],
        [ -4.7984,   4.5623],
        [ -1.1947,   0.9994],
        [ -0.6451,   0.4758],
        [ -6.6796,   6.4044]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.6101,  -6.0294],
        [  0.3701,  -0.5515],
        [  2.9382,  -3.1028],
        [  1.1427,  -1.3336],
        [  2.2406,  -2.4194],
        [ -6.0406,   5.7734],
        [-11.2651,  10.8535],
        [ -0.9502,   0.7937]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  7.2404,  -7.7632],
        [  4.9477,  -5.2732],
        [ -8.9421,   8.6728],
        [  5.0457,  -5.3266],
        [ -8.1637,   7.8447],
        [-10.2517,   9.9195],
        [ -7.1514,   6.8685],
        [  2.1985,  -2.3964]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5125,  -4.7293],
        [  0.4738,  -0.6237],
        [-11.3126,  10.9413],
        [ -3.6318,   3.4139],
        [-11.5495,  11.1713],
        [-10.6679,  10.3039],
        [-11.0033,  10.6458],
        [  4.2721,  -4.6052]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.2880,  5.0505],
        [ 7.3485, -7.8839],
        [-7.5266,  7.3009],
        [-3.9248,  3.6999],
        [-7.5038,  7.2054],
        [ 3.8778, -4.1050],
        [ 2.8363, -3.0343],
        [-5.3956,  5.1475]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.6233,   8.3185],
        [  4.3796,  -4.6576],
        [  2.3621,  -2.5424],
        [ -4.7233,   4.4890],
        [  6.5638,  -6.9316],
        [-13.3524,  12.8890],
        [  1.9989,  -2.1635],
        [ -4.9794,   4.7440]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.5218,   9.1529],
        [-14.0561,  13.6025],
        [  6.6983,  -7.1382],
        [-10.8532,  10.4770],
        [ -1.5440,   1.3449],
        [  1.3366,  -1.5630],
        [-10.5576,  10.1702],
        [  2.6662,  -2.8461]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.5358, -0.7166],
        [-6.2433,  5.9944],
        [ 0.4326, -0.6444],
        [ 1.2659, -1.4189],
        [ 3.7064, -3.9206],
        [ 6.6610, -7.1364],
        [ 7.0715, -7.6772],
        [-9.9886,  9.6784]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.5852,   7.3170],
        [ -1.3526,   1.1966],
        [  1.7588,  -1.9067],
        [-12.8103,  12.3297],
        [ -5.5700,   5.3085],
        [ -8.9692,   8.6183],
        [ -0.2926,   0.1111],
        [  3.2536,  -3.4820]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.1791,   7.8956],
        [-12.8421,  12.3918],
        [ -9.4034,   9.0273],
        [-10.6070,  10.2468],
        [ -6.3556,   6.0704],
        [ -5.0419,   4.8055],
        [-10.0067,   9.6684],
        [  0.1508,  -0.3128]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.8052,  9.4029],
        [-0.3676,  0.2137],
        [ 4.5087, -4.7544],
        [ 8.0125, -8.5603],
        [-7.7715,  7.4865],
        [ 2.0912, -2.2565],
        [-6.4377,  6.1778],
        [-3.1047,  2.8721]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.9217,   5.6670],
        [  4.4175,  -4.6910],
        [ -6.9364,   6.6646],
        [ -7.2832,   6.9915],
        [-10.1816,   9.8082],
        [-11.7366,  11.3529],
        [-12.8714,  12.4571],
        [  6.3042,  -6.7082]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.8154,   8.4684],
        [-10.8512,  10.4929],
        [  6.0319,  -6.3972],
        [  4.3413,  -4.6661],
        [ -7.9351,   7.6217],
        [  1.7205,  -1.8724],
        [  6.1138,  -6.5819],
        [ -2.3484,   2.1500]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-5.2589,  4.9981],
        [ 0.9534, -1.0860],
        [ 1.5315, -1.7005],
        [ 3.1412, -3.3410],
        [ 3.9881, -4.2759],
        [ 4.0372, -4.2673],
        [-6.8717,  6.6117],
        [-8.5288,  8.2099]], device='cuda:0')
Iteration Acc 0.8750
tensor([1, 0, 0, 0, 0, 0, 1, 1], device='cuda:0')
tensor([0, 0, 0, 0, 0, 0, 1, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.2492,   4.9753],
        [  3.8603,  -4.1017],
        [-12.2800,  11.8660],
        [-12.7106,  12.2788],
        [-10.0962,   9.7091],
        [ -2.3765,   2.1740],
        [-11.0623,  10.7270],
        [ -8.5754,   8.2416]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.4111,  -0.5646],
        [ -6.1367,   5.8725],
        [ -0.1076,  -0.0422],
        [-11.8718,  11.4819],
        [  8.1208,  -8.7027],
        [-13.5297,  12.9834],
        [-11.3165,  10.9096],
        [  4.3462,  -4.5810]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  8.1210,  -8.6970],
        [  1.9239,  -2.1128],
        [  4.6379,  -4.9035],
        [ -9.0231,   8.7456],
        [-10.8523,  10.4443],
        [ -1.2030,   1.0385],
        [-12.0250,  11.6557],
        [  0.1762,  -0.3060]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.7180,  13.3076],
        [-11.1283,  10.7325],
        [ -7.0798,   6.8300],
        [  1.8966,  -2.0824],
        [  2.1699,  -2.2949],
        [ -8.7112,   8.4145],
        [  8.5488,  -9.2285],
        [ -9.7503,   9.3854]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.0864,   8.7125],
        [  5.6863,  -6.0816],
        [  0.2455,  -0.3761],
        [ -7.6483,   7.3455],
        [ -8.7368,   8.4282],
        [ -9.6010,   9.2632],
        [  5.5373,  -5.9198],
        [-12.1713,  11.7237]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.0623,   7.7544],
        [-11.0501,  10.6307],
        [-12.0050,  11.5443],
        [  4.0772,  -4.3062],
        [-14.3313,  13.8136],
        [  2.2076,  -2.4170],
        [-11.1458,  10.7291],
        [-13.1598,  12.7141]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.9733,  1.7588],
        [ 4.8101, -5.0342],
        [-8.1900,  7.8888],
        [ 5.2049, -5.4634],
        [ 1.7508, -1.8827],
        [ 4.7720, -5.0481],
        [ 2.5188, -2.6735],
        [ 6.3745, -6.8302]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.3818,  -0.5468],
        [ -8.7776,   8.4592],
        [ -7.5324,   7.2398],
        [  1.1069,  -1.2736],
        [ -2.0944,   1.9101],
        [ -4.9799,   4.6954],
        [-12.2136,  11.8080],
        [  5.1477,  -5.4174]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.8728,  -3.0836],
        [-15.2139,  14.6484],
        [ -7.4013,   7.1233],
        [-11.5729,  11.1638],
        [  3.0274,  -3.2307],
        [-10.4682,  10.1181],
        [ -6.5579,   6.3292],
        [ -5.0163,   4.7577]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-8.2846,  7.9784],
        [-5.9330,  5.7061],
        [ 5.3403, -5.7048],
        [-0.8849,  0.7115],
        [ 7.1692, -7.6521],
        [ 0.3345, -0.5482],
        [-2.0688,  1.8413],
        [ 7.4032, -7.8493]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.0647,  -3.2459],
        [  2.2334,  -2.4189],
        [ -8.3021,   7.9993],
        [  3.7815,  -4.1593],
        [-10.3862,  10.0026],
        [ -2.4022,   2.2057],
        [  1.2809,  -1.4493],
        [  6.4754,  -6.8718]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.7195,   9.3941],
        [  2.3603,  -2.5251],
        [ -5.4300,   5.1726],
        [  6.5097,  -6.9587],
        [-11.1100,  10.7010],
        [ -1.9811,   1.8014],
        [  2.8275,  -3.0070],
        [ -1.3630,   1.1873]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -1.5940,   1.4122],
        [-12.4147,  11.9573],
        [ -1.2942,   1.1188],
        [ -2.1986,   2.0107],
        [ -6.8195,   6.5648],
        [  5.7178,  -6.0419],
        [  6.2448,  -6.6482],
        [  2.4269,  -2.5848]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.6080,   5.3650],
        [-10.5978,  10.2340],
        [  5.3957,  -5.7761],
        [ -1.8924,   1.6998],
        [  6.5071,  -6.9611],
        [ -6.9644,   6.6500],
        [ -2.0903,   1.8943],
        [ -7.9089,   7.6406]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.2781,   4.0570],
        [-11.4198,  11.0340],
        [ -3.5192,   3.3104],
        [-12.1390,  11.6694],
        [ -3.8056,   3.5659],
        [-11.1913,  10.7777],
        [-13.4286,  13.0096],
        [ -0.5137,   0.3594]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.1376,  -5.4226],
        [ -5.4998,   5.2579],
        [-12.9720,  12.5904],
        [ -5.6162,   5.3856],
        [ -8.5590,   8.2772],
        [  3.1164,  -3.3294],
        [-11.5558,  11.1624],
        [  5.9567,  -6.3116]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.1448,  -0.2609],
        [  6.9847,  -7.4227],
        [-11.4102,  11.0055],
        [  2.1113,  -2.2801],
        [-11.5129,  11.1151],
        [  5.4185,  -5.7588],
        [  2.2730,  -2.4637],
        [  3.5023,  -3.7326]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.6056,   8.2297],
        [ -6.8591,   6.5851],
        [  4.6908,  -4.9878],
        [ -3.5365,   3.3383],
        [ -3.9420,   3.7102],
        [ -6.8546,   6.5928],
        [ -6.3948,   6.1441],
        [-12.3316,  11.9425]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 5.5921, -6.0121],
        [-1.5599,  1.3886],
        [ 1.6735, -1.8606],
        [ 3.8481, -4.0847],
        [-6.3988,  6.1272],
        [ 3.5696, -3.8353],
        [ 1.1435, -1.3018],
        [ 1.4191, -1.5711]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.1903,   6.9045],
        [ -8.5943,   8.2053],
        [ -3.2930,   3.0867],
        [  5.0294,  -5.3086],
        [ -8.0220,   7.7787],
        [-10.4470,  10.0258],
        [ -3.6929,   3.4743],
        [  0.1574,  -0.3309]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.2127,   4.9570],
        [ -0.5348,   0.3553],
        [-12.4339,  12.0642],
        [ -9.3399,   9.0200],
        [  5.4465,  -5.8181],
        [  5.7635,  -6.2366],
        [ -0.2387,   0.0824],
        [ -9.6655,   9.3366]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.0230,  -2.2241],
        [ -8.2260,   7.9219],
        [-12.2367,  11.8615],
        [  1.9397,  -2.1763],
        [ -8.7875,   8.5613],
        [ -5.2925,   5.0474],
        [-10.1609,   9.8198],
        [  5.1129,  -5.3626]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.0663,  -4.2987],
        [  2.6634,  -2.8353],
        [  0.9993,  -1.1850],
        [  2.7930,  -2.9745],
        [  1.9076,  -2.0922],
        [ -6.3526,   6.1028],
        [-10.0596,   9.7417],
        [  1.4803,  -1.6489]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.4309,  -5.8262],
        [ -8.4075,   8.1004],
        [  5.2897,  -5.7325],
        [  3.5233,  -3.7321],
        [  7.9968,  -8.5429],
        [ -6.0935,   5.8332],
        [  6.9502,  -7.4818],
        [-13.0287,  12.5458]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -4.8520,   4.5879],
        [ -8.2663,   7.9528],
        [  6.2276,  -6.5927],
        [-13.3114,  12.8383],
        [ -3.9511,   3.6965],
        [  0.5998,  -0.7409],
        [  3.4879,  -3.6945],
        [  7.2579,  -7.6786]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.1349,   7.8487],
        [-12.5299,  12.1556],
        [  5.4070,  -5.7433],
        [-12.2459,  11.8969],
        [  6.5005,  -6.9650],
        [-13.8717,  13.3610],
        [ -7.3317,   7.0512],
        [  0.9083,  -1.0623]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.7887, -0.9238],
        [ 2.3816, -2.5484],
        [ 3.3329, -3.5242],
        [ 3.1690, -3.3863],
        [-8.8352,  8.5063],
        [ 0.1263, -0.2820],
        [ 3.5738, -3.7933],
        [-8.1398,  7.8493]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.6498,  -2.8456],
        [  3.7210,  -3.9470],
        [ -8.6705,   8.3875],
        [  8.3378,  -8.9708],
        [  3.9365,  -4.2244],
        [-12.2739,  11.8860],
        [ -9.3210,   9.0346],
        [ -8.6350,   8.3142]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.9117,   8.6031],
        [-11.1997,  10.7841],
        [  4.3584,  -4.6760],
        [  4.7390,  -4.9828],
        [ -5.4405,   5.1534],
        [-10.9183,  10.5608],
        [  3.1431,  -3.3581],
        [-11.0837,  10.6874]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.0204,   5.7587],
        [-12.2784,  11.8313],
        [ -1.7927,   1.6045],
        [  3.1609,  -3.3584],
        [  1.8336,  -1.9853],
        [  1.6303,  -1.7940],
        [  6.8826,  -7.2885],
        [  2.8148,  -3.0173]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.3926,   8.0657],
        [  1.0755,  -1.2049],
        [ -4.5494,   4.3112],
        [ -3.9269,   3.6875],
        [  2.5689,  -2.7535],
        [-10.9445,  10.5654],
        [  2.2447,  -2.4388],
        [-10.7742,  10.3720]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.1273,  -3.3360],
        [ -2.5113,   2.3043],
        [ -5.1038,   4.8637],
        [ -4.7634,   4.5582],
        [  5.3604,  -5.7820],
        [  3.6850,  -3.9469],
        [  3.0414,  -3.2687],
        [-11.3450,  10.9757]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.2195,  5.9367],
        [ 2.5414, -2.7638],
        [ 4.0216, -4.2265],
        [-8.1124,  7.8341],
        [ 4.6213, -4.9090],
        [-5.3063,  5.0629],
        [ 1.3156, -1.5197],
        [ 5.9758, -6.3339]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.7583,   5.4921],
        [  4.4126,  -4.6402],
        [  2.7093,  -2.9333],
        [ -0.9068,   0.7272],
        [ -1.3603,   1.1890],
        [  5.1860,  -5.6171],
        [-11.4185,  10.9889],
        [  0.0419,  -0.2023]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 8.8318, -9.5341],
        [-8.4019,  8.0773],
        [-7.7213,  7.4273],
        [-1.4887,  1.3177],
        [-8.1477,  7.8784],
        [-6.4948,  6.1961],
        [-0.7513,  0.5707],
        [ 3.9593, -4.1782]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.4253,  -3.7211],
        [ -3.7602,   3.5713],
        [  3.9275,  -4.1430],
        [ -8.1923,   7.8943],
        [  3.2048,  -3.4167],
        [ -1.6189,   1.4332],
        [  4.5611,  -4.8318],
        [-11.9560,  11.5379]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.2159,  -6.5831],
        [ -9.4854,   9.1623],
        [  5.3509,  -5.6395],
        [  3.7370,  -3.9257],
        [ -5.4843,   5.2170],
        [ -7.1363,   6.8339],
        [-10.2634,   9.8938],
        [ -2.1889,   2.0004]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.0650, -0.0966],
        [ 3.2247, -3.4333],
        [-2.3191,  2.1285],
        [ 4.5716, -4.8580],
        [-4.4855,  4.2364],
        [-9.7306,  9.3827],
        [ 3.7910, -3.9806],
        [-2.1798,  1.9980]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.4510,   0.3147],
        [  4.7685,  -5.0414],
        [ -8.8686,   8.5700],
        [-11.5100,  11.0747],
        [ -5.7948,   5.5668],
        [  2.0227,  -2.2207],
        [  1.5534,  -1.7002],
        [ -7.4437,   7.1543]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.8844,   6.5931],
        [ -6.9353,   6.6446],
        [-11.7522,  11.3715],
        [  0.6632,  -0.8573],
        [  4.8337,  -5.1473],
        [ -6.8187,   6.5836],
        [-11.7274,  11.2965],
        [  3.7927,  -4.1797]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.8732,  11.4936],
        [ -8.2005,   7.9176],
        [  2.7037,  -2.8891],
        [-12.6836,  12.2404],
        [  5.9355,  -6.4212],
        [ -3.3303,   3.1391],
        [ -2.1497,   1.9547],
        [ -8.9036,   8.5460]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.6451,  -1.8025],
        [  5.3517,  -5.6376],
        [  2.5245,  -2.7148],
        [-14.5190,  13.9767],
        [ -7.3853,   7.1006],
        [  3.3260,  -3.5721],
        [-11.0080,  10.6774],
        [-12.9144,  12.5383]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.9575,   8.6075],
        [  0.5114,  -0.6798],
        [-13.0239,  12.6148],
        [  2.3657,  -2.5461],
        [-10.6703,  10.3006],
        [  1.6655,  -1.8347],
        [-10.8555,  10.4550],
        [ -7.0294,   6.7391]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.1463,  -6.5355],
        [ -6.0630,   5.8009],
        [  3.7387,  -3.9609],
        [ -8.1261,   7.8184],
        [-11.8200,  11.4624],
        [ -0.3304,   0.1550],
        [  5.2887,  -5.6153],
        [  4.0697,  -4.3081]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -8.4395,   8.1294],
        [  5.2248,  -5.4822],
        [  5.5798,  -5.8974],
        [ -8.6100,   8.3069],
        [-10.3030,   9.9168],
        [  2.5144,  -2.6923],
        [ -0.3181,   0.1593],
        [-10.0078,   9.6703]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.5593,  -4.7951],
        [ -8.6531,   8.3491],
        [ -8.0495,   7.7764],
        [ -6.6983,   6.4755],
        [-13.5831,  13.1514],
        [ -7.4573,   7.2531],
        [ -9.9691,   9.6122],
        [-11.4791,  11.0649]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -3.0730,   2.8715],
        [-12.0647,  11.6860],
        [ -8.1391,   7.8313],
        [  1.6956,  -1.8674],
        [ -4.4357,   4.2038],
        [  1.7434,  -1.9028],
        [  4.1373,  -4.3973],
        [  6.9692,  -7.2962]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.3350,  13.8708],
        [-11.7485,  11.4018],
        [  4.8303,  -5.1064],
        [ -2.3317,   2.1233],
        [ -8.8195,   8.5421],
        [  5.8426,  -6.1998],
        [  3.1722,  -3.4066],
        [  3.7362,  -3.9634]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.7232,  6.4311],
        [ 5.3837, -5.7189],
        [ 1.3262, -1.4819],
        [-9.1493,  8.8346],
        [-0.6442,  0.4768],
        [-7.4562,  7.1753],
        [-0.8119,  0.6315],
        [ 2.4175, -2.5963]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.6149,  10.2572],
        [ -1.6690,   1.4826],
        [  7.5966,  -8.1454],
        [  4.6761,  -4.9820],
        [  1.0514,  -1.2222],
        [  3.8896,  -4.1091],
        [ -9.8969,   9.5373],
        [ -3.7361,   3.5302]], device='cuda:0')
Iteration Acc 0.8750
tensor([1, 1, 0, 0, 0, 0, 1, 1], device='cuda:0')
tensor([1, 1, 0, 0, 0, 0, 1, 0], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 3.1985, -3.4096],
        [ 3.8516, -4.0961],
        [ 1.9932, -2.1258],
        [ 8.4208, -9.0970],
        [ 0.2052, -0.3606],
        [-6.3214,  6.0664],
        [-5.8384,  5.5949],
        [ 4.5119, -4.7765]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1951,  11.7337],
        [  0.4842,  -0.6408],
        [ -4.2920,   4.0269],
        [ -6.3018,   6.0404],
        [-10.8679,  10.4868],
        [ -7.8247,   7.5637],
        [ -7.8810,   7.6124],
        [  6.0041,  -6.3862]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.4057, -2.6093],
        [-8.2158,  7.9193],
        [-9.7066,  9.3918],
        [ 2.9771, -3.1419],
        [-7.9261,  7.6616],
        [ 3.1135, -3.3452],
        [ 7.4633, -7.9225],
        [-1.2627,  1.1202]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-13.5215,  13.0488],
        [ -8.1974,   7.8928],
        [ -7.0130,   6.7212],
        [  1.7189,  -1.8755],
        [ -9.9182,   9.5318],
        [  1.5610,  -1.7084],
        [  1.3783,  -1.5591],
        [  3.6817,  -3.9082]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4189,   6.1772],
        [-11.1189,  10.7345],
        [  3.9445,  -4.2410],
        [ -6.9576,   6.6809],
        [ -6.4116,   6.1630],
        [  8.3525,  -8.8795],
        [ -0.6352,   0.4434],
        [  1.5660,  -1.7135]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.9778, -3.2201],
        [-5.1041,  4.8561],
        [ 7.4796, -7.9971],
        [ 2.6158, -2.8115],
        [-5.4012,  5.1577],
        [ 2.8413, -3.0745],
        [ 1.8819, -2.0165],
        [ 2.8664, -3.0489]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.3681,   6.0853],
        [ -9.4957,   9.1669],
        [  3.0561,  -3.2552],
        [-13.5585,  13.1273],
        [  6.5884,  -7.0053],
        [-11.2512,  10.9059],
        [  3.8176,  -4.0588],
        [ -5.3488,   5.1020]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.8708,  12.4632],
        [  4.8372,  -5.0624],
        [ -6.7803,   6.4992],
        [ -5.3088,   5.0431],
        [ -9.6565,   9.3336],
        [ -8.5148,   8.2074],
        [ -9.2135,   8.8498],
        [  2.3655,  -2.5456]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.5577,   6.3119],
        [ -9.0054,   8.6798],
        [-11.0346,  10.6432],
        [  3.3907,  -3.6026],
        [ -1.0836,   0.9373],
        [ -5.4954,   5.2537],
        [  2.0307,  -2.2103],
        [ -8.8948,   8.5604]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.1150,  -3.2820],
        [-10.6521,  10.3043],
        [ -1.5215,   1.3189],
        [ -1.9233,   1.7353],
        [  2.2511,  -2.3953],
        [ -8.6921,   8.3917],
        [  1.3968,  -1.5556],
        [  7.3388,  -7.8656]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 1.4031, -1.5517],
        [-5.1437,  4.8800],
        [-2.9114,  2.7119],
        [ 5.8915, -6.3196],
        [-0.6108,  0.4628],
        [-1.0017,  0.8361],
        [-2.5101,  2.3091],
        [-5.2482,  5.0123]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.2800,  11.8735],
        [  5.3416,  -5.6378],
        [-11.3930,  10.9946],
        [ -7.4311,   7.1403],
        [  3.7291,  -3.9560],
        [  1.4295,  -1.5964],
        [  0.6344,  -0.8130],
        [ -6.5842,   6.3090]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.8204,  -7.2792],
        [-10.6023,  10.2041],
        [  0.9737,  -1.1272],
        [ -8.6076,   8.2602],
        [ -7.3188,   7.0304],
        [  7.2669,  -7.7618],
        [ -4.6558,   4.3969],
        [ -6.8793,   6.6108]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 6.1871, -6.6145],
        [-9.4769,  9.1675],
        [-9.7420,  9.3960],
        [-4.2886,  4.0406],
        [-9.0220,  8.7239],
        [ 3.4680, -3.6695],
        [-6.5073,  6.2463],
        [-7.9628,  7.6742]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  2.4130,  -2.5603],
        [  1.6421,  -1.8452],
        [ -6.5431,   6.2541],
        [-10.5223,  10.1386],
        [  0.7497,  -0.8799],
        [  5.4613,  -5.8595],
        [ -1.1216,   0.9184],
        [ -0.9184,   0.7508]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.9028,  -1.0707],
        [ -9.5028,   9.1117],
        [ -8.2477,   7.9485],
        [-12.1874,  11.7914],
        [ -8.9633,   8.6445],
        [ -8.2272,   7.8836],
        [ -6.8134,   6.4949],
        [  1.4181,  -1.6100]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.3377,  11.9086],
        [ -1.4144,   1.2304],
        [  1.4767,  -1.6254],
        [ -4.0634,   3.8277],
        [  5.9975,  -6.3666],
        [ -0.7110,   0.5173],
        [ -1.9727,   1.7762],
        [  8.2103,  -8.8850]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-1.2185e+01,  1.1769e+01],
        [-6.1529e+00,  5.8883e+00],
        [ 5.9733e-03, -1.5221e-01],
        [ 4.8592e+00, -5.1679e+00],
        [ 2.4173e+00, -2.6070e+00],
        [ 3.4642e+00, -3.6573e+00],
        [-9.2639e+00,  8.9270e+00],
        [-1.1195e+01,  1.0790e+01]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.3671,  10.0354],
        [ -4.1805,   3.9354],
        [ -6.3291,   6.1007],
        [  8.3789,  -9.0342],
        [ -7.9818,   7.7276],
        [  5.3448,  -5.7226],
        [ -8.6050,   8.3105],
        [ -4.6251,   4.3954]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 0.6601, -0.8270],
        [ 4.1800, -4.4397],
        [ 0.6681, -0.9438],
        [ 6.7744, -7.2883],
        [ 1.2720, -1.4330],
        [ 3.8003, -3.9808],
        [ 0.6587, -0.8677],
        [-2.8785,  2.6711]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-9.0817,  8.7569],
        [ 3.3615, -3.5393],
        [ 5.0324, -5.3387],
        [ 5.1322, -5.4466],
        [-3.4624,  3.2350],
        [-8.6851,  8.3537],
        [-9.5941,  9.2296],
        [ 3.0520, -3.3035]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.4933,   6.2771],
        [-15.3436,  14.8509],
        [  3.2260,  -3.4215],
        [-10.2814,   9.9310],
        [  1.5083,  -1.6838],
        [ -9.0973,   8.7396],
        [ -9.9851,   9.5979],
        [-12.6873,  12.2791]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.9117,  -4.1261],
        [-12.8367,  12.4511],
        [  2.9722,  -3.1610],
        [  6.4035,  -6.7911],
        [  7.3844,  -7.8860],
        [  2.8885,  -3.0916],
        [  5.3493,  -5.7574],
        [-11.5387,  11.1258]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.5445,  12.1871],
        [ -9.6436,   9.3261],
        [ -6.7219,   6.4276],
        [ -5.6203,   5.3965],
        [ -8.5312,   8.2387],
        [ -7.2373,   6.9517],
        [-13.8450,  13.4034],
        [-11.0571,  10.7214]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.1287,  -4.3804],
        [ -8.8741,   8.5329],
        [  9.1576,  -9.8418],
        [-10.4231,  10.0718],
        [  4.5411,  -4.7377],
        [  3.2250,  -3.4578],
        [  2.0512,  -2.2246],
        [ -6.7208,   6.4608]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 7.6704, -8.2176],
        [ 4.3436, -4.5320],
        [-7.2757,  7.0054],
        [-8.5423,  8.2420],
        [ 3.5897, -3.7863],
        [ 5.8115, -6.1344],
        [ 2.9939, -3.2207],
        [ 2.1236, -2.2848]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -0.3451,   0.2115],
        [ -3.6672,   3.4467],
        [  2.1674,  -2.3851],
        [-10.6545,  10.2601],
        [  8.0663,  -8.6321],
        [-12.0520,  11.6010],
        [-11.7306,  11.3594],
        [-11.5896,  11.1735]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.4851,   5.2172],
        [-12.0808,  11.7279],
        [ -7.6146,   7.3199],
        [ -8.3709,   8.0774],
        [  5.1396,  -5.4104],
        [ -7.4019,   7.1203],
        [  1.1306,  -1.2847],
        [  2.5880,  -2.7915]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.2603,   8.9289],
        [  8.9175,  -9.5632],
        [  0.0274,  -0.1709],
        [ -5.4728,   5.2132],
        [ -7.3827,   7.1641],
        [ -8.4343,   8.1156],
        [-12.0930,  11.6676],
        [ -8.5655,   8.2688]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.3366,   2.1786],
        [  2.1461,  -2.2628],
        [-11.0908,  10.6613],
        [ -9.9926,   9.6362],
        [ -2.8398,   2.6534],
        [  6.7979,  -7.2534],
        [  3.4991,  -3.7215],
        [-12.5150,  12.1088]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.6030,  12.1614],
        [  5.5159,  -5.8676],
        [  7.3290,  -7.8143],
        [ -5.4195,   5.1635],
        [  6.5879,  -7.0312],
        [  0.5346,  -0.6953],
        [  3.7583,  -3.9713],
        [  1.2982,  -1.4707]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -2.2742,   2.0692],
        [-10.1856,   9.8109],
        [-11.9848,  11.6461],
        [-13.1920,  12.6805],
        [  5.6771,  -5.9731],
        [  5.8692,  -6.2759],
        [-11.3428,  11.0017],
        [  0.9001,  -1.0784]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.8117,  -5.0624],
        [ -7.4375,   7.1701],
        [ -9.2187,   8.8963],
        [-10.6558,  10.2638],
        [ -6.7528,   6.4689],
        [  3.3694,  -3.5315],
        [  2.2036,  -2.4079],
        [ -9.2931,   8.9582]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3230,   8.9914],
        [ -9.1537,   8.8346],
        [ -2.7345,   2.5438],
        [  6.7587,  -7.2528],
        [ -3.4858,   3.2742],
        [ -3.3309,   3.1120],
        [-11.7455,  11.3807],
        [  6.4555,  -6.9012]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.9903,  12.5946],
        [  2.5971,  -2.7690],
        [ -8.3063,   7.9696],
        [-10.2759,   9.9107],
        [  2.7415,  -2.9138],
        [-10.4432,  10.0847],
        [  4.7041,  -5.0017],
        [-14.6659,  14.1547]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.8780,  12.4365],
        [ -9.8313,   9.4598],
        [ -0.3464,   0.1865],
        [  2.9129,  -3.0474],
        [  5.2093,  -5.5743],
        [ -8.1566,   7.8388],
        [  3.5676,  -3.7560],
        [  9.7432, -10.4787]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 8.8201, -9.5447],
        [-4.9403,  4.6710],
        [-9.9859,  9.6151],
        [ 0.4424, -0.6124],
        [ 1.7667, -2.0380],
        [-1.1146,  0.9592],
        [-2.9490,  2.6926],
        [-9.4846,  9.1607]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.5812,  -0.7345],
        [ -1.8808,   1.6895],
        [  5.9833,  -6.4347],
        [  3.3618,  -3.5771],
        [-10.0190,   9.6855],
        [-11.1623,  10.8434],
        [ -8.5655,   8.2730],
        [ -6.3751,   6.1207]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-12.1563,  11.7159],
        [ -8.1050,   7.8025],
        [ -4.5075,   4.1675],
        [ -6.9349,   6.6925],
        [-12.0703,  11.6041],
        [  3.7107,  -3.9144],
        [-13.2909,  12.8720],
        [ -9.2599,   8.9421]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.9579,  -2.1356],
        [-12.3845,  11.8994],
        [-11.5032,  11.1181],
        [ -0.3390,   0.1605],
        [  1.2020,  -1.3613],
        [ -7.5064,   7.2555],
        [ -7.9469,   7.6596],
        [  4.2423,  -4.5404]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.9300,  7.6106],
        [ 4.9690, -5.2920],
        [-8.0948,  7.7690],
        [ 3.1224, -3.3883],
        [-0.7563,  0.5872],
        [-8.3797,  8.1154],
        [-9.2081,  8.9229],
        [ 2.0555, -2.2241]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-11.7312,  11.2813],
        [  0.1539,  -0.3197],
        [  4.2413,  -4.4685],
        [  1.8530,  -2.0042],
        [  7.7120,  -8.1791],
        [  0.6323,  -0.7858],
        [ -2.3279,   2.1277],
        [  3.4679,  -3.6853]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-7.5192e+00,  7.2488e+00],
        [-1.2982e+01,  1.2528e+01],
        [-2.4152e-03, -1.4947e-01],
        [-1.2372e+01,  1.1934e+01],
        [-1.1070e+01,  1.0658e+01],
        [-5.5998e+00,  5.3730e+00],
        [ 2.0177e+00, -2.1830e+00],
        [ 1.9764e+00, -2.1539e+00]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.3337,   9.0087],
        [-11.2971,  10.8872],
        [  0.3243,  -0.4576],
        [  1.2645,  -1.4111],
        [  7.5288,  -7.9986],
        [  1.3842,  -1.5504],
        [ -8.3272,   8.0908],
        [ -6.3990,   6.1226]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.3392,  -3.5361],
        [  1.6663,  -1.8492],
        [-10.4967,  10.1224],
        [  4.3692,  -4.6356],
        [-10.2692,   9.8844],
        [  5.1631,  -5.4865],
        [ -0.1158,  -0.0258],
        [  4.7150,  -5.0175]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  3.4005,  -3.5891],
        [ -5.9676,   5.7165],
        [ -1.5161,   1.3343],
        [-10.7375,  10.3632],
        [ -0.8277,   0.6787],
        [ -0.5083,   0.3428],
        [ -9.1201,   8.8263],
        [  3.2414,  -3.5199]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  0.5726,  -0.7263],
        [-10.1498,   9.8124],
        [  4.4201,  -4.6183],
        [ -9.0244,   8.6927],
        [-12.1888,  11.7657],
        [  3.5816,  -3.8204],
        [ -7.9065,   7.5994],
        [-11.8310,  11.4708]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ 2.0120, -2.1667],
        [-9.1840,  8.8922],
        [ 5.8440, -6.2330],
        [-0.8023,  0.6236],
        [-3.7017,  3.4834],
        [-8.1168,  7.8447],
        [-2.0254,  1.8356],
        [ 6.3133, -6.7171]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-2.6755,  2.4637],
        [ 7.2360, -7.7124],
        [ 7.3426, -7.8550],
        [-4.1033,  3.8624],
        [-8.8398,  8.5606],
        [ 3.3830, -3.6077],
        [ 7.0762, -7.6048],
        [ 4.3713, -4.6289]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  1.0103,  -1.1419],
        [  2.0046,  -2.1677],
        [-10.2389,   9.9162],
        [ -9.9780,   9.5536],
        [-10.6028,  10.2891],
        [  1.8262,  -2.0061],
        [-10.5205,  10.1111],
        [ -9.1770,   8.8322]], device='cuda:0')
Iteration Acc 1.0000
tensor([0, 0, 1, 1, 1, 0, 1, 1], device='cuda:0')
tensor([0, 0, 1, 1, 1, 0, 1, 1], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-14.0275,  13.6188],
        [  3.9700,  -4.1643],
        [ -6.5256,   6.2369],
        [ -3.4344,   3.2069],
        [  5.2441,  -5.6728],
        [  4.3196,  -4.5960],
        [  8.4856,  -8.9889],
        [-14.5670,  14.1121]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.3925,   6.1393],
        [ -7.0899,   6.8211],
        [  5.4704,  -5.8803],
        [  2.6973,  -2.8771],
        [ -8.8038,   8.4767],
        [ -1.8384,   1.6629],
        [-11.3885,  10.9798],
        [ -1.0204,   0.8382]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  5.1616,  -5.4384],
        [ -2.6167,   2.4388],
        [ -9.0511,   8.8160],
        [-15.1235,  14.6225],
        [  2.4148,  -2.6186],
        [  4.9017,  -5.2076],
        [  6.2776,  -6.7317],
        [  0.9813,  -1.1371]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  6.8555,  -7.3237],
        [ -5.4254,   5.1844],
        [ -5.8043,   5.5385],
        [  4.9153,  -5.1762],
        [ -1.4263,   1.2248],
        [-12.0605,  11.6451],
        [ -8.8524,   8.5101],
        [  0.5055,  -0.6565]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[  4.2848,  -4.5596],
        [  2.6659,  -2.8898],
        [ -8.5384,   8.2362],
        [  0.1368,  -0.2753],
        [  0.8814,  -1.0820],
        [-11.9526,  11.5128],
        [  4.6610,  -4.9154],
        [  3.9154,  -4.1815]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-10.9800,  10.5574],
        [-13.7060,  13.2631],
        [-12.3671,  11.9493],
        [-10.5435,  10.1904],
        [ -9.4187,   9.1414],
        [ -9.6628,   9.3572],
        [ -0.2506,   0.0668],
        [  4.0813,  -4.2900]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-6.2494,  5.9851],
        [-5.1185,  4.8876],
        [-7.5000,  7.1944],
        [-3.0541,  2.8548],
        [-5.8560,  5.6028],
        [ 0.5164, -0.6761],
        [-3.4742,  3.2460],
        [-5.7352,  5.4699]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -9.9082,   9.5873],
        [-11.4410,  11.0565],
        [  1.8628,  -2.0042],
        [  0.7088,  -0.9213],
        [  5.4577,  -5.7754],
        [  5.2510,  -5.6290],
        [ -3.6104,   3.4044],
        [ -0.0728,  -0.1082]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.9803,   6.6970],
        [  3.0505,  -3.1995],
        [ -0.5232,   0.3648],
        [ -6.4520,   6.1821],
        [  4.5633,  -4.8036],
        [  0.0560,  -0.2446],
        [  2.3604,  -2.5331],
        [  9.4133, -10.0690]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -5.8713,   5.6224],
        [  7.8962,  -8.3421],
        [ -5.8581,   5.5881],
        [  6.7419,  -7.2285],
        [  1.6202,  -1.8478],
        [  0.9614,  -1.1639],
        [  5.7985,  -6.1977],
        [-14.1450,  13.6205]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[-0.2715,  0.1176],
        [ 5.4186, -5.7368],
        [-0.3210,  0.1473],
        [ 5.0608, -5.3002],
        [-3.5127,  3.2955],
        [-6.9419,  6.6755],
        [-2.3599,  2.1697],
        [ 4.1962, -4.4475]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -7.9982,   7.7495],
        [-14.1935,  13.7714],
        [  6.7789,  -7.2028],
        [-12.5823,  12.1916],
        [ -8.4259,   8.1082],
        [ -9.1866,   8.8724],
        [-13.4303,  12.9690],
        [-11.5157,  11.1468]], device='cuda:0')
size of data loader: 8
outputs.shape = torch.Size([8, 2])
tensor([[ -6.0134,   5.7976],
        [  8.3731,  -8.9636],
        [-13.8602,  13.3375],
        [-11.1755,  10.7921],
        [ -4.0790,   3.8266],
        [-10.8382,  10.3867],
        [-12.3260,  11.9155],
        [  2.7837,  -2.9713]], device='cuda:0')
size of data loader: 1
outputs.shape = torch.Size([1, 2])
tensor([[ 3.9760, -4.2181]], device='cuda:0')
Test Acc: 0.9044
torch.Size([10905, 2])
Hello world!!!
